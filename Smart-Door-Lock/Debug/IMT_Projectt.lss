
IMT_Projectt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002582  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000174  00800060  00002582  000025f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001578  00000000  00000000  0000276c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000e13  00000000  00000000  00003ce4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00004af7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00004c37  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00004da7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  000069f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  000078db  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00008688  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  000087e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00008a75  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00009243  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e8       	ldi	r30, 0x82	; 130
      68:	f5 e2       	ldi	r31, 0x25	; 37
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a4 3d       	cpi	r26, 0xD4	; 212
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 1b 0a 	call	0x1436	; 0x1436 <main>
      7a:	0c 94 bf 12 	jmp	0x257e	; 0x257e <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 88 12 	jmp	0x2510	; 0x2510 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	ac ec       	ldi	r26, 0xCC	; 204
     118:	b1 e0       	ldi	r27, 0x01	; 1
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 a4 12 	jmp	0x2548	; 0x2548 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 94 12 	jmp	0x2528	; 0x2528 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 b0 12 	jmp	0x2560	; 0x2560 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 94 12 	jmp	0x2528	; 0x2528 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 b0 12 	jmp	0x2560	; 0x2560 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 88 12 	jmp	0x2510	; 0x2510 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	8c ec       	ldi	r24, 0xCC	; 204
     486:	91 e0       	ldi	r25, 0x01	; 1
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 a4 12 	jmp	0x2548	; 0x2548 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 94 12 	jmp	0x2528	; 0x2528 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 b0 12 	jmp	0x2560	; 0x2560 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 94 12 	jmp	0x2528	; 0x2528 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 b0 12 	jmp	0x2560	; 0x2560 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 94 12 	jmp	0x2528	; 0x2528 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 b0 12 	jmp	0x2560	; 0x2560 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 98 12 	jmp	0x2530	; 0x2530 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 b4 12 	jmp	0x2568	; 0x2568 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_vidSetPinDirection>:
#include "register.h"
#include  "DIO.h"


void DIO_vidSetPinDirection(u8 port, u8 pin, u8 dir)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	00 d0       	rcall	.+0      	; 0xb3c <DIO_vidSetPinDirection+0x6>
     b3c:	00 d0       	rcall	.+0      	; 0xb3e <DIO_vidSetPinDirection+0x8>
     b3e:	0f 92       	push	r0
     b40:	cd b7       	in	r28, 0x3d	; 61
     b42:	de b7       	in	r29, 0x3e	; 62
     b44:	89 83       	std	Y+1, r24	; 0x01
     b46:	6a 83       	std	Y+2, r22	; 0x02
     b48:	4b 83       	std	Y+3, r20	; 0x03
	switch (port)
     b4a:	89 81       	ldd	r24, Y+1	; 0x01
     b4c:	28 2f       	mov	r18, r24
     b4e:	30 e0       	ldi	r19, 0x00	; 0
     b50:	3d 83       	std	Y+5, r19	; 0x05
     b52:	2c 83       	std	Y+4, r18	; 0x04
     b54:	8c 81       	ldd	r24, Y+4	; 0x04
     b56:	9d 81       	ldd	r25, Y+5	; 0x05
     b58:	81 30       	cpi	r24, 0x01	; 1
     b5a:	91 05       	cpc	r25, r1
     b5c:	09 f4       	brne	.+2      	; 0xb60 <DIO_vidSetPinDirection+0x2a>
     b5e:	47 c0       	rjmp	.+142    	; 0xbee <DIO_vidSetPinDirection+0xb8>
     b60:	2c 81       	ldd	r18, Y+4	; 0x04
     b62:	3d 81       	ldd	r19, Y+5	; 0x05
     b64:	22 30       	cpi	r18, 0x02	; 2
     b66:	31 05       	cpc	r19, r1
     b68:	2c f4       	brge	.+10     	; 0xb74 <DIO_vidSetPinDirection+0x3e>
     b6a:	8c 81       	ldd	r24, Y+4	; 0x04
     b6c:	9d 81       	ldd	r25, Y+5	; 0x05
     b6e:	00 97       	sbiw	r24, 0x00	; 0
     b70:	71 f0       	breq	.+28     	; 0xb8e <DIO_vidSetPinDirection+0x58>
     b72:	cb c0       	rjmp	.+406    	; 0xd0a <DIO_vidSetPinDirection+0x1d4>
     b74:	2c 81       	ldd	r18, Y+4	; 0x04
     b76:	3d 81       	ldd	r19, Y+5	; 0x05
     b78:	22 30       	cpi	r18, 0x02	; 2
     b7a:	31 05       	cpc	r19, r1
     b7c:	09 f4       	brne	.+2      	; 0xb80 <DIO_vidSetPinDirection+0x4a>
     b7e:	67 c0       	rjmp	.+206    	; 0xc4e <DIO_vidSetPinDirection+0x118>
     b80:	8c 81       	ldd	r24, Y+4	; 0x04
     b82:	9d 81       	ldd	r25, Y+5	; 0x05
     b84:	83 30       	cpi	r24, 0x03	; 3
     b86:	91 05       	cpc	r25, r1
     b88:	09 f4       	brne	.+2      	; 0xb8c <DIO_vidSetPinDirection+0x56>
     b8a:	91 c0       	rjmp	.+290    	; 0xcae <DIO_vidSetPinDirection+0x178>
     b8c:	be c0       	rjmp	.+380    	; 0xd0a <DIO_vidSetPinDirection+0x1d4>
	{
	case 0: {
		if (dir==0)
     b8e:	8b 81       	ldd	r24, Y+3	; 0x03
     b90:	88 23       	and	r24, r24
     b92:	a9 f4       	brne	.+42     	; 0xbbe <DIO_vidSetPinDirection+0x88>
			clr_bit(DDRA, pin);
     b94:	aa e3       	ldi	r26, 0x3A	; 58
     b96:	b0 e0       	ldi	r27, 0x00	; 0
     b98:	ea e3       	ldi	r30, 0x3A	; 58
     b9a:	f0 e0       	ldi	r31, 0x00	; 0
     b9c:	80 81       	ld	r24, Z
     b9e:	48 2f       	mov	r20, r24
     ba0:	8a 81       	ldd	r24, Y+2	; 0x02
     ba2:	28 2f       	mov	r18, r24
     ba4:	30 e0       	ldi	r19, 0x00	; 0
     ba6:	81 e0       	ldi	r24, 0x01	; 1
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	02 2e       	mov	r0, r18
     bac:	02 c0       	rjmp	.+4      	; 0xbb2 <DIO_vidSetPinDirection+0x7c>
     bae:	88 0f       	add	r24, r24
     bb0:	99 1f       	adc	r25, r25
     bb2:	0a 94       	dec	r0
     bb4:	e2 f7       	brpl	.-8      	; 0xbae <DIO_vidSetPinDirection+0x78>
     bb6:	80 95       	com	r24
     bb8:	84 23       	and	r24, r20
     bba:	8c 93       	st	X, r24
     bbc:	a6 c0       	rjmp	.+332    	; 0xd0a <DIO_vidSetPinDirection+0x1d4>
		else if (dir==1)
     bbe:	8b 81       	ldd	r24, Y+3	; 0x03
     bc0:	81 30       	cpi	r24, 0x01	; 1
     bc2:	09 f0       	breq	.+2      	; 0xbc6 <DIO_vidSetPinDirection+0x90>
     bc4:	a2 c0       	rjmp	.+324    	; 0xd0a <DIO_vidSetPinDirection+0x1d4>
			set_bit(DDRA, pin);
     bc6:	aa e3       	ldi	r26, 0x3A	; 58
     bc8:	b0 e0       	ldi	r27, 0x00	; 0
     bca:	ea e3       	ldi	r30, 0x3A	; 58
     bcc:	f0 e0       	ldi	r31, 0x00	; 0
     bce:	80 81       	ld	r24, Z
     bd0:	48 2f       	mov	r20, r24
     bd2:	8a 81       	ldd	r24, Y+2	; 0x02
     bd4:	28 2f       	mov	r18, r24
     bd6:	30 e0       	ldi	r19, 0x00	; 0
     bd8:	81 e0       	ldi	r24, 0x01	; 1
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	02 2e       	mov	r0, r18
     bde:	02 c0       	rjmp	.+4      	; 0xbe4 <DIO_vidSetPinDirection+0xae>
     be0:	88 0f       	add	r24, r24
     be2:	99 1f       	adc	r25, r25
     be4:	0a 94       	dec	r0
     be6:	e2 f7       	brpl	.-8      	; 0xbe0 <DIO_vidSetPinDirection+0xaa>
     be8:	84 2b       	or	r24, r20
     bea:	8c 93       	st	X, r24
     bec:	8e c0       	rjmp	.+284    	; 0xd0a <DIO_vidSetPinDirection+0x1d4>
		break;
	}
	case 1: {
		if (dir==0)
     bee:	8b 81       	ldd	r24, Y+3	; 0x03
     bf0:	88 23       	and	r24, r24
     bf2:	a9 f4       	brne	.+42     	; 0xc1e <DIO_vidSetPinDirection+0xe8>
			clr_bit(DDRB, pin);
     bf4:	a7 e3       	ldi	r26, 0x37	; 55
     bf6:	b0 e0       	ldi	r27, 0x00	; 0
     bf8:	e7 e3       	ldi	r30, 0x37	; 55
     bfa:	f0 e0       	ldi	r31, 0x00	; 0
     bfc:	80 81       	ld	r24, Z
     bfe:	48 2f       	mov	r20, r24
     c00:	8a 81       	ldd	r24, Y+2	; 0x02
     c02:	28 2f       	mov	r18, r24
     c04:	30 e0       	ldi	r19, 0x00	; 0
     c06:	81 e0       	ldi	r24, 0x01	; 1
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	02 2e       	mov	r0, r18
     c0c:	02 c0       	rjmp	.+4      	; 0xc12 <DIO_vidSetPinDirection+0xdc>
     c0e:	88 0f       	add	r24, r24
     c10:	99 1f       	adc	r25, r25
     c12:	0a 94       	dec	r0
     c14:	e2 f7       	brpl	.-8      	; 0xc0e <DIO_vidSetPinDirection+0xd8>
     c16:	80 95       	com	r24
     c18:	84 23       	and	r24, r20
     c1a:	8c 93       	st	X, r24
     c1c:	76 c0       	rjmp	.+236    	; 0xd0a <DIO_vidSetPinDirection+0x1d4>
		else if (dir==1)
     c1e:	8b 81       	ldd	r24, Y+3	; 0x03
     c20:	81 30       	cpi	r24, 0x01	; 1
     c22:	09 f0       	breq	.+2      	; 0xc26 <DIO_vidSetPinDirection+0xf0>
     c24:	72 c0       	rjmp	.+228    	; 0xd0a <DIO_vidSetPinDirection+0x1d4>
			set_bit(DDRB, pin);
     c26:	a7 e3       	ldi	r26, 0x37	; 55
     c28:	b0 e0       	ldi	r27, 0x00	; 0
     c2a:	e7 e3       	ldi	r30, 0x37	; 55
     c2c:	f0 e0       	ldi	r31, 0x00	; 0
     c2e:	80 81       	ld	r24, Z
     c30:	48 2f       	mov	r20, r24
     c32:	8a 81       	ldd	r24, Y+2	; 0x02
     c34:	28 2f       	mov	r18, r24
     c36:	30 e0       	ldi	r19, 0x00	; 0
     c38:	81 e0       	ldi	r24, 0x01	; 1
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	02 2e       	mov	r0, r18
     c3e:	02 c0       	rjmp	.+4      	; 0xc44 <DIO_vidSetPinDirection+0x10e>
     c40:	88 0f       	add	r24, r24
     c42:	99 1f       	adc	r25, r25
     c44:	0a 94       	dec	r0
     c46:	e2 f7       	brpl	.-8      	; 0xc40 <DIO_vidSetPinDirection+0x10a>
     c48:	84 2b       	or	r24, r20
     c4a:	8c 93       	st	X, r24
     c4c:	5e c0       	rjmp	.+188    	; 0xd0a <DIO_vidSetPinDirection+0x1d4>
		break;
	}
	case 2: {
		if (dir==0)
     c4e:	8b 81       	ldd	r24, Y+3	; 0x03
     c50:	88 23       	and	r24, r24
     c52:	a9 f4       	brne	.+42     	; 0xc7e <DIO_vidSetPinDirection+0x148>
			clr_bit(DDRC, pin);
     c54:	a4 e3       	ldi	r26, 0x34	; 52
     c56:	b0 e0       	ldi	r27, 0x00	; 0
     c58:	e4 e3       	ldi	r30, 0x34	; 52
     c5a:	f0 e0       	ldi	r31, 0x00	; 0
     c5c:	80 81       	ld	r24, Z
     c5e:	48 2f       	mov	r20, r24
     c60:	8a 81       	ldd	r24, Y+2	; 0x02
     c62:	28 2f       	mov	r18, r24
     c64:	30 e0       	ldi	r19, 0x00	; 0
     c66:	81 e0       	ldi	r24, 0x01	; 1
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	02 2e       	mov	r0, r18
     c6c:	02 c0       	rjmp	.+4      	; 0xc72 <DIO_vidSetPinDirection+0x13c>
     c6e:	88 0f       	add	r24, r24
     c70:	99 1f       	adc	r25, r25
     c72:	0a 94       	dec	r0
     c74:	e2 f7       	brpl	.-8      	; 0xc6e <DIO_vidSetPinDirection+0x138>
     c76:	80 95       	com	r24
     c78:	84 23       	and	r24, r20
     c7a:	8c 93       	st	X, r24
     c7c:	46 c0       	rjmp	.+140    	; 0xd0a <DIO_vidSetPinDirection+0x1d4>
		else if (dir==1)
     c7e:	8b 81       	ldd	r24, Y+3	; 0x03
     c80:	81 30       	cpi	r24, 0x01	; 1
     c82:	09 f0       	breq	.+2      	; 0xc86 <DIO_vidSetPinDirection+0x150>
     c84:	42 c0       	rjmp	.+132    	; 0xd0a <DIO_vidSetPinDirection+0x1d4>
			set_bit(DDRC, pin);
     c86:	a4 e3       	ldi	r26, 0x34	; 52
     c88:	b0 e0       	ldi	r27, 0x00	; 0
     c8a:	e4 e3       	ldi	r30, 0x34	; 52
     c8c:	f0 e0       	ldi	r31, 0x00	; 0
     c8e:	80 81       	ld	r24, Z
     c90:	48 2f       	mov	r20, r24
     c92:	8a 81       	ldd	r24, Y+2	; 0x02
     c94:	28 2f       	mov	r18, r24
     c96:	30 e0       	ldi	r19, 0x00	; 0
     c98:	81 e0       	ldi	r24, 0x01	; 1
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	02 2e       	mov	r0, r18
     c9e:	02 c0       	rjmp	.+4      	; 0xca4 <DIO_vidSetPinDirection+0x16e>
     ca0:	88 0f       	add	r24, r24
     ca2:	99 1f       	adc	r25, r25
     ca4:	0a 94       	dec	r0
     ca6:	e2 f7       	brpl	.-8      	; 0xca0 <DIO_vidSetPinDirection+0x16a>
     ca8:	84 2b       	or	r24, r20
     caa:	8c 93       	st	X, r24
     cac:	2e c0       	rjmp	.+92     	; 0xd0a <DIO_vidSetPinDirection+0x1d4>
		break;
	}
	case 3: {
		if (dir==0)
     cae:	8b 81       	ldd	r24, Y+3	; 0x03
     cb0:	88 23       	and	r24, r24
     cb2:	a9 f4       	brne	.+42     	; 0xcde <DIO_vidSetPinDirection+0x1a8>
			clr_bit(DDRD, pin);
     cb4:	a1 e3       	ldi	r26, 0x31	; 49
     cb6:	b0 e0       	ldi	r27, 0x00	; 0
     cb8:	e1 e3       	ldi	r30, 0x31	; 49
     cba:	f0 e0       	ldi	r31, 0x00	; 0
     cbc:	80 81       	ld	r24, Z
     cbe:	48 2f       	mov	r20, r24
     cc0:	8a 81       	ldd	r24, Y+2	; 0x02
     cc2:	28 2f       	mov	r18, r24
     cc4:	30 e0       	ldi	r19, 0x00	; 0
     cc6:	81 e0       	ldi	r24, 0x01	; 1
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	02 2e       	mov	r0, r18
     ccc:	02 c0       	rjmp	.+4      	; 0xcd2 <DIO_vidSetPinDirection+0x19c>
     cce:	88 0f       	add	r24, r24
     cd0:	99 1f       	adc	r25, r25
     cd2:	0a 94       	dec	r0
     cd4:	e2 f7       	brpl	.-8      	; 0xcce <DIO_vidSetPinDirection+0x198>
     cd6:	80 95       	com	r24
     cd8:	84 23       	and	r24, r20
     cda:	8c 93       	st	X, r24
     cdc:	16 c0       	rjmp	.+44     	; 0xd0a <DIO_vidSetPinDirection+0x1d4>
		else if (dir==1)
     cde:	8b 81       	ldd	r24, Y+3	; 0x03
     ce0:	81 30       	cpi	r24, 0x01	; 1
     ce2:	99 f4       	brne	.+38     	; 0xd0a <DIO_vidSetPinDirection+0x1d4>
			set_bit(DDRD, pin);
     ce4:	a1 e3       	ldi	r26, 0x31	; 49
     ce6:	b0 e0       	ldi	r27, 0x00	; 0
     ce8:	e1 e3       	ldi	r30, 0x31	; 49
     cea:	f0 e0       	ldi	r31, 0x00	; 0
     cec:	80 81       	ld	r24, Z
     cee:	48 2f       	mov	r20, r24
     cf0:	8a 81       	ldd	r24, Y+2	; 0x02
     cf2:	28 2f       	mov	r18, r24
     cf4:	30 e0       	ldi	r19, 0x00	; 0
     cf6:	81 e0       	ldi	r24, 0x01	; 1
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	02 2e       	mov	r0, r18
     cfc:	02 c0       	rjmp	.+4      	; 0xd02 <DIO_vidSetPinDirection+0x1cc>
     cfe:	88 0f       	add	r24, r24
     d00:	99 1f       	adc	r25, r25
     d02:	0a 94       	dec	r0
     d04:	e2 f7       	brpl	.-8      	; 0xcfe <DIO_vidSetPinDirection+0x1c8>
     d06:	84 2b       	or	r24, r20
     d08:	8c 93       	st	X, r24
			break;
	}
	}
}
     d0a:	0f 90       	pop	r0
     d0c:	0f 90       	pop	r0
     d0e:	0f 90       	pop	r0
     d10:	0f 90       	pop	r0
     d12:	0f 90       	pop	r0
     d14:	cf 91       	pop	r28
     d16:	df 91       	pop	r29
     d18:	08 95       	ret

00000d1a <DIO_vidWritePinValue>:

void DIO_vidWritePinValue(u8 port, u8 pin, u8 value)
{
     d1a:	df 93       	push	r29
     d1c:	cf 93       	push	r28
     d1e:	00 d0       	rcall	.+0      	; 0xd20 <DIO_vidWritePinValue+0x6>
     d20:	00 d0       	rcall	.+0      	; 0xd22 <DIO_vidWritePinValue+0x8>
     d22:	0f 92       	push	r0
     d24:	cd b7       	in	r28, 0x3d	; 61
     d26:	de b7       	in	r29, 0x3e	; 62
     d28:	89 83       	std	Y+1, r24	; 0x01
     d2a:	6a 83       	std	Y+2, r22	; 0x02
     d2c:	4b 83       	std	Y+3, r20	; 0x03
	switch (port)
     d2e:	89 81       	ldd	r24, Y+1	; 0x01
     d30:	28 2f       	mov	r18, r24
     d32:	30 e0       	ldi	r19, 0x00	; 0
     d34:	3d 83       	std	Y+5, r19	; 0x05
     d36:	2c 83       	std	Y+4, r18	; 0x04
     d38:	8c 81       	ldd	r24, Y+4	; 0x04
     d3a:	9d 81       	ldd	r25, Y+5	; 0x05
     d3c:	81 30       	cpi	r24, 0x01	; 1
     d3e:	91 05       	cpc	r25, r1
     d40:	09 f4       	brne	.+2      	; 0xd44 <DIO_vidWritePinValue+0x2a>
     d42:	47 c0       	rjmp	.+142    	; 0xdd2 <DIO_vidWritePinValue+0xb8>
     d44:	2c 81       	ldd	r18, Y+4	; 0x04
     d46:	3d 81       	ldd	r19, Y+5	; 0x05
     d48:	22 30       	cpi	r18, 0x02	; 2
     d4a:	31 05       	cpc	r19, r1
     d4c:	2c f4       	brge	.+10     	; 0xd58 <DIO_vidWritePinValue+0x3e>
     d4e:	8c 81       	ldd	r24, Y+4	; 0x04
     d50:	9d 81       	ldd	r25, Y+5	; 0x05
     d52:	00 97       	sbiw	r24, 0x00	; 0
     d54:	71 f0       	breq	.+28     	; 0xd72 <DIO_vidWritePinValue+0x58>
     d56:	cb c0       	rjmp	.+406    	; 0xeee <DIO_vidWritePinValue+0x1d4>
     d58:	2c 81       	ldd	r18, Y+4	; 0x04
     d5a:	3d 81       	ldd	r19, Y+5	; 0x05
     d5c:	22 30       	cpi	r18, 0x02	; 2
     d5e:	31 05       	cpc	r19, r1
     d60:	09 f4       	brne	.+2      	; 0xd64 <DIO_vidWritePinValue+0x4a>
     d62:	67 c0       	rjmp	.+206    	; 0xe32 <DIO_vidWritePinValue+0x118>
     d64:	8c 81       	ldd	r24, Y+4	; 0x04
     d66:	9d 81       	ldd	r25, Y+5	; 0x05
     d68:	83 30       	cpi	r24, 0x03	; 3
     d6a:	91 05       	cpc	r25, r1
     d6c:	09 f4       	brne	.+2      	; 0xd70 <DIO_vidWritePinValue+0x56>
     d6e:	91 c0       	rjmp	.+290    	; 0xe92 <DIO_vidWritePinValue+0x178>
     d70:	be c0       	rjmp	.+380    	; 0xeee <DIO_vidWritePinValue+0x1d4>
	{
	case 0: {
		if (value==0)
     d72:	8b 81       	ldd	r24, Y+3	; 0x03
     d74:	88 23       	and	r24, r24
     d76:	a9 f4       	brne	.+42     	; 0xda2 <DIO_vidWritePinValue+0x88>
			clr_bit(PORTA, pin);
     d78:	ab e3       	ldi	r26, 0x3B	; 59
     d7a:	b0 e0       	ldi	r27, 0x00	; 0
     d7c:	eb e3       	ldi	r30, 0x3B	; 59
     d7e:	f0 e0       	ldi	r31, 0x00	; 0
     d80:	80 81       	ld	r24, Z
     d82:	48 2f       	mov	r20, r24
     d84:	8a 81       	ldd	r24, Y+2	; 0x02
     d86:	28 2f       	mov	r18, r24
     d88:	30 e0       	ldi	r19, 0x00	; 0
     d8a:	81 e0       	ldi	r24, 0x01	; 1
     d8c:	90 e0       	ldi	r25, 0x00	; 0
     d8e:	02 2e       	mov	r0, r18
     d90:	02 c0       	rjmp	.+4      	; 0xd96 <DIO_vidWritePinValue+0x7c>
     d92:	88 0f       	add	r24, r24
     d94:	99 1f       	adc	r25, r25
     d96:	0a 94       	dec	r0
     d98:	e2 f7       	brpl	.-8      	; 0xd92 <DIO_vidWritePinValue+0x78>
     d9a:	80 95       	com	r24
     d9c:	84 23       	and	r24, r20
     d9e:	8c 93       	st	X, r24
     da0:	a6 c0       	rjmp	.+332    	; 0xeee <DIO_vidWritePinValue+0x1d4>
		else if (value==1)
     da2:	8b 81       	ldd	r24, Y+3	; 0x03
     da4:	81 30       	cpi	r24, 0x01	; 1
     da6:	09 f0       	breq	.+2      	; 0xdaa <DIO_vidWritePinValue+0x90>
     da8:	a2 c0       	rjmp	.+324    	; 0xeee <DIO_vidWritePinValue+0x1d4>
			set_bit(PORTA, pin);
     daa:	ab e3       	ldi	r26, 0x3B	; 59
     dac:	b0 e0       	ldi	r27, 0x00	; 0
     dae:	eb e3       	ldi	r30, 0x3B	; 59
     db0:	f0 e0       	ldi	r31, 0x00	; 0
     db2:	80 81       	ld	r24, Z
     db4:	48 2f       	mov	r20, r24
     db6:	8a 81       	ldd	r24, Y+2	; 0x02
     db8:	28 2f       	mov	r18, r24
     dba:	30 e0       	ldi	r19, 0x00	; 0
     dbc:	81 e0       	ldi	r24, 0x01	; 1
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	02 2e       	mov	r0, r18
     dc2:	02 c0       	rjmp	.+4      	; 0xdc8 <DIO_vidWritePinValue+0xae>
     dc4:	88 0f       	add	r24, r24
     dc6:	99 1f       	adc	r25, r25
     dc8:	0a 94       	dec	r0
     dca:	e2 f7       	brpl	.-8      	; 0xdc4 <DIO_vidWritePinValue+0xaa>
     dcc:	84 2b       	or	r24, r20
     dce:	8c 93       	st	X, r24
     dd0:	8e c0       	rjmp	.+284    	; 0xeee <DIO_vidWritePinValue+0x1d4>
		break;
	}
	case 1: {
		if (value==0)
     dd2:	8b 81       	ldd	r24, Y+3	; 0x03
     dd4:	88 23       	and	r24, r24
     dd6:	a9 f4       	brne	.+42     	; 0xe02 <DIO_vidWritePinValue+0xe8>
			clr_bit(PORTB, pin);
     dd8:	a8 e3       	ldi	r26, 0x38	; 56
     dda:	b0 e0       	ldi	r27, 0x00	; 0
     ddc:	e8 e3       	ldi	r30, 0x38	; 56
     dde:	f0 e0       	ldi	r31, 0x00	; 0
     de0:	80 81       	ld	r24, Z
     de2:	48 2f       	mov	r20, r24
     de4:	8a 81       	ldd	r24, Y+2	; 0x02
     de6:	28 2f       	mov	r18, r24
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	81 e0       	ldi	r24, 0x01	; 1
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	02 2e       	mov	r0, r18
     df0:	02 c0       	rjmp	.+4      	; 0xdf6 <DIO_vidWritePinValue+0xdc>
     df2:	88 0f       	add	r24, r24
     df4:	99 1f       	adc	r25, r25
     df6:	0a 94       	dec	r0
     df8:	e2 f7       	brpl	.-8      	; 0xdf2 <DIO_vidWritePinValue+0xd8>
     dfa:	80 95       	com	r24
     dfc:	84 23       	and	r24, r20
     dfe:	8c 93       	st	X, r24
     e00:	76 c0       	rjmp	.+236    	; 0xeee <DIO_vidWritePinValue+0x1d4>
		else if (value==1)
     e02:	8b 81       	ldd	r24, Y+3	; 0x03
     e04:	81 30       	cpi	r24, 0x01	; 1
     e06:	09 f0       	breq	.+2      	; 0xe0a <DIO_vidWritePinValue+0xf0>
     e08:	72 c0       	rjmp	.+228    	; 0xeee <DIO_vidWritePinValue+0x1d4>
			set_bit(PORTB, pin);
     e0a:	a8 e3       	ldi	r26, 0x38	; 56
     e0c:	b0 e0       	ldi	r27, 0x00	; 0
     e0e:	e8 e3       	ldi	r30, 0x38	; 56
     e10:	f0 e0       	ldi	r31, 0x00	; 0
     e12:	80 81       	ld	r24, Z
     e14:	48 2f       	mov	r20, r24
     e16:	8a 81       	ldd	r24, Y+2	; 0x02
     e18:	28 2f       	mov	r18, r24
     e1a:	30 e0       	ldi	r19, 0x00	; 0
     e1c:	81 e0       	ldi	r24, 0x01	; 1
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	02 2e       	mov	r0, r18
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <DIO_vidWritePinValue+0x10e>
     e24:	88 0f       	add	r24, r24
     e26:	99 1f       	adc	r25, r25
     e28:	0a 94       	dec	r0
     e2a:	e2 f7       	brpl	.-8      	; 0xe24 <DIO_vidWritePinValue+0x10a>
     e2c:	84 2b       	or	r24, r20
     e2e:	8c 93       	st	X, r24
     e30:	5e c0       	rjmp	.+188    	; 0xeee <DIO_vidWritePinValue+0x1d4>
		break;
	}
	case 2: {
		if (value==0)
     e32:	8b 81       	ldd	r24, Y+3	; 0x03
     e34:	88 23       	and	r24, r24
     e36:	a9 f4       	brne	.+42     	; 0xe62 <DIO_vidWritePinValue+0x148>
			clr_bit(PORTC, pin);
     e38:	a5 e3       	ldi	r26, 0x35	; 53
     e3a:	b0 e0       	ldi	r27, 0x00	; 0
     e3c:	e5 e3       	ldi	r30, 0x35	; 53
     e3e:	f0 e0       	ldi	r31, 0x00	; 0
     e40:	80 81       	ld	r24, Z
     e42:	48 2f       	mov	r20, r24
     e44:	8a 81       	ldd	r24, Y+2	; 0x02
     e46:	28 2f       	mov	r18, r24
     e48:	30 e0       	ldi	r19, 0x00	; 0
     e4a:	81 e0       	ldi	r24, 0x01	; 1
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	02 2e       	mov	r0, r18
     e50:	02 c0       	rjmp	.+4      	; 0xe56 <DIO_vidWritePinValue+0x13c>
     e52:	88 0f       	add	r24, r24
     e54:	99 1f       	adc	r25, r25
     e56:	0a 94       	dec	r0
     e58:	e2 f7       	brpl	.-8      	; 0xe52 <DIO_vidWritePinValue+0x138>
     e5a:	80 95       	com	r24
     e5c:	84 23       	and	r24, r20
     e5e:	8c 93       	st	X, r24
     e60:	46 c0       	rjmp	.+140    	; 0xeee <DIO_vidWritePinValue+0x1d4>
		else if (value==1)
     e62:	8b 81       	ldd	r24, Y+3	; 0x03
     e64:	81 30       	cpi	r24, 0x01	; 1
     e66:	09 f0       	breq	.+2      	; 0xe6a <DIO_vidWritePinValue+0x150>
     e68:	42 c0       	rjmp	.+132    	; 0xeee <DIO_vidWritePinValue+0x1d4>
			set_bit(PORTC, pin);
     e6a:	a5 e3       	ldi	r26, 0x35	; 53
     e6c:	b0 e0       	ldi	r27, 0x00	; 0
     e6e:	e5 e3       	ldi	r30, 0x35	; 53
     e70:	f0 e0       	ldi	r31, 0x00	; 0
     e72:	80 81       	ld	r24, Z
     e74:	48 2f       	mov	r20, r24
     e76:	8a 81       	ldd	r24, Y+2	; 0x02
     e78:	28 2f       	mov	r18, r24
     e7a:	30 e0       	ldi	r19, 0x00	; 0
     e7c:	81 e0       	ldi	r24, 0x01	; 1
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	02 2e       	mov	r0, r18
     e82:	02 c0       	rjmp	.+4      	; 0xe88 <DIO_vidWritePinValue+0x16e>
     e84:	88 0f       	add	r24, r24
     e86:	99 1f       	adc	r25, r25
     e88:	0a 94       	dec	r0
     e8a:	e2 f7       	brpl	.-8      	; 0xe84 <DIO_vidWritePinValue+0x16a>
     e8c:	84 2b       	or	r24, r20
     e8e:	8c 93       	st	X, r24
     e90:	2e c0       	rjmp	.+92     	; 0xeee <DIO_vidWritePinValue+0x1d4>
		break;
	}
	case 3: {
		if (value==0)
     e92:	8b 81       	ldd	r24, Y+3	; 0x03
     e94:	88 23       	and	r24, r24
     e96:	a9 f4       	brne	.+42     	; 0xec2 <DIO_vidWritePinValue+0x1a8>
			clr_bit(PORTD, pin);
     e98:	a2 e3       	ldi	r26, 0x32	; 50
     e9a:	b0 e0       	ldi	r27, 0x00	; 0
     e9c:	e2 e3       	ldi	r30, 0x32	; 50
     e9e:	f0 e0       	ldi	r31, 0x00	; 0
     ea0:	80 81       	ld	r24, Z
     ea2:	48 2f       	mov	r20, r24
     ea4:	8a 81       	ldd	r24, Y+2	; 0x02
     ea6:	28 2f       	mov	r18, r24
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	81 e0       	ldi	r24, 0x01	; 1
     eac:	90 e0       	ldi	r25, 0x00	; 0
     eae:	02 2e       	mov	r0, r18
     eb0:	02 c0       	rjmp	.+4      	; 0xeb6 <DIO_vidWritePinValue+0x19c>
     eb2:	88 0f       	add	r24, r24
     eb4:	99 1f       	adc	r25, r25
     eb6:	0a 94       	dec	r0
     eb8:	e2 f7       	brpl	.-8      	; 0xeb2 <DIO_vidWritePinValue+0x198>
     eba:	80 95       	com	r24
     ebc:	84 23       	and	r24, r20
     ebe:	8c 93       	st	X, r24
     ec0:	16 c0       	rjmp	.+44     	; 0xeee <DIO_vidWritePinValue+0x1d4>
		else if (value==1)
     ec2:	8b 81       	ldd	r24, Y+3	; 0x03
     ec4:	81 30       	cpi	r24, 0x01	; 1
     ec6:	99 f4       	brne	.+38     	; 0xeee <DIO_vidWritePinValue+0x1d4>
			set_bit(PORTD, pin);
     ec8:	a2 e3       	ldi	r26, 0x32	; 50
     eca:	b0 e0       	ldi	r27, 0x00	; 0
     ecc:	e2 e3       	ldi	r30, 0x32	; 50
     ece:	f0 e0       	ldi	r31, 0x00	; 0
     ed0:	80 81       	ld	r24, Z
     ed2:	48 2f       	mov	r20, r24
     ed4:	8a 81       	ldd	r24, Y+2	; 0x02
     ed6:	28 2f       	mov	r18, r24
     ed8:	30 e0       	ldi	r19, 0x00	; 0
     eda:	81 e0       	ldi	r24, 0x01	; 1
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	02 2e       	mov	r0, r18
     ee0:	02 c0       	rjmp	.+4      	; 0xee6 <DIO_vidWritePinValue+0x1cc>
     ee2:	88 0f       	add	r24, r24
     ee4:	99 1f       	adc	r25, r25
     ee6:	0a 94       	dec	r0
     ee8:	e2 f7       	brpl	.-8      	; 0xee2 <DIO_vidWritePinValue+0x1c8>
     eea:	84 2b       	or	r24, r20
     eec:	8c 93       	st	X, r24
		break;
	}
	}
}
     eee:	0f 90       	pop	r0
     ef0:	0f 90       	pop	r0
     ef2:	0f 90       	pop	r0
     ef4:	0f 90       	pop	r0
     ef6:	0f 90       	pop	r0
     ef8:	cf 91       	pop	r28
     efa:	df 91       	pop	r29
     efc:	08 95       	ret

00000efe <DIO_u8ReadPinValue>:

u8 DIO_u8ReadPinValue(u8 port, u8 pin)
{
     efe:	df 93       	push	r29
     f00:	cf 93       	push	r28
     f02:	00 d0       	rcall	.+0      	; 0xf04 <DIO_u8ReadPinValue+0x6>
     f04:	00 d0       	rcall	.+0      	; 0xf06 <DIO_u8ReadPinValue+0x8>
     f06:	00 d0       	rcall	.+0      	; 0xf08 <DIO_u8ReadPinValue+0xa>
     f08:	cd b7       	in	r28, 0x3d	; 61
     f0a:	de b7       	in	r29, 0x3e	; 62
     f0c:	89 83       	std	Y+1, r24	; 0x01
     f0e:	6a 83       	std	Y+2, r22	; 0x02
	switch (port)
     f10:	89 81       	ldd	r24, Y+1	; 0x01
     f12:	28 2f       	mov	r18, r24
     f14:	30 e0       	ldi	r19, 0x00	; 0
     f16:	3d 83       	std	Y+5, r19	; 0x05
     f18:	2c 83       	std	Y+4, r18	; 0x04
     f1a:	4c 81       	ldd	r20, Y+4	; 0x04
     f1c:	5d 81       	ldd	r21, Y+5	; 0x05
     f1e:	41 30       	cpi	r20, 0x01	; 1
     f20:	51 05       	cpc	r21, r1
     f22:	b1 f1       	breq	.+108    	; 0xf90 <DIO_u8ReadPinValue+0x92>
     f24:	8c 81       	ldd	r24, Y+4	; 0x04
     f26:	9d 81       	ldd	r25, Y+5	; 0x05
     f28:	82 30       	cpi	r24, 0x02	; 2
     f2a:	91 05       	cpc	r25, r1
     f2c:	34 f4       	brge	.+12     	; 0xf3a <DIO_u8ReadPinValue+0x3c>
     f2e:	2c 81       	ldd	r18, Y+4	; 0x04
     f30:	3d 81       	ldd	r19, Y+5	; 0x05
     f32:	21 15       	cp	r18, r1
     f34:	31 05       	cpc	r19, r1
     f36:	71 f0       	breq	.+28     	; 0xf54 <DIO_u8ReadPinValue+0x56>
     f38:	85 c0       	rjmp	.+266    	; 0x1044 <DIO_u8ReadPinValue+0x146>
     f3a:	4c 81       	ldd	r20, Y+4	; 0x04
     f3c:	5d 81       	ldd	r21, Y+5	; 0x05
     f3e:	42 30       	cpi	r20, 0x02	; 2
     f40:	51 05       	cpc	r21, r1
     f42:	09 f4       	brne	.+2      	; 0xf46 <DIO_u8ReadPinValue+0x48>
     f44:	43 c0       	rjmp	.+134    	; 0xfcc <DIO_u8ReadPinValue+0xce>
     f46:	8c 81       	ldd	r24, Y+4	; 0x04
     f48:	9d 81       	ldd	r25, Y+5	; 0x05
     f4a:	83 30       	cpi	r24, 0x03	; 3
     f4c:	91 05       	cpc	r25, r1
     f4e:	09 f4       	brne	.+2      	; 0xf52 <DIO_u8ReadPinValue+0x54>
     f50:	5b c0       	rjmp	.+182    	; 0x1008 <DIO_u8ReadPinValue+0x10a>
     f52:	78 c0       	rjmp	.+240    	; 0x1044 <DIO_u8ReadPinValue+0x146>
	{
	case 0:
	return get_bit(PINA, pin);
     f54:	e9 e3       	ldi	r30, 0x39	; 57
     f56:	f0 e0       	ldi	r31, 0x00	; 0
     f58:	80 81       	ld	r24, Z
     f5a:	48 2f       	mov	r20, r24
     f5c:	50 e0       	ldi	r21, 0x00	; 0
     f5e:	8a 81       	ldd	r24, Y+2	; 0x02
     f60:	28 2f       	mov	r18, r24
     f62:	30 e0       	ldi	r19, 0x00	; 0
     f64:	81 e0       	ldi	r24, 0x01	; 1
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	02 c0       	rjmp	.+4      	; 0xf6e <DIO_u8ReadPinValue+0x70>
     f6a:	88 0f       	add	r24, r24
     f6c:	99 1f       	adc	r25, r25
     f6e:	2a 95       	dec	r18
     f70:	e2 f7       	brpl	.-8      	; 0xf6a <DIO_u8ReadPinValue+0x6c>
     f72:	9a 01       	movw	r18, r20
     f74:	28 23       	and	r18, r24
     f76:	39 23       	and	r19, r25
     f78:	8a 81       	ldd	r24, Y+2	; 0x02
     f7a:	88 2f       	mov	r24, r24
     f7c:	90 e0       	ldi	r25, 0x00	; 0
     f7e:	a9 01       	movw	r20, r18
     f80:	02 c0       	rjmp	.+4      	; 0xf86 <DIO_u8ReadPinValue+0x88>
     f82:	55 95       	asr	r21
     f84:	47 95       	ror	r20
     f86:	8a 95       	dec	r24
     f88:	e2 f7       	brpl	.-8      	; 0xf82 <DIO_u8ReadPinValue+0x84>
     f8a:	ca 01       	movw	r24, r20
     f8c:	8b 83       	std	Y+3, r24	; 0x03
     f8e:	5b c0       	rjmp	.+182    	; 0x1046 <DIO_u8ReadPinValue+0x148>
	break;

	case 1:
		return get_bit(PINB, pin);
     f90:	e6 e3       	ldi	r30, 0x36	; 54
     f92:	f0 e0       	ldi	r31, 0x00	; 0
     f94:	80 81       	ld	r24, Z
     f96:	48 2f       	mov	r20, r24
     f98:	50 e0       	ldi	r21, 0x00	; 0
     f9a:	8a 81       	ldd	r24, Y+2	; 0x02
     f9c:	28 2f       	mov	r18, r24
     f9e:	30 e0       	ldi	r19, 0x00	; 0
     fa0:	81 e0       	ldi	r24, 0x01	; 1
     fa2:	90 e0       	ldi	r25, 0x00	; 0
     fa4:	02 c0       	rjmp	.+4      	; 0xfaa <DIO_u8ReadPinValue+0xac>
     fa6:	88 0f       	add	r24, r24
     fa8:	99 1f       	adc	r25, r25
     faa:	2a 95       	dec	r18
     fac:	e2 f7       	brpl	.-8      	; 0xfa6 <DIO_u8ReadPinValue+0xa8>
     fae:	9a 01       	movw	r18, r20
     fb0:	28 23       	and	r18, r24
     fb2:	39 23       	and	r19, r25
     fb4:	8a 81       	ldd	r24, Y+2	; 0x02
     fb6:	88 2f       	mov	r24, r24
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	a9 01       	movw	r20, r18
     fbc:	02 c0       	rjmp	.+4      	; 0xfc2 <DIO_u8ReadPinValue+0xc4>
     fbe:	55 95       	asr	r21
     fc0:	47 95       	ror	r20
     fc2:	8a 95       	dec	r24
     fc4:	e2 f7       	brpl	.-8      	; 0xfbe <DIO_u8ReadPinValue+0xc0>
     fc6:	ca 01       	movw	r24, r20
     fc8:	8b 83       	std	Y+3, r24	; 0x03
     fca:	3d c0       	rjmp	.+122    	; 0x1046 <DIO_u8ReadPinValue+0x148>
		break;

	case 2:
		return get_bit(PINC, pin);
     fcc:	e3 e3       	ldi	r30, 0x33	; 51
     fce:	f0 e0       	ldi	r31, 0x00	; 0
     fd0:	80 81       	ld	r24, Z
     fd2:	48 2f       	mov	r20, r24
     fd4:	50 e0       	ldi	r21, 0x00	; 0
     fd6:	8a 81       	ldd	r24, Y+2	; 0x02
     fd8:	28 2f       	mov	r18, r24
     fda:	30 e0       	ldi	r19, 0x00	; 0
     fdc:	81 e0       	ldi	r24, 0x01	; 1
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	02 c0       	rjmp	.+4      	; 0xfe6 <DIO_u8ReadPinValue+0xe8>
     fe2:	88 0f       	add	r24, r24
     fe4:	99 1f       	adc	r25, r25
     fe6:	2a 95       	dec	r18
     fe8:	e2 f7       	brpl	.-8      	; 0xfe2 <DIO_u8ReadPinValue+0xe4>
     fea:	9a 01       	movw	r18, r20
     fec:	28 23       	and	r18, r24
     fee:	39 23       	and	r19, r25
     ff0:	8a 81       	ldd	r24, Y+2	; 0x02
     ff2:	88 2f       	mov	r24, r24
     ff4:	90 e0       	ldi	r25, 0x00	; 0
     ff6:	a9 01       	movw	r20, r18
     ff8:	02 c0       	rjmp	.+4      	; 0xffe <DIO_u8ReadPinValue+0x100>
     ffa:	55 95       	asr	r21
     ffc:	47 95       	ror	r20
     ffe:	8a 95       	dec	r24
    1000:	e2 f7       	brpl	.-8      	; 0xffa <DIO_u8ReadPinValue+0xfc>
    1002:	ca 01       	movw	r24, r20
    1004:	8b 83       	std	Y+3, r24	; 0x03
    1006:	1f c0       	rjmp	.+62     	; 0x1046 <DIO_u8ReadPinValue+0x148>
		break;

	case 3:
		return get_bit(PIND, pin);
    1008:	e0 e3       	ldi	r30, 0x30	; 48
    100a:	f0 e0       	ldi	r31, 0x00	; 0
    100c:	80 81       	ld	r24, Z
    100e:	48 2f       	mov	r20, r24
    1010:	50 e0       	ldi	r21, 0x00	; 0
    1012:	8a 81       	ldd	r24, Y+2	; 0x02
    1014:	28 2f       	mov	r18, r24
    1016:	30 e0       	ldi	r19, 0x00	; 0
    1018:	81 e0       	ldi	r24, 0x01	; 1
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	02 c0       	rjmp	.+4      	; 0x1022 <DIO_u8ReadPinValue+0x124>
    101e:	88 0f       	add	r24, r24
    1020:	99 1f       	adc	r25, r25
    1022:	2a 95       	dec	r18
    1024:	e2 f7       	brpl	.-8      	; 0x101e <DIO_u8ReadPinValue+0x120>
    1026:	9a 01       	movw	r18, r20
    1028:	28 23       	and	r18, r24
    102a:	39 23       	and	r19, r25
    102c:	8a 81       	ldd	r24, Y+2	; 0x02
    102e:	88 2f       	mov	r24, r24
    1030:	90 e0       	ldi	r25, 0x00	; 0
    1032:	a9 01       	movw	r20, r18
    1034:	02 c0       	rjmp	.+4      	; 0x103a <DIO_u8ReadPinValue+0x13c>
    1036:	55 95       	asr	r21
    1038:	47 95       	ror	r20
    103a:	8a 95       	dec	r24
    103c:	e2 f7       	brpl	.-8      	; 0x1036 <DIO_u8ReadPinValue+0x138>
    103e:	ca 01       	movw	r24, r20
    1040:	8b 83       	std	Y+3, r24	; 0x03
    1042:	01 c0       	rjmp	.+2      	; 0x1046 <DIO_u8ReadPinValue+0x148>
    1044:	02 c0       	rjmp	.+4      	; 0x104a <DIO_u8ReadPinValue+0x14c>
		break;
	}
}
    1046:	5b 81       	ldd	r21, Y+3	; 0x03
    1048:	5e 83       	std	Y+6, r21	; 0x06
    104a:	8e 81       	ldd	r24, Y+6	; 0x06
    104c:	26 96       	adiw	r28, 0x06	; 6
    104e:	0f b6       	in	r0, 0x3f	; 63
    1050:	f8 94       	cli
    1052:	de bf       	out	0x3e, r29	; 62
    1054:	0f be       	out	0x3f, r0	; 63
    1056:	cd bf       	out	0x3d, r28	; 61
    1058:	cf 91       	pop	r28
    105a:	df 91       	pop	r29
    105c:	08 95       	ret

0000105e <DIO_vidWritePortValue>:

void DIO_vidWritePortValue(u8 port, u8 value)
{
    105e:	df 93       	push	r29
    1060:	cf 93       	push	r28
    1062:	00 d0       	rcall	.+0      	; 0x1064 <DIO_vidWritePortValue+0x6>
    1064:	00 d0       	rcall	.+0      	; 0x1066 <DIO_vidWritePortValue+0x8>
    1066:	cd b7       	in	r28, 0x3d	; 61
    1068:	de b7       	in	r29, 0x3e	; 62
    106a:	89 83       	std	Y+1, r24	; 0x01
    106c:	6a 83       	std	Y+2, r22	; 0x02
	switch (port)
    106e:	89 81       	ldd	r24, Y+1	; 0x01
    1070:	28 2f       	mov	r18, r24
    1072:	30 e0       	ldi	r19, 0x00	; 0
    1074:	3c 83       	std	Y+4, r19	; 0x04
    1076:	2b 83       	std	Y+3, r18	; 0x03
    1078:	8b 81       	ldd	r24, Y+3	; 0x03
    107a:	9c 81       	ldd	r25, Y+4	; 0x04
    107c:	81 30       	cpi	r24, 0x01	; 1
    107e:	91 05       	cpc	r25, r1
    1080:	d1 f0       	breq	.+52     	; 0x10b6 <DIO_vidWritePortValue+0x58>
    1082:	2b 81       	ldd	r18, Y+3	; 0x03
    1084:	3c 81       	ldd	r19, Y+4	; 0x04
    1086:	22 30       	cpi	r18, 0x02	; 2
    1088:	31 05       	cpc	r19, r1
    108a:	2c f4       	brge	.+10     	; 0x1096 <DIO_vidWritePortValue+0x38>
    108c:	8b 81       	ldd	r24, Y+3	; 0x03
    108e:	9c 81       	ldd	r25, Y+4	; 0x04
    1090:	00 97       	sbiw	r24, 0x00	; 0
    1092:	61 f0       	breq	.+24     	; 0x10ac <DIO_vidWritePortValue+0x4e>
    1094:	1e c0       	rjmp	.+60     	; 0x10d2 <DIO_vidWritePortValue+0x74>
    1096:	2b 81       	ldd	r18, Y+3	; 0x03
    1098:	3c 81       	ldd	r19, Y+4	; 0x04
    109a:	22 30       	cpi	r18, 0x02	; 2
    109c:	31 05       	cpc	r19, r1
    109e:	81 f0       	breq	.+32     	; 0x10c0 <DIO_vidWritePortValue+0x62>
    10a0:	8b 81       	ldd	r24, Y+3	; 0x03
    10a2:	9c 81       	ldd	r25, Y+4	; 0x04
    10a4:	83 30       	cpi	r24, 0x03	; 3
    10a6:	91 05       	cpc	r25, r1
    10a8:	81 f0       	breq	.+32     	; 0x10ca <DIO_vidWritePortValue+0x6c>
    10aa:	13 c0       	rjmp	.+38     	; 0x10d2 <DIO_vidWritePortValue+0x74>
	{
	case DIO_PORT_A:
		PORTA= value;
    10ac:	eb e3       	ldi	r30, 0x3B	; 59
    10ae:	f0 e0       	ldi	r31, 0x00	; 0
    10b0:	8a 81       	ldd	r24, Y+2	; 0x02
    10b2:	80 83       	st	Z, r24
    10b4:	0e c0       	rjmp	.+28     	; 0x10d2 <DIO_vidWritePortValue+0x74>
		break;

	case DIO_PORT_B:
		PORTB= value;
    10b6:	e8 e3       	ldi	r30, 0x38	; 56
    10b8:	f0 e0       	ldi	r31, 0x00	; 0
    10ba:	8a 81       	ldd	r24, Y+2	; 0x02
    10bc:	80 83       	st	Z, r24
    10be:	09 c0       	rjmp	.+18     	; 0x10d2 <DIO_vidWritePortValue+0x74>
		break;

	case DIO_PORT_C:
		PORTC= value;
    10c0:	e5 e3       	ldi	r30, 0x35	; 53
    10c2:	f0 e0       	ldi	r31, 0x00	; 0
    10c4:	8a 81       	ldd	r24, Y+2	; 0x02
    10c6:	80 83       	st	Z, r24
    10c8:	04 c0       	rjmp	.+8      	; 0x10d2 <DIO_vidWritePortValue+0x74>
		break;

	case DIO_PORT_D:
		PORTD= value;
    10ca:	e2 e3       	ldi	r30, 0x32	; 50
    10cc:	f0 e0       	ldi	r31, 0x00	; 0
    10ce:	8a 81       	ldd	r24, Y+2	; 0x02
    10d0:	80 83       	st	Z, r24
		break;
	}
}
    10d2:	0f 90       	pop	r0
    10d4:	0f 90       	pop	r0
    10d6:	0f 90       	pop	r0
    10d8:	0f 90       	pop	r0
    10da:	cf 91       	pop	r28
    10dc:	df 91       	pop	r29
    10de:	08 95       	ret

000010e0 <DIO_vidSetPortDirection>:

void DIO_vidSetPortDirection(u8 port, u8 dir)
{
    10e0:	df 93       	push	r29
    10e2:	cf 93       	push	r28
    10e4:	00 d0       	rcall	.+0      	; 0x10e6 <DIO_vidSetPortDirection+0x6>
    10e6:	00 d0       	rcall	.+0      	; 0x10e8 <DIO_vidSetPortDirection+0x8>
    10e8:	cd b7       	in	r28, 0x3d	; 61
    10ea:	de b7       	in	r29, 0x3e	; 62
    10ec:	89 83       	std	Y+1, r24	; 0x01
    10ee:	6a 83       	std	Y+2, r22	; 0x02
	switch (port)
    10f0:	89 81       	ldd	r24, Y+1	; 0x01
    10f2:	28 2f       	mov	r18, r24
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	3c 83       	std	Y+4, r19	; 0x04
    10f8:	2b 83       	std	Y+3, r18	; 0x03
    10fa:	8b 81       	ldd	r24, Y+3	; 0x03
    10fc:	9c 81       	ldd	r25, Y+4	; 0x04
    10fe:	81 30       	cpi	r24, 0x01	; 1
    1100:	91 05       	cpc	r25, r1
    1102:	d1 f0       	breq	.+52     	; 0x1138 <DIO_vidSetPortDirection+0x58>
    1104:	2b 81       	ldd	r18, Y+3	; 0x03
    1106:	3c 81       	ldd	r19, Y+4	; 0x04
    1108:	22 30       	cpi	r18, 0x02	; 2
    110a:	31 05       	cpc	r19, r1
    110c:	2c f4       	brge	.+10     	; 0x1118 <DIO_vidSetPortDirection+0x38>
    110e:	8b 81       	ldd	r24, Y+3	; 0x03
    1110:	9c 81       	ldd	r25, Y+4	; 0x04
    1112:	00 97       	sbiw	r24, 0x00	; 0
    1114:	61 f0       	breq	.+24     	; 0x112e <DIO_vidSetPortDirection+0x4e>
    1116:	1e c0       	rjmp	.+60     	; 0x1154 <DIO_vidSetPortDirection+0x74>
    1118:	2b 81       	ldd	r18, Y+3	; 0x03
    111a:	3c 81       	ldd	r19, Y+4	; 0x04
    111c:	22 30       	cpi	r18, 0x02	; 2
    111e:	31 05       	cpc	r19, r1
    1120:	81 f0       	breq	.+32     	; 0x1142 <DIO_vidSetPortDirection+0x62>
    1122:	8b 81       	ldd	r24, Y+3	; 0x03
    1124:	9c 81       	ldd	r25, Y+4	; 0x04
    1126:	83 30       	cpi	r24, 0x03	; 3
    1128:	91 05       	cpc	r25, r1
    112a:	81 f0       	breq	.+32     	; 0x114c <DIO_vidSetPortDirection+0x6c>
    112c:	13 c0       	rjmp	.+38     	; 0x1154 <DIO_vidSetPortDirection+0x74>
	{
	case 0:
			DDRA=dir;
    112e:	ea e3       	ldi	r30, 0x3A	; 58
    1130:	f0 e0       	ldi	r31, 0x00	; 0
    1132:	8a 81       	ldd	r24, Y+2	; 0x02
    1134:	80 83       	st	Z, r24
    1136:	0e c0       	rjmp	.+28     	; 0x1154 <DIO_vidSetPortDirection+0x74>
			break;
	case 1:
			DDRB=dir;
    1138:	e7 e3       	ldi	r30, 0x37	; 55
    113a:	f0 e0       	ldi	r31, 0x00	; 0
    113c:	8a 81       	ldd	r24, Y+2	; 0x02
    113e:	80 83       	st	Z, r24
    1140:	09 c0       	rjmp	.+18     	; 0x1154 <DIO_vidSetPortDirection+0x74>
			break;
	case 2:
			DDRC=dir;
    1142:	e4 e3       	ldi	r30, 0x34	; 52
    1144:	f0 e0       	ldi	r31, 0x00	; 0
    1146:	8a 81       	ldd	r24, Y+2	; 0x02
    1148:	80 83       	st	Z, r24
    114a:	04 c0       	rjmp	.+8      	; 0x1154 <DIO_vidSetPortDirection+0x74>
			break;
	case 3:
			DDRD=dir;
    114c:	e1 e3       	ldi	r30, 0x31	; 49
    114e:	f0 e0       	ldi	r31, 0x00	; 0
    1150:	8a 81       	ldd	r24, Y+2	; 0x02
    1152:	80 83       	st	Z, r24
			break;
	}
}
    1154:	0f 90       	pop	r0
    1156:	0f 90       	pop	r0
    1158:	0f 90       	pop	r0
    115a:	0f 90       	pop	r0
    115c:	cf 91       	pop	r28
    115e:	df 91       	pop	r29
    1160:	08 95       	ret

00001162 <USART_voidInit>:
#include <stdio.h>
#include<string.h>
#include<stdlib.h>

void USART_voidInit(void)
{
    1162:	df 93       	push	r29
    1164:	cf 93       	push	r28
    1166:	0f 92       	push	r0
    1168:	cd b7       	in	r28, 0x3d	; 61
    116a:	de b7       	in	r29, 0x3e	; 62
	u8 UCSRC_Value=0;
    116c:	19 82       	std	Y+1, r1	; 0x01

	// Transmission,receiver enable
	set_bit(UCSRB,3);
    116e:	aa e2       	ldi	r26, 0x2A	; 42
    1170:	b0 e0       	ldi	r27, 0x00	; 0
    1172:	ea e2       	ldi	r30, 0x2A	; 42
    1174:	f0 e0       	ldi	r31, 0x00	; 0
    1176:	80 81       	ld	r24, Z
    1178:	88 60       	ori	r24, 0x08	; 8
    117a:	8c 93       	st	X, r24
	set_bit(UCSRB,4);
    117c:	aa e2       	ldi	r26, 0x2A	; 42
    117e:	b0 e0       	ldi	r27, 0x00	; 0
    1180:	ea e2       	ldi	r30, 0x2A	; 42
    1182:	f0 e0       	ldi	r31, 0x00	; 0
    1184:	80 81       	ld	r24, Z
    1186:	80 61       	ori	r24, 0x10	; 16
    1188:	8c 93       	st	X, r24

	// Acces UCSRC
	set_bit(UCSRC_Value,7);
    118a:	89 81       	ldd	r24, Y+1	; 0x01
    118c:	80 68       	ori	r24, 0x80	; 128
    118e:	89 83       	std	Y+1, r24	; 0x01

	// charactersize 8 bits

	set_bit(UCSRC_Value,2);
    1190:	89 81       	ldd	r24, Y+1	; 0x01
    1192:	84 60       	ori	r24, 0x04	; 4
    1194:	89 83       	std	Y+1, r24	; 0x01
	set_bit(UCSRC_Value,1);
    1196:	89 81       	ldd	r24, Y+1	; 0x01
    1198:	82 60       	ori	r24, 0x02	; 2
    119a:	89 83       	std	Y+1, r24	; 0x01

	//set the value to the register
	UCSRC=UCSRC_Value;
    119c:	e0 e4       	ldi	r30, 0x40	; 64
    119e:	f0 e0       	ldi	r31, 0x00	; 0
    11a0:	89 81       	ldd	r24, Y+1	; 0x01
    11a2:	80 83       	st	Z, r24

	//set 9600 bps
	UBRRL=51;
    11a4:	e9 e2       	ldi	r30, 0x29	; 41
    11a6:	f0 e0       	ldi	r31, 0x00	; 0
    11a8:	83 e3       	ldi	r24, 0x33	; 51
    11aa:	80 83       	st	Z, r24

}
    11ac:	0f 90       	pop	r0
    11ae:	cf 91       	pop	r28
    11b0:	df 91       	pop	r29
    11b2:	08 95       	ret

000011b4 <USART_voidTransmit>:

void USART_voidTransmit(u8 Data)
{
    11b4:	df 93       	push	r29
    11b6:	cf 93       	push	r28
    11b8:	0f 92       	push	r0
    11ba:	cd b7       	in	r28, 0x3d	; 61
    11bc:	de b7       	in	r29, 0x3e	; 62
    11be:	89 83       	std	Y+1, r24	; 0x01
	// Polling with blocking (busy waiting) on UDRE
	while((get_bit(UCSRA,5))==0);
    11c0:	eb e2       	ldi	r30, 0x2B	; 43
    11c2:	f0 e0       	ldi	r31, 0x00	; 0
    11c4:	80 81       	ld	r24, Z
    11c6:	88 2f       	mov	r24, r24
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	80 72       	andi	r24, 0x20	; 32
    11cc:	90 70       	andi	r25, 0x00	; 0
    11ce:	95 95       	asr	r25
    11d0:	87 95       	ror	r24
    11d2:	95 95       	asr	r25
    11d4:	87 95       	ror	r24
    11d6:	95 95       	asr	r25
    11d8:	87 95       	ror	r24
    11da:	95 95       	asr	r25
    11dc:	87 95       	ror	r24
    11de:	95 95       	asr	r25
    11e0:	87 95       	ror	r24
    11e2:	00 97       	sbiw	r24, 0x00	; 0
    11e4:	69 f3       	breq	.-38     	; 0x11c0 <USART_voidTransmit+0xc>
	//transmit the data
	UDR=Data;
    11e6:	ec e2       	ldi	r30, 0x2C	; 44
    11e8:	f0 e0       	ldi	r31, 0x00	; 0
    11ea:	89 81       	ldd	r24, Y+1	; 0x01
    11ec:	80 83       	st	Z, r24
}
    11ee:	0f 90       	pop	r0
    11f0:	cf 91       	pop	r28
    11f2:	df 91       	pop	r29
    11f4:	08 95       	ret

000011f6 <USART_u8Receive>:

u8 USART_u8Receive(void)
{
    11f6:	df 93       	push	r29
    11f8:	cf 93       	push	r28
    11fa:	cd b7       	in	r28, 0x3d	; 61
    11fc:	de b7       	in	r29, 0x3e	; 62
	// Polling with blocking on RXC flag
	while((get_bit(UCSRA,7))==0);
    11fe:	eb e2       	ldi	r30, 0x2B	; 43
    1200:	f0 e0       	ldi	r31, 0x00	; 0
    1202:	80 81       	ld	r24, Z
    1204:	88 1f       	adc	r24, r24
    1206:	88 27       	eor	r24, r24
    1208:	88 1f       	adc	r24, r24
    120a:	88 2f       	mov	r24, r24
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	90 70       	andi	r25, 0x00	; 0
    1210:	00 97       	sbiw	r24, 0x00	; 0
    1212:	a9 f3       	breq	.-22     	; 0x11fe <USART_u8Receive+0x8>
	//get the data
	return UDR;
    1214:	ec e2       	ldi	r30, 0x2C	; 44
    1216:	f0 e0       	ldi	r31, 0x00	; 0
    1218:	80 81       	ld	r24, Z

}
    121a:	cf 91       	pop	r28
    121c:	df 91       	pop	r29
    121e:	08 95       	ret

00001220 <USART_voidSendString>:

void USART_voidSendString(char*str)
{
    1220:	df 93       	push	r29
    1222:	cf 93       	push	r28
    1224:	00 d0       	rcall	.+0      	; 0x1226 <USART_voidSendString+0x6>
    1226:	cd b7       	in	r28, 0x3d	; 61
    1228:	de b7       	in	r29, 0x3e	; 62
    122a:	9a 83       	std	Y+2, r25	; 0x02
    122c:	89 83       	std	Y+1, r24	; 0x01
    122e:	0a c0       	rjmp	.+20     	; 0x1244 <USART_voidSendString+0x24>
	while(*str!='\0')
	{
		USART_voidTransmit(*str);
    1230:	e9 81       	ldd	r30, Y+1	; 0x01
    1232:	fa 81       	ldd	r31, Y+2	; 0x02
    1234:	80 81       	ld	r24, Z
    1236:	0e 94 da 08 	call	0x11b4	; 0x11b4 <USART_voidTransmit>
		str++;
    123a:	89 81       	ldd	r24, Y+1	; 0x01
    123c:	9a 81       	ldd	r25, Y+2	; 0x02
    123e:	01 96       	adiw	r24, 0x01	; 1
    1240:	9a 83       	std	Y+2, r25	; 0x02
    1242:	89 83       	std	Y+1, r24	; 0x01

}

void USART_voidSendString(char*str)
{
	while(*str!='\0')
    1244:	e9 81       	ldd	r30, Y+1	; 0x01
    1246:	fa 81       	ldd	r31, Y+2	; 0x02
    1248:	80 81       	ld	r24, Z
    124a:	88 23       	and	r24, r24
    124c:	89 f7       	brne	.-30     	; 0x1230 <USART_voidSendString+0x10>
	{
		USART_voidTransmit(*str);
		str++;
	}
}
    124e:	0f 90       	pop	r0
    1250:	0f 90       	pop	r0
    1252:	cf 91       	pop	r28
    1254:	df 91       	pop	r29
    1256:	08 95       	ret

00001258 <Display>:


void Display(char*str)
{
    1258:	df 93       	push	r29
    125a:	cf 93       	push	r28
    125c:	00 d0       	rcall	.+0      	; 0x125e <Display+0x6>
    125e:	cd b7       	in	r28, 0x3d	; 61
    1260:	de b7       	in	r29, 0x3e	; 62
    1262:	9a 83       	std	Y+2, r25	; 0x02
    1264:	89 83       	std	Y+1, r24	; 0x01
    1266:	15 c0       	rjmp	.+42     	; 0x1292 <Display+0x3a>
	while(*str!='\0')
	{
		if(*str == '\n')
    1268:	e9 81       	ldd	r30, Y+1	; 0x01
    126a:	fa 81       	ldd	r31, Y+2	; 0x02
    126c:	80 81       	ld	r24, Z
    126e:	8a 30       	cpi	r24, 0x0A	; 10
    1270:	31 f4       	brne	.+12     	; 0x127e <Display+0x26>
		{
			str++;
    1272:	89 81       	ldd	r24, Y+1	; 0x01
    1274:	9a 81       	ldd	r25, Y+2	; 0x02
    1276:	01 96       	adiw	r24, 0x01	; 1
    1278:	9a 83       	std	Y+2, r25	; 0x02
    127a:	89 83       	std	Y+1, r24	; 0x01
    127c:	0a c0       	rjmp	.+20     	; 0x1292 <Display+0x3a>
			continue;
		}
		else
		{
		USART_voidTransmit(*str);
    127e:	e9 81       	ldd	r30, Y+1	; 0x01
    1280:	fa 81       	ldd	r31, Y+2	; 0x02
    1282:	80 81       	ld	r24, Z
    1284:	0e 94 da 08 	call	0x11b4	; 0x11b4 <USART_voidTransmit>
		str++;
    1288:	89 81       	ldd	r24, Y+1	; 0x01
    128a:	9a 81       	ldd	r25, Y+2	; 0x02
    128c:	01 96       	adiw	r24, 0x01	; 1
    128e:	9a 83       	std	Y+2, r25	; 0x02
    1290:	89 83       	std	Y+1, r24	; 0x01
}


void Display(char*str)
{
	while(*str!='\0')
    1292:	e9 81       	ldd	r30, Y+1	; 0x01
    1294:	fa 81       	ldd	r31, Y+2	; 0x02
    1296:	80 81       	ld	r24, Z
    1298:	88 23       	and	r24, r24
    129a:	31 f7       	brne	.-52     	; 0x1268 <Display+0x10>
		{
		USART_voidTransmit(*str);
		str++;
		}
	}
}
    129c:	0f 90       	pop	r0
    129e:	0f 90       	pop	r0
    12a0:	cf 91       	pop	r28
    12a2:	df 91       	pop	r29
    12a4:	08 95       	ret

000012a6 <USART_voidRecieveString>:
u8 *USART_voidRecieveString(void)
{
    12a6:	df 93       	push	r29
    12a8:	cf 93       	push	r28
    12aa:	00 d0       	rcall	.+0      	; 0x12ac <USART_voidRecieveString+0x6>
    12ac:	00 d0       	rcall	.+0      	; 0x12ae <USART_voidRecieveString+0x8>
    12ae:	cd b7       	in	r28, 0x3d	; 61
    12b0:	de b7       	in	r29, 0x3e	; 62
	u8 *p;
	u8 *p1;
	p1=p;
    12b2:	8b 81       	ldd	r24, Y+3	; 0x03
    12b4:	9c 81       	ldd	r25, Y+4	; 0x04
    12b6:	9a 83       	std	Y+2, r25	; 0x02
    12b8:	89 83       	std	Y+1, r24	; 0x01
	while(1)
	{
	*p=USART_u8Receive();
    12ba:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <USART_u8Receive>
    12be:	eb 81       	ldd	r30, Y+3	; 0x03
    12c0:	fc 81       	ldd	r31, Y+4	; 0x04
    12c2:	80 83       	st	Z, r24
	if(*p=='\r') break;
    12c4:	eb 81       	ldd	r30, Y+3	; 0x03
    12c6:	fc 81       	ldd	r31, Y+4	; 0x04
    12c8:	80 81       	ld	r24, Z
    12ca:	8d 30       	cpi	r24, 0x0D	; 13
    12cc:	31 f0       	breq	.+12     	; 0x12da <USART_voidRecieveString+0x34>
	p++;
    12ce:	8b 81       	ldd	r24, Y+3	; 0x03
    12d0:	9c 81       	ldd	r25, Y+4	; 0x04
    12d2:	01 96       	adiw	r24, 0x01	; 1
    12d4:	9c 83       	std	Y+4, r25	; 0x04
    12d6:	8b 83       	std	Y+3, r24	; 0x03
    12d8:	f0 cf       	rjmp	.-32     	; 0x12ba <USART_voidRecieveString+0x14>
	}
	return p1;
    12da:	89 81       	ldd	r24, Y+1	; 0x01
    12dc:	9a 81       	ldd	r25, Y+2	; 0x02
}
    12de:	0f 90       	pop	r0
    12e0:	0f 90       	pop	r0
    12e2:	0f 90       	pop	r0
    12e4:	0f 90       	pop	r0
    12e6:	cf 91       	pop	r28
    12e8:	df 91       	pop	r29
    12ea:	08 95       	ret

000012ec <USART_voidSendAsciiNumber>:



void USART_voidSendAsciiNumber(u8 Number)
{
    12ec:	df 93       	push	r29
    12ee:	cf 93       	push	r28
    12f0:	00 d0       	rcall	.+0      	; 0x12f2 <USART_voidSendAsciiNumber+0x6>
    12f2:	cd b7       	in	r28, 0x3d	; 61
    12f4:	de b7       	in	r29, 0x3e	; 62
    12f6:	8a 83       	std	Y+2, r24	; 0x02
	u8 y=1;
    12f8:	81 e0       	ldi	r24, 0x01	; 1
    12fa:	89 83       	std	Y+1, r24	; 0x01
	if (Number==0)
    12fc:	8a 81       	ldd	r24, Y+2	; 0x02
    12fe:	88 23       	and	r24, r24
    1300:	01 f5       	brne	.+64     	; 0x1342 <USART_voidSendAsciiNumber+0x56>
	{
		USART_voidTransmit('0');
    1302:	80 e3       	ldi	r24, 0x30	; 48
    1304:	0e 94 da 08 	call	0x11b4	; 0x11b4 <USART_voidTransmit>
    1308:	1c c0       	rjmp	.+56     	; 0x1342 <USART_voidSendAsciiNumber+0x56>
	}
	while(Number!=0)
	{
		y=(y*10)+(Number%10);
    130a:	89 81       	ldd	r24, Y+1	; 0x01
    130c:	88 2f       	mov	r24, r24
    130e:	90 e0       	ldi	r25, 0x00	; 0
    1310:	9c 01       	movw	r18, r24
    1312:	22 0f       	add	r18, r18
    1314:	33 1f       	adc	r19, r19
    1316:	c9 01       	movw	r24, r18
    1318:	88 0f       	add	r24, r24
    131a:	99 1f       	adc	r25, r25
    131c:	88 0f       	add	r24, r24
    131e:	99 1f       	adc	r25, r25
    1320:	82 0f       	add	r24, r18
    1322:	93 1f       	adc	r25, r19
    1324:	28 2f       	mov	r18, r24
    1326:	8a 81       	ldd	r24, Y+2	; 0x02
    1328:	9a e0       	ldi	r25, 0x0A	; 10
    132a:	69 2f       	mov	r22, r25
    132c:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__udivmodqi4>
    1330:	89 2f       	mov	r24, r25
    1332:	82 0f       	add	r24, r18
    1334:	89 83       	std	Y+1, r24	; 0x01
		Number=(Number/10);
    1336:	8a 81       	ldd	r24, Y+2	; 0x02
    1338:	9a e0       	ldi	r25, 0x0A	; 10
    133a:	69 2f       	mov	r22, r25
    133c:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__udivmodqi4>
    1340:	8a 83       	std	Y+2, r24	; 0x02
	u8 y=1;
	if (Number==0)
	{
		USART_voidTransmit('0');
	}
	while(Number!=0)
    1342:	8a 81       	ldd	r24, Y+2	; 0x02
    1344:	88 23       	and	r24, r24
    1346:	09 f7       	brne	.-62     	; 0x130a <USART_voidSendAsciiNumber+0x1e>
    1348:	0f c0       	rjmp	.+30     	; 0x1368 <USART_voidSendAsciiNumber+0x7c>
		y=(y*10)+(Number%10);
		Number=(Number/10);
	}
	while(y!=1)
	{
		USART_voidTransmit((y%10)+48);
    134a:	89 81       	ldd	r24, Y+1	; 0x01
    134c:	9a e0       	ldi	r25, 0x0A	; 10
    134e:	69 2f       	mov	r22, r25
    1350:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__udivmodqi4>
    1354:	89 2f       	mov	r24, r25
    1356:	80 5d       	subi	r24, 0xD0	; 208
    1358:	0e 94 da 08 	call	0x11b4	; 0x11b4 <USART_voidTransmit>
		y=y/10;
    135c:	89 81       	ldd	r24, Y+1	; 0x01
    135e:	9a e0       	ldi	r25, 0x0A	; 10
    1360:	69 2f       	mov	r22, r25
    1362:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <__udivmodqi4>
    1366:	89 83       	std	Y+1, r24	; 0x01
	while(Number!=0)
	{
		y=(y*10)+(Number%10);
		Number=(Number/10);
	}
	while(y!=1)
    1368:	89 81       	ldd	r24, Y+1	; 0x01
    136a:	81 30       	cpi	r24, 0x01	; 1
    136c:	71 f7       	brne	.-36     	; 0x134a <USART_voidSendAsciiNumber+0x5e>
	{
		USART_voidTransmit((y%10)+48);
		y=y/10;
	}
}
    136e:	0f 90       	pop	r0
    1370:	0f 90       	pop	r0
    1372:	cf 91       	pop	r28
    1374:	df 91       	pop	r29
    1376:	08 95       	ret

00001378 <USART_u8CompareArray>:

bool USART_u8CompareArray(char arr1[],char arr2[])
{
    1378:	df 93       	push	r29
    137a:	cf 93       	push	r28
    137c:	cd b7       	in	r28, 0x3d	; 61
    137e:	de b7       	in	r29, 0x3e	; 62
    1380:	27 97       	sbiw	r28, 0x07	; 7
    1382:	0f b6       	in	r0, 0x3f	; 63
    1384:	f8 94       	cli
    1386:	de bf       	out	0x3e, r29	; 62
    1388:	0f be       	out	0x3f, r0	; 63
    138a:	cd bf       	out	0x3d, r28	; 61
    138c:	9c 83       	std	Y+4, r25	; 0x04
    138e:	8b 83       	std	Y+3, r24	; 0x03
    1390:	7e 83       	std	Y+6, r23	; 0x06
    1392:	6d 83       	std	Y+5, r22	; 0x05
	u8 i=0;
    1394:	1a 82       	std	Y+2, r1	; 0x02
	u8 i2=0;
    1396:	19 82       	std	Y+1, r1	; 0x01
    1398:	2b c0       	rjmp	.+86     	; 0x13f0 <USART_u8CompareArray+0x78>
	while(arr1[i]!='\0' || arr2[i2]!='\0')
	{
		if(arr1[i] == '\n')
    139a:	8a 81       	ldd	r24, Y+2	; 0x02
    139c:	28 2f       	mov	r18, r24
    139e:	30 e0       	ldi	r19, 0x00	; 0
    13a0:	8b 81       	ldd	r24, Y+3	; 0x03
    13a2:	9c 81       	ldd	r25, Y+4	; 0x04
    13a4:	fc 01       	movw	r30, r24
    13a6:	e2 0f       	add	r30, r18
    13a8:	f3 1f       	adc	r31, r19
    13aa:	80 81       	ld	r24, Z
    13ac:	8a 30       	cpi	r24, 0x0A	; 10
    13ae:	21 f4       	brne	.+8      	; 0x13b8 <USART_u8CompareArray+0x40>
		{
			i++;
    13b0:	8a 81       	ldd	r24, Y+2	; 0x02
    13b2:	8f 5f       	subi	r24, 0xFF	; 255
    13b4:	8a 83       	std	Y+2, r24	; 0x02
    13b6:	1c c0       	rjmp	.+56     	; 0x13f0 <USART_u8CompareArray+0x78>
			continue;
		}
		else
		{
			if( arr1[i] != arr2[i2]) return false;
    13b8:	8a 81       	ldd	r24, Y+2	; 0x02
    13ba:	28 2f       	mov	r18, r24
    13bc:	30 e0       	ldi	r19, 0x00	; 0
    13be:	8b 81       	ldd	r24, Y+3	; 0x03
    13c0:	9c 81       	ldd	r25, Y+4	; 0x04
    13c2:	fc 01       	movw	r30, r24
    13c4:	e2 0f       	add	r30, r18
    13c6:	f3 1f       	adc	r31, r19
    13c8:	40 81       	ld	r20, Z
    13ca:	89 81       	ldd	r24, Y+1	; 0x01
    13cc:	28 2f       	mov	r18, r24
    13ce:	30 e0       	ldi	r19, 0x00	; 0
    13d0:	8d 81       	ldd	r24, Y+5	; 0x05
    13d2:	9e 81       	ldd	r25, Y+6	; 0x06
    13d4:	fc 01       	movw	r30, r24
    13d6:	e2 0f       	add	r30, r18
    13d8:	f3 1f       	adc	r31, r19
    13da:	80 81       	ld	r24, Z
    13dc:	48 17       	cp	r20, r24
    13de:	11 f0       	breq	.+4      	; 0x13e4 <USART_u8CompareArray+0x6c>
    13e0:	1f 82       	std	Y+7, r1	; 0x07
    13e2:	1f c0       	rjmp	.+62     	; 0x1422 <USART_u8CompareArray+0xaa>
			i++;
    13e4:	8a 81       	ldd	r24, Y+2	; 0x02
    13e6:	8f 5f       	subi	r24, 0xFF	; 255
    13e8:	8a 83       	std	Y+2, r24	; 0x02
			i2++;
    13ea:	89 81       	ldd	r24, Y+1	; 0x01
    13ec:	8f 5f       	subi	r24, 0xFF	; 255
    13ee:	89 83       	std	Y+1, r24	; 0x01

bool USART_u8CompareArray(char arr1[],char arr2[])
{
	u8 i=0;
	u8 i2=0;
	while(arr1[i]!='\0' || arr2[i2]!='\0')
    13f0:	8a 81       	ldd	r24, Y+2	; 0x02
    13f2:	28 2f       	mov	r18, r24
    13f4:	30 e0       	ldi	r19, 0x00	; 0
    13f6:	8b 81       	ldd	r24, Y+3	; 0x03
    13f8:	9c 81       	ldd	r25, Y+4	; 0x04
    13fa:	fc 01       	movw	r30, r24
    13fc:	e2 0f       	add	r30, r18
    13fe:	f3 1f       	adc	r31, r19
    1400:	80 81       	ld	r24, Z
    1402:	88 23       	and	r24, r24
    1404:	51 f6       	brne	.-108    	; 0x139a <USART_u8CompareArray+0x22>
    1406:	89 81       	ldd	r24, Y+1	; 0x01
    1408:	28 2f       	mov	r18, r24
    140a:	30 e0       	ldi	r19, 0x00	; 0
    140c:	8d 81       	ldd	r24, Y+5	; 0x05
    140e:	9e 81       	ldd	r25, Y+6	; 0x06
    1410:	fc 01       	movw	r30, r24
    1412:	e2 0f       	add	r30, r18
    1414:	f3 1f       	adc	r31, r19
    1416:	80 81       	ld	r24, Z
    1418:	88 23       	and	r24, r24
    141a:	09 f0       	breq	.+2      	; 0x141e <USART_u8CompareArray+0xa6>
    141c:	be cf       	rjmp	.-132    	; 0x139a <USART_u8CompareArray+0x22>
			if( arr1[i] != arr2[i2]) return false;
			i++;
			i2++;
		}
	}
	return true;
    141e:	81 e0       	ldi	r24, 0x01	; 1
    1420:	8f 83       	std	Y+7, r24	; 0x07
    1422:	8f 81       	ldd	r24, Y+7	; 0x07
}
    1424:	27 96       	adiw	r28, 0x07	; 7
    1426:	0f b6       	in	r0, 0x3f	; 63
    1428:	f8 94       	cli
    142a:	de bf       	out	0x3e, r29	; 62
    142c:	0f be       	out	0x3f, r0	; 63
    142e:	cd bf       	out	0x3d, r28	; 61
    1430:	cf 91       	pop	r28
    1432:	df 91       	pop	r29
    1434:	08 95       	ret

00001436 <main>:
//#include<stdlib.h>

void main (void)


{
    1436:	df 93       	push	r29
    1438:	cf 93       	push	r28
    143a:	cd b7       	in	r28, 0x3d	; 61
    143c:	de b7       	in	r29, 0x3e	; 62
    143e:	cc 51       	subi	r28, 0x1C	; 28
    1440:	d2 40       	sbci	r29, 0x02	; 2
    1442:	0f b6       	in	r0, 0x3f	; 63
    1444:	f8 94       	cli
    1446:	de bf       	out	0x3e, r29	; 62
    1448:	0f be       	out	0x3f, r0	; 63
    144a:	cd bf       	out	0x3d, r28	; 61


	DIO_vidSetPortDirection(DIO_PORT_D,DIO_PORT_OUTPUT);
    144c:	83 e0       	ldi	r24, 0x03	; 3
    144e:	6f ef       	ldi	r22, 0xFF	; 255
    1450:	0e 94 70 08 	call	0x10e0	; 0x10e0 <DIO_vidSetPortDirection>
	USART_voidInit();
    1454:	0e 94 b1 08 	call	0x1162	; 0x1162 <USART_voidInit>
	u8 UserName_location;
	char Receiving_Username[100];
	char Receiving_Password[100];
	char Receiving_Exit[100];

	char UserName[10][6]={"imt1","imt2","imt3","imt4","imt5","imt6","imt7","imt8","imt9","imt10"};
    1458:	ce 01       	movw	r24, r28
    145a:	8b 58       	subi	r24, 0x8B	; 139
    145c:	9e 4f       	sbci	r25, 0xFE	; 254
    145e:	2c e3       	ldi	r18, 0x3C	; 60
    1460:	fc 01       	movw	r30, r24
    1462:	df 01       	movw	r26, r30
    1464:	32 2f       	mov	r19, r18
    1466:	1d 92       	st	X+, r1
    1468:	3a 95       	dec	r19
    146a:	e9 f7       	brne	.-6      	; 0x1466 <main+0x30>
    146c:	ce 01       	movw	r24, r28
    146e:	8b 58       	subi	r24, 0x8B	; 139
    1470:	9e 4f       	sbci	r25, 0xFE	; 254
    1472:	c7 52       	subi	r28, 0x27	; 39
    1474:	de 4f       	sbci	r29, 0xFE	; 254
    1476:	99 83       	std	Y+1, r25	; 0x01
    1478:	88 83       	st	Y, r24
    147a:	c9 5d       	subi	r28, 0xD9	; 217
    147c:	d1 40       	sbci	r29, 0x01	; 1
    147e:	c7 52       	subi	r28, 0x27	; 39
    1480:	de 4f       	sbci	r29, 0xFE	; 254
    1482:	a8 81       	ld	r26, Y
    1484:	b9 81       	ldd	r27, Y+1	; 0x01
    1486:	c9 5d       	subi	r28, 0xD9	; 217
    1488:	d1 40       	sbci	r29, 0x01	; 1
    148a:	c5 52       	subi	r28, 0x25	; 37
    148c:	de 4f       	sbci	r29, 0xFE	; 254
    148e:	b9 83       	std	Y+1, r27	; 0x01
    1490:	a8 83       	st	Y, r26
    1492:	cb 5d       	subi	r28, 0xDB	; 219
    1494:	d1 40       	sbci	r29, 0x01	; 1
    1496:	e8 e6       	ldi	r30, 0x68	; 104
    1498:	f1 e0       	ldi	r31, 0x01	; 1
    149a:	c3 52       	subi	r28, 0x23	; 35
    149c:	de 4f       	sbci	r29, 0xFE	; 254
    149e:	f9 83       	std	Y+1, r31	; 0x01
    14a0:	e8 83       	st	Y, r30
    14a2:	cd 5d       	subi	r28, 0xDD	; 221
    14a4:	d1 40       	sbci	r29, 0x01	; 1
    14a6:	f5 e0       	ldi	r31, 0x05	; 5
    14a8:	c1 52       	subi	r28, 0x21	; 33
    14aa:	de 4f       	sbci	r29, 0xFE	; 254
    14ac:	f8 83       	st	Y, r31
    14ae:	cf 5d       	subi	r28, 0xDF	; 223
    14b0:	d1 40       	sbci	r29, 0x01	; 1
    14b2:	c3 52       	subi	r28, 0x23	; 35
    14b4:	de 4f       	sbci	r29, 0xFE	; 254
    14b6:	a8 81       	ld	r26, Y
    14b8:	b9 81       	ldd	r27, Y+1	; 0x01
    14ba:	cd 5d       	subi	r28, 0xDD	; 221
    14bc:	d1 40       	sbci	r29, 0x01	; 1
    14be:	0c 90       	ld	r0, X
    14c0:	c3 52       	subi	r28, 0x23	; 35
    14c2:	de 4f       	sbci	r29, 0xFE	; 254
    14c4:	e8 81       	ld	r30, Y
    14c6:	f9 81       	ldd	r31, Y+1	; 0x01
    14c8:	cd 5d       	subi	r28, 0xDD	; 221
    14ca:	d1 40       	sbci	r29, 0x01	; 1
    14cc:	31 96       	adiw	r30, 0x01	; 1
    14ce:	c3 52       	subi	r28, 0x23	; 35
    14d0:	de 4f       	sbci	r29, 0xFE	; 254
    14d2:	f9 83       	std	Y+1, r31	; 0x01
    14d4:	e8 83       	st	Y, r30
    14d6:	cd 5d       	subi	r28, 0xDD	; 221
    14d8:	d1 40       	sbci	r29, 0x01	; 1
    14da:	c5 52       	subi	r28, 0x25	; 37
    14dc:	de 4f       	sbci	r29, 0xFE	; 254
    14de:	a8 81       	ld	r26, Y
    14e0:	b9 81       	ldd	r27, Y+1	; 0x01
    14e2:	cb 5d       	subi	r28, 0xDB	; 219
    14e4:	d1 40       	sbci	r29, 0x01	; 1
    14e6:	0c 92       	st	X, r0
    14e8:	c5 52       	subi	r28, 0x25	; 37
    14ea:	de 4f       	sbci	r29, 0xFE	; 254
    14ec:	e8 81       	ld	r30, Y
    14ee:	f9 81       	ldd	r31, Y+1	; 0x01
    14f0:	cb 5d       	subi	r28, 0xDB	; 219
    14f2:	d1 40       	sbci	r29, 0x01	; 1
    14f4:	31 96       	adiw	r30, 0x01	; 1
    14f6:	c5 52       	subi	r28, 0x25	; 37
    14f8:	de 4f       	sbci	r29, 0xFE	; 254
    14fa:	f9 83       	std	Y+1, r31	; 0x01
    14fc:	e8 83       	st	Y, r30
    14fe:	cb 5d       	subi	r28, 0xDB	; 219
    1500:	d1 40       	sbci	r29, 0x01	; 1
    1502:	c1 52       	subi	r28, 0x21	; 33
    1504:	de 4f       	sbci	r29, 0xFE	; 254
    1506:	f8 81       	ld	r31, Y
    1508:	cf 5d       	subi	r28, 0xDF	; 223
    150a:	d1 40       	sbci	r29, 0x01	; 1
    150c:	f1 50       	subi	r31, 0x01	; 1
    150e:	c1 52       	subi	r28, 0x21	; 33
    1510:	de 4f       	sbci	r29, 0xFE	; 254
    1512:	f8 83       	st	Y, r31
    1514:	cf 5d       	subi	r28, 0xDF	; 223
    1516:	d1 40       	sbci	r29, 0x01	; 1
    1518:	c1 52       	subi	r28, 0x21	; 33
    151a:	de 4f       	sbci	r29, 0xFE	; 254
    151c:	28 81       	ld	r18, Y
    151e:	cf 5d       	subi	r28, 0xDF	; 223
    1520:	d1 40       	sbci	r29, 0x01	; 1
    1522:	22 23       	and	r18, r18
    1524:	31 f6       	brne	.-116    	; 0x14b2 <main+0x7c>
    1526:	c7 52       	subi	r28, 0x27	; 39
    1528:	de 4f       	sbci	r29, 0xFE	; 254
    152a:	a8 81       	ld	r26, Y
    152c:	b9 81       	ldd	r27, Y+1	; 0x01
    152e:	c9 5d       	subi	r28, 0xD9	; 217
    1530:	d1 40       	sbci	r29, 0x01	; 1
    1532:	15 96       	adiw	r26, 0x05	; 5
    1534:	1c 92       	st	X, r1
    1536:	fe 01       	movw	r30, r28
    1538:	eb 58       	subi	r30, 0x8B	; 139
    153a:	fe 4f       	sbci	r31, 0xFE	; 254
    153c:	c0 52       	subi	r28, 0x20	; 32
    153e:	de 4f       	sbci	r29, 0xFE	; 254
    1540:	f9 83       	std	Y+1, r31	; 0x01
    1542:	e8 83       	st	Y, r30
    1544:	c0 5e       	subi	r28, 0xE0	; 224
    1546:	d1 40       	sbci	r29, 0x01	; 1
    1548:	c0 52       	subi	r28, 0x20	; 32
    154a:	de 4f       	sbci	r29, 0xFE	; 254
    154c:	28 81       	ld	r18, Y
    154e:	39 81       	ldd	r19, Y+1	; 0x01
    1550:	c0 5e       	subi	r28, 0xE0	; 224
    1552:	d1 40       	sbci	r29, 0x01	; 1
    1554:	2a 5f       	subi	r18, 0xFA	; 250
    1556:	3f 4f       	sbci	r19, 0xFF	; 255
    1558:	ce 51       	subi	r28, 0x1E	; 30
    155a:	de 4f       	sbci	r29, 0xFE	; 254
    155c:	39 83       	std	Y+1, r19	; 0x01
    155e:	28 83       	st	Y, r18
    1560:	c2 5e       	subi	r28, 0xE2	; 226
    1562:	d1 40       	sbci	r29, 0x01	; 1
    1564:	8e e6       	ldi	r24, 0x6E	; 110
    1566:	91 e0       	ldi	r25, 0x01	; 1
    1568:	cc 51       	subi	r28, 0x1C	; 28
    156a:	de 4f       	sbci	r29, 0xFE	; 254
    156c:	99 83       	std	Y+1, r25	; 0x01
    156e:	88 83       	st	Y, r24
    1570:	c4 5e       	subi	r28, 0xE4	; 228
    1572:	d1 40       	sbci	r29, 0x01	; 1
    1574:	95 e0       	ldi	r25, 0x05	; 5
    1576:	ca 51       	subi	r28, 0x1A	; 26
    1578:	de 4f       	sbci	r29, 0xFE	; 254
    157a:	98 83       	st	Y, r25
    157c:	c6 5e       	subi	r28, 0xE6	; 230
    157e:	d1 40       	sbci	r29, 0x01	; 1
    1580:	cc 51       	subi	r28, 0x1C	; 28
    1582:	de 4f       	sbci	r29, 0xFE	; 254
    1584:	a8 81       	ld	r26, Y
    1586:	b9 81       	ldd	r27, Y+1	; 0x01
    1588:	c4 5e       	subi	r28, 0xE4	; 228
    158a:	d1 40       	sbci	r29, 0x01	; 1
    158c:	0c 90       	ld	r0, X
    158e:	cc 51       	subi	r28, 0x1C	; 28
    1590:	de 4f       	sbci	r29, 0xFE	; 254
    1592:	e8 81       	ld	r30, Y
    1594:	f9 81       	ldd	r31, Y+1	; 0x01
    1596:	c4 5e       	subi	r28, 0xE4	; 228
    1598:	d1 40       	sbci	r29, 0x01	; 1
    159a:	31 96       	adiw	r30, 0x01	; 1
    159c:	cc 51       	subi	r28, 0x1C	; 28
    159e:	de 4f       	sbci	r29, 0xFE	; 254
    15a0:	f9 83       	std	Y+1, r31	; 0x01
    15a2:	e8 83       	st	Y, r30
    15a4:	c4 5e       	subi	r28, 0xE4	; 228
    15a6:	d1 40       	sbci	r29, 0x01	; 1
    15a8:	ce 51       	subi	r28, 0x1E	; 30
    15aa:	de 4f       	sbci	r29, 0xFE	; 254
    15ac:	a8 81       	ld	r26, Y
    15ae:	b9 81       	ldd	r27, Y+1	; 0x01
    15b0:	c2 5e       	subi	r28, 0xE2	; 226
    15b2:	d1 40       	sbci	r29, 0x01	; 1
    15b4:	0c 92       	st	X, r0
    15b6:	ce 51       	subi	r28, 0x1E	; 30
    15b8:	de 4f       	sbci	r29, 0xFE	; 254
    15ba:	e8 81       	ld	r30, Y
    15bc:	f9 81       	ldd	r31, Y+1	; 0x01
    15be:	c2 5e       	subi	r28, 0xE2	; 226
    15c0:	d1 40       	sbci	r29, 0x01	; 1
    15c2:	31 96       	adiw	r30, 0x01	; 1
    15c4:	ce 51       	subi	r28, 0x1E	; 30
    15c6:	de 4f       	sbci	r29, 0xFE	; 254
    15c8:	f9 83       	std	Y+1, r31	; 0x01
    15ca:	e8 83       	st	Y, r30
    15cc:	c2 5e       	subi	r28, 0xE2	; 226
    15ce:	d1 40       	sbci	r29, 0x01	; 1
    15d0:	ca 51       	subi	r28, 0x1A	; 26
    15d2:	de 4f       	sbci	r29, 0xFE	; 254
    15d4:	f8 81       	ld	r31, Y
    15d6:	c6 5e       	subi	r28, 0xE6	; 230
    15d8:	d1 40       	sbci	r29, 0x01	; 1
    15da:	f1 50       	subi	r31, 0x01	; 1
    15dc:	ca 51       	subi	r28, 0x1A	; 26
    15de:	de 4f       	sbci	r29, 0xFE	; 254
    15e0:	f8 83       	st	Y, r31
    15e2:	c6 5e       	subi	r28, 0xE6	; 230
    15e4:	d1 40       	sbci	r29, 0x01	; 1
    15e6:	ca 51       	subi	r28, 0x1A	; 26
    15e8:	de 4f       	sbci	r29, 0xFE	; 254
    15ea:	28 81       	ld	r18, Y
    15ec:	c6 5e       	subi	r28, 0xE6	; 230
    15ee:	d1 40       	sbci	r29, 0x01	; 1
    15f0:	22 23       	and	r18, r18
    15f2:	31 f6       	brne	.-116    	; 0x1580 <main+0x14a>
    15f4:	c0 52       	subi	r28, 0x20	; 32
    15f6:	de 4f       	sbci	r29, 0xFE	; 254
    15f8:	a8 81       	ld	r26, Y
    15fa:	b9 81       	ldd	r27, Y+1	; 0x01
    15fc:	c0 5e       	subi	r28, 0xE0	; 224
    15fe:	d1 40       	sbci	r29, 0x01	; 1
    1600:	1b 96       	adiw	r26, 0x0b	; 11
    1602:	1c 92       	st	X, r1
    1604:	fe 01       	movw	r30, r28
    1606:	eb 58       	subi	r30, 0x8B	; 139
    1608:	fe 4f       	sbci	r31, 0xFE	; 254
    160a:	c9 51       	subi	r28, 0x19	; 25
    160c:	de 4f       	sbci	r29, 0xFE	; 254
    160e:	f9 83       	std	Y+1, r31	; 0x01
    1610:	e8 83       	st	Y, r30
    1612:	c7 5e       	subi	r28, 0xE7	; 231
    1614:	d1 40       	sbci	r29, 0x01	; 1
    1616:	c9 51       	subi	r28, 0x19	; 25
    1618:	de 4f       	sbci	r29, 0xFE	; 254
    161a:	28 81       	ld	r18, Y
    161c:	39 81       	ldd	r19, Y+1	; 0x01
    161e:	c7 5e       	subi	r28, 0xE7	; 231
    1620:	d1 40       	sbci	r29, 0x01	; 1
    1622:	24 5f       	subi	r18, 0xF4	; 244
    1624:	3f 4f       	sbci	r19, 0xFF	; 255
    1626:	c7 51       	subi	r28, 0x17	; 23
    1628:	de 4f       	sbci	r29, 0xFE	; 254
    162a:	39 83       	std	Y+1, r19	; 0x01
    162c:	28 83       	st	Y, r18
    162e:	c9 5e       	subi	r28, 0xE9	; 233
    1630:	d1 40       	sbci	r29, 0x01	; 1
    1632:	84 e7       	ldi	r24, 0x74	; 116
    1634:	91 e0       	ldi	r25, 0x01	; 1
    1636:	c5 51       	subi	r28, 0x15	; 21
    1638:	de 4f       	sbci	r29, 0xFE	; 254
    163a:	99 83       	std	Y+1, r25	; 0x01
    163c:	88 83       	st	Y, r24
    163e:	cb 5e       	subi	r28, 0xEB	; 235
    1640:	d1 40       	sbci	r29, 0x01	; 1
    1642:	95 e0       	ldi	r25, 0x05	; 5
    1644:	c3 51       	subi	r28, 0x13	; 19
    1646:	de 4f       	sbci	r29, 0xFE	; 254
    1648:	98 83       	st	Y, r25
    164a:	cd 5e       	subi	r28, 0xED	; 237
    164c:	d1 40       	sbci	r29, 0x01	; 1
    164e:	c5 51       	subi	r28, 0x15	; 21
    1650:	de 4f       	sbci	r29, 0xFE	; 254
    1652:	a8 81       	ld	r26, Y
    1654:	b9 81       	ldd	r27, Y+1	; 0x01
    1656:	cb 5e       	subi	r28, 0xEB	; 235
    1658:	d1 40       	sbci	r29, 0x01	; 1
    165a:	0c 90       	ld	r0, X
    165c:	c5 51       	subi	r28, 0x15	; 21
    165e:	de 4f       	sbci	r29, 0xFE	; 254
    1660:	e8 81       	ld	r30, Y
    1662:	f9 81       	ldd	r31, Y+1	; 0x01
    1664:	cb 5e       	subi	r28, 0xEB	; 235
    1666:	d1 40       	sbci	r29, 0x01	; 1
    1668:	31 96       	adiw	r30, 0x01	; 1
    166a:	c5 51       	subi	r28, 0x15	; 21
    166c:	de 4f       	sbci	r29, 0xFE	; 254
    166e:	f9 83       	std	Y+1, r31	; 0x01
    1670:	e8 83       	st	Y, r30
    1672:	cb 5e       	subi	r28, 0xEB	; 235
    1674:	d1 40       	sbci	r29, 0x01	; 1
    1676:	c7 51       	subi	r28, 0x17	; 23
    1678:	de 4f       	sbci	r29, 0xFE	; 254
    167a:	a8 81       	ld	r26, Y
    167c:	b9 81       	ldd	r27, Y+1	; 0x01
    167e:	c9 5e       	subi	r28, 0xE9	; 233
    1680:	d1 40       	sbci	r29, 0x01	; 1
    1682:	0c 92       	st	X, r0
    1684:	c7 51       	subi	r28, 0x17	; 23
    1686:	de 4f       	sbci	r29, 0xFE	; 254
    1688:	e8 81       	ld	r30, Y
    168a:	f9 81       	ldd	r31, Y+1	; 0x01
    168c:	c9 5e       	subi	r28, 0xE9	; 233
    168e:	d1 40       	sbci	r29, 0x01	; 1
    1690:	31 96       	adiw	r30, 0x01	; 1
    1692:	c7 51       	subi	r28, 0x17	; 23
    1694:	de 4f       	sbci	r29, 0xFE	; 254
    1696:	f9 83       	std	Y+1, r31	; 0x01
    1698:	e8 83       	st	Y, r30
    169a:	c9 5e       	subi	r28, 0xE9	; 233
    169c:	d1 40       	sbci	r29, 0x01	; 1
    169e:	c3 51       	subi	r28, 0x13	; 19
    16a0:	de 4f       	sbci	r29, 0xFE	; 254
    16a2:	f8 81       	ld	r31, Y
    16a4:	cd 5e       	subi	r28, 0xED	; 237
    16a6:	d1 40       	sbci	r29, 0x01	; 1
    16a8:	f1 50       	subi	r31, 0x01	; 1
    16aa:	c3 51       	subi	r28, 0x13	; 19
    16ac:	de 4f       	sbci	r29, 0xFE	; 254
    16ae:	f8 83       	st	Y, r31
    16b0:	cd 5e       	subi	r28, 0xED	; 237
    16b2:	d1 40       	sbci	r29, 0x01	; 1
    16b4:	c3 51       	subi	r28, 0x13	; 19
    16b6:	de 4f       	sbci	r29, 0xFE	; 254
    16b8:	28 81       	ld	r18, Y
    16ba:	cd 5e       	subi	r28, 0xED	; 237
    16bc:	d1 40       	sbci	r29, 0x01	; 1
    16be:	22 23       	and	r18, r18
    16c0:	31 f6       	brne	.-116    	; 0x164e <main+0x218>
    16c2:	c9 51       	subi	r28, 0x19	; 25
    16c4:	de 4f       	sbci	r29, 0xFE	; 254
    16c6:	a8 81       	ld	r26, Y
    16c8:	b9 81       	ldd	r27, Y+1	; 0x01
    16ca:	c7 5e       	subi	r28, 0xE7	; 231
    16cc:	d1 40       	sbci	r29, 0x01	; 1
    16ce:	51 96       	adiw	r26, 0x11	; 17
    16d0:	1c 92       	st	X, r1
    16d2:	fe 01       	movw	r30, r28
    16d4:	eb 58       	subi	r30, 0x8B	; 139
    16d6:	fe 4f       	sbci	r31, 0xFE	; 254
    16d8:	c2 51       	subi	r28, 0x12	; 18
    16da:	de 4f       	sbci	r29, 0xFE	; 254
    16dc:	f9 83       	std	Y+1, r31	; 0x01
    16de:	e8 83       	st	Y, r30
    16e0:	ce 5e       	subi	r28, 0xEE	; 238
    16e2:	d1 40       	sbci	r29, 0x01	; 1
    16e4:	c2 51       	subi	r28, 0x12	; 18
    16e6:	de 4f       	sbci	r29, 0xFE	; 254
    16e8:	28 81       	ld	r18, Y
    16ea:	39 81       	ldd	r19, Y+1	; 0x01
    16ec:	ce 5e       	subi	r28, 0xEE	; 238
    16ee:	d1 40       	sbci	r29, 0x01	; 1
    16f0:	2e 5e       	subi	r18, 0xEE	; 238
    16f2:	3f 4f       	sbci	r19, 0xFF	; 255
    16f4:	c0 51       	subi	r28, 0x10	; 16
    16f6:	de 4f       	sbci	r29, 0xFE	; 254
    16f8:	39 83       	std	Y+1, r19	; 0x01
    16fa:	28 83       	st	Y, r18
    16fc:	c0 5f       	subi	r28, 0xF0	; 240
    16fe:	d1 40       	sbci	r29, 0x01	; 1
    1700:	8a e7       	ldi	r24, 0x7A	; 122
    1702:	91 e0       	ldi	r25, 0x01	; 1
    1704:	ce 50       	subi	r28, 0x0E	; 14
    1706:	de 4f       	sbci	r29, 0xFE	; 254
    1708:	99 83       	std	Y+1, r25	; 0x01
    170a:	88 83       	st	Y, r24
    170c:	c2 5f       	subi	r28, 0xF2	; 242
    170e:	d1 40       	sbci	r29, 0x01	; 1
    1710:	95 e0       	ldi	r25, 0x05	; 5
    1712:	cc 50       	subi	r28, 0x0C	; 12
    1714:	de 4f       	sbci	r29, 0xFE	; 254
    1716:	98 83       	st	Y, r25
    1718:	c4 5f       	subi	r28, 0xF4	; 244
    171a:	d1 40       	sbci	r29, 0x01	; 1
    171c:	ce 50       	subi	r28, 0x0E	; 14
    171e:	de 4f       	sbci	r29, 0xFE	; 254
    1720:	a8 81       	ld	r26, Y
    1722:	b9 81       	ldd	r27, Y+1	; 0x01
    1724:	c2 5f       	subi	r28, 0xF2	; 242
    1726:	d1 40       	sbci	r29, 0x01	; 1
    1728:	0c 90       	ld	r0, X
    172a:	ce 50       	subi	r28, 0x0E	; 14
    172c:	de 4f       	sbci	r29, 0xFE	; 254
    172e:	e8 81       	ld	r30, Y
    1730:	f9 81       	ldd	r31, Y+1	; 0x01
    1732:	c2 5f       	subi	r28, 0xF2	; 242
    1734:	d1 40       	sbci	r29, 0x01	; 1
    1736:	31 96       	adiw	r30, 0x01	; 1
    1738:	ce 50       	subi	r28, 0x0E	; 14
    173a:	de 4f       	sbci	r29, 0xFE	; 254
    173c:	f9 83       	std	Y+1, r31	; 0x01
    173e:	e8 83       	st	Y, r30
    1740:	c2 5f       	subi	r28, 0xF2	; 242
    1742:	d1 40       	sbci	r29, 0x01	; 1
    1744:	c0 51       	subi	r28, 0x10	; 16
    1746:	de 4f       	sbci	r29, 0xFE	; 254
    1748:	a8 81       	ld	r26, Y
    174a:	b9 81       	ldd	r27, Y+1	; 0x01
    174c:	c0 5f       	subi	r28, 0xF0	; 240
    174e:	d1 40       	sbci	r29, 0x01	; 1
    1750:	0c 92       	st	X, r0
    1752:	c0 51       	subi	r28, 0x10	; 16
    1754:	de 4f       	sbci	r29, 0xFE	; 254
    1756:	e8 81       	ld	r30, Y
    1758:	f9 81       	ldd	r31, Y+1	; 0x01
    175a:	c0 5f       	subi	r28, 0xF0	; 240
    175c:	d1 40       	sbci	r29, 0x01	; 1
    175e:	31 96       	adiw	r30, 0x01	; 1
    1760:	c0 51       	subi	r28, 0x10	; 16
    1762:	de 4f       	sbci	r29, 0xFE	; 254
    1764:	f9 83       	std	Y+1, r31	; 0x01
    1766:	e8 83       	st	Y, r30
    1768:	c0 5f       	subi	r28, 0xF0	; 240
    176a:	d1 40       	sbci	r29, 0x01	; 1
    176c:	cc 50       	subi	r28, 0x0C	; 12
    176e:	de 4f       	sbci	r29, 0xFE	; 254
    1770:	f8 81       	ld	r31, Y
    1772:	c4 5f       	subi	r28, 0xF4	; 244
    1774:	d1 40       	sbci	r29, 0x01	; 1
    1776:	f1 50       	subi	r31, 0x01	; 1
    1778:	cc 50       	subi	r28, 0x0C	; 12
    177a:	de 4f       	sbci	r29, 0xFE	; 254
    177c:	f8 83       	st	Y, r31
    177e:	c4 5f       	subi	r28, 0xF4	; 244
    1780:	d1 40       	sbci	r29, 0x01	; 1
    1782:	cc 50       	subi	r28, 0x0C	; 12
    1784:	de 4f       	sbci	r29, 0xFE	; 254
    1786:	28 81       	ld	r18, Y
    1788:	c4 5f       	subi	r28, 0xF4	; 244
    178a:	d1 40       	sbci	r29, 0x01	; 1
    178c:	22 23       	and	r18, r18
    178e:	31 f6       	brne	.-116    	; 0x171c <main+0x2e6>
    1790:	c2 51       	subi	r28, 0x12	; 18
    1792:	de 4f       	sbci	r29, 0xFE	; 254
    1794:	a8 81       	ld	r26, Y
    1796:	b9 81       	ldd	r27, Y+1	; 0x01
    1798:	ce 5e       	subi	r28, 0xEE	; 238
    179a:	d1 40       	sbci	r29, 0x01	; 1
    179c:	57 96       	adiw	r26, 0x17	; 23
    179e:	1c 92       	st	X, r1
    17a0:	fe 01       	movw	r30, r28
    17a2:	eb 58       	subi	r30, 0x8B	; 139
    17a4:	fe 4f       	sbci	r31, 0xFE	; 254
    17a6:	cb 50       	subi	r28, 0x0B	; 11
    17a8:	de 4f       	sbci	r29, 0xFE	; 254
    17aa:	f9 83       	std	Y+1, r31	; 0x01
    17ac:	e8 83       	st	Y, r30
    17ae:	c5 5f       	subi	r28, 0xF5	; 245
    17b0:	d1 40       	sbci	r29, 0x01	; 1
    17b2:	cb 50       	subi	r28, 0x0B	; 11
    17b4:	de 4f       	sbci	r29, 0xFE	; 254
    17b6:	28 81       	ld	r18, Y
    17b8:	39 81       	ldd	r19, Y+1	; 0x01
    17ba:	c5 5f       	subi	r28, 0xF5	; 245
    17bc:	d1 40       	sbci	r29, 0x01	; 1
    17be:	28 5e       	subi	r18, 0xE8	; 232
    17c0:	3f 4f       	sbci	r19, 0xFF	; 255
    17c2:	c9 50       	subi	r28, 0x09	; 9
    17c4:	de 4f       	sbci	r29, 0xFE	; 254
    17c6:	39 83       	std	Y+1, r19	; 0x01
    17c8:	28 83       	st	Y, r18
    17ca:	c7 5f       	subi	r28, 0xF7	; 247
    17cc:	d1 40       	sbci	r29, 0x01	; 1
    17ce:	80 e8       	ldi	r24, 0x80	; 128
    17d0:	91 e0       	ldi	r25, 0x01	; 1
    17d2:	c7 50       	subi	r28, 0x07	; 7
    17d4:	de 4f       	sbci	r29, 0xFE	; 254
    17d6:	99 83       	std	Y+1, r25	; 0x01
    17d8:	88 83       	st	Y, r24
    17da:	c9 5f       	subi	r28, 0xF9	; 249
    17dc:	d1 40       	sbci	r29, 0x01	; 1
    17de:	95 e0       	ldi	r25, 0x05	; 5
    17e0:	c5 50       	subi	r28, 0x05	; 5
    17e2:	de 4f       	sbci	r29, 0xFE	; 254
    17e4:	98 83       	st	Y, r25
    17e6:	cb 5f       	subi	r28, 0xFB	; 251
    17e8:	d1 40       	sbci	r29, 0x01	; 1
    17ea:	c7 50       	subi	r28, 0x07	; 7
    17ec:	de 4f       	sbci	r29, 0xFE	; 254
    17ee:	a8 81       	ld	r26, Y
    17f0:	b9 81       	ldd	r27, Y+1	; 0x01
    17f2:	c9 5f       	subi	r28, 0xF9	; 249
    17f4:	d1 40       	sbci	r29, 0x01	; 1
    17f6:	0c 90       	ld	r0, X
    17f8:	c7 50       	subi	r28, 0x07	; 7
    17fa:	de 4f       	sbci	r29, 0xFE	; 254
    17fc:	e8 81       	ld	r30, Y
    17fe:	f9 81       	ldd	r31, Y+1	; 0x01
    1800:	c9 5f       	subi	r28, 0xF9	; 249
    1802:	d1 40       	sbci	r29, 0x01	; 1
    1804:	31 96       	adiw	r30, 0x01	; 1
    1806:	c7 50       	subi	r28, 0x07	; 7
    1808:	de 4f       	sbci	r29, 0xFE	; 254
    180a:	f9 83       	std	Y+1, r31	; 0x01
    180c:	e8 83       	st	Y, r30
    180e:	c9 5f       	subi	r28, 0xF9	; 249
    1810:	d1 40       	sbci	r29, 0x01	; 1
    1812:	c9 50       	subi	r28, 0x09	; 9
    1814:	de 4f       	sbci	r29, 0xFE	; 254
    1816:	a8 81       	ld	r26, Y
    1818:	b9 81       	ldd	r27, Y+1	; 0x01
    181a:	c7 5f       	subi	r28, 0xF7	; 247
    181c:	d1 40       	sbci	r29, 0x01	; 1
    181e:	0c 92       	st	X, r0
    1820:	c9 50       	subi	r28, 0x09	; 9
    1822:	de 4f       	sbci	r29, 0xFE	; 254
    1824:	e8 81       	ld	r30, Y
    1826:	f9 81       	ldd	r31, Y+1	; 0x01
    1828:	c7 5f       	subi	r28, 0xF7	; 247
    182a:	d1 40       	sbci	r29, 0x01	; 1
    182c:	31 96       	adiw	r30, 0x01	; 1
    182e:	c9 50       	subi	r28, 0x09	; 9
    1830:	de 4f       	sbci	r29, 0xFE	; 254
    1832:	f9 83       	std	Y+1, r31	; 0x01
    1834:	e8 83       	st	Y, r30
    1836:	c7 5f       	subi	r28, 0xF7	; 247
    1838:	d1 40       	sbci	r29, 0x01	; 1
    183a:	c5 50       	subi	r28, 0x05	; 5
    183c:	de 4f       	sbci	r29, 0xFE	; 254
    183e:	f8 81       	ld	r31, Y
    1840:	cb 5f       	subi	r28, 0xFB	; 251
    1842:	d1 40       	sbci	r29, 0x01	; 1
    1844:	f1 50       	subi	r31, 0x01	; 1
    1846:	c5 50       	subi	r28, 0x05	; 5
    1848:	de 4f       	sbci	r29, 0xFE	; 254
    184a:	f8 83       	st	Y, r31
    184c:	cb 5f       	subi	r28, 0xFB	; 251
    184e:	d1 40       	sbci	r29, 0x01	; 1
    1850:	c5 50       	subi	r28, 0x05	; 5
    1852:	de 4f       	sbci	r29, 0xFE	; 254
    1854:	28 81       	ld	r18, Y
    1856:	cb 5f       	subi	r28, 0xFB	; 251
    1858:	d1 40       	sbci	r29, 0x01	; 1
    185a:	22 23       	and	r18, r18
    185c:	31 f6       	brne	.-116    	; 0x17ea <main+0x3b4>
    185e:	cb 50       	subi	r28, 0x0B	; 11
    1860:	de 4f       	sbci	r29, 0xFE	; 254
    1862:	a8 81       	ld	r26, Y
    1864:	b9 81       	ldd	r27, Y+1	; 0x01
    1866:	c5 5f       	subi	r28, 0xF5	; 245
    1868:	d1 40       	sbci	r29, 0x01	; 1
    186a:	5d 96       	adiw	r26, 0x1d	; 29
    186c:	1c 92       	st	X, r1
    186e:	fe 01       	movw	r30, r28
    1870:	eb 58       	subi	r30, 0x8B	; 139
    1872:	fe 4f       	sbci	r31, 0xFE	; 254
    1874:	c4 50       	subi	r28, 0x04	; 4
    1876:	de 4f       	sbci	r29, 0xFE	; 254
    1878:	f9 83       	std	Y+1, r31	; 0x01
    187a:	e8 83       	st	Y, r30
    187c:	cc 5f       	subi	r28, 0xFC	; 252
    187e:	d1 40       	sbci	r29, 0x01	; 1
    1880:	c4 50       	subi	r28, 0x04	; 4
    1882:	de 4f       	sbci	r29, 0xFE	; 254
    1884:	28 81       	ld	r18, Y
    1886:	39 81       	ldd	r19, Y+1	; 0x01
    1888:	cc 5f       	subi	r28, 0xFC	; 252
    188a:	d1 40       	sbci	r29, 0x01	; 1
    188c:	22 5e       	subi	r18, 0xE2	; 226
    188e:	3f 4f       	sbci	r19, 0xFF	; 255
    1890:	c2 50       	subi	r28, 0x02	; 2
    1892:	de 4f       	sbci	r29, 0xFE	; 254
    1894:	39 83       	std	Y+1, r19	; 0x01
    1896:	28 83       	st	Y, r18
    1898:	ce 5f       	subi	r28, 0xFE	; 254
    189a:	d1 40       	sbci	r29, 0x01	; 1
    189c:	86 e8       	ldi	r24, 0x86	; 134
    189e:	91 e0       	ldi	r25, 0x01	; 1
    18a0:	c0 50       	subi	r28, 0x00	; 0
    18a2:	de 4f       	sbci	r29, 0xFE	; 254
    18a4:	99 83       	std	Y+1, r25	; 0x01
    18a6:	88 83       	st	Y, r24
    18a8:	c0 50       	subi	r28, 0x00	; 0
    18aa:	d2 40       	sbci	r29, 0x02	; 2
    18ac:	95 e0       	ldi	r25, 0x05	; 5
    18ae:	ce 5f       	subi	r28, 0xFE	; 254
    18b0:	dd 4f       	sbci	r29, 0xFD	; 253
    18b2:	98 83       	st	Y, r25
    18b4:	c2 50       	subi	r28, 0x02	; 2
    18b6:	d2 40       	sbci	r29, 0x02	; 2
    18b8:	c0 50       	subi	r28, 0x00	; 0
    18ba:	de 4f       	sbci	r29, 0xFE	; 254
    18bc:	a8 81       	ld	r26, Y
    18be:	b9 81       	ldd	r27, Y+1	; 0x01
    18c0:	c0 50       	subi	r28, 0x00	; 0
    18c2:	d2 40       	sbci	r29, 0x02	; 2
    18c4:	0c 90       	ld	r0, X
    18c6:	c0 50       	subi	r28, 0x00	; 0
    18c8:	de 4f       	sbci	r29, 0xFE	; 254
    18ca:	e8 81       	ld	r30, Y
    18cc:	f9 81       	ldd	r31, Y+1	; 0x01
    18ce:	c0 50       	subi	r28, 0x00	; 0
    18d0:	d2 40       	sbci	r29, 0x02	; 2
    18d2:	31 96       	adiw	r30, 0x01	; 1
    18d4:	c0 50       	subi	r28, 0x00	; 0
    18d6:	de 4f       	sbci	r29, 0xFE	; 254
    18d8:	f9 83       	std	Y+1, r31	; 0x01
    18da:	e8 83       	st	Y, r30
    18dc:	c0 50       	subi	r28, 0x00	; 0
    18de:	d2 40       	sbci	r29, 0x02	; 2
    18e0:	c2 50       	subi	r28, 0x02	; 2
    18e2:	de 4f       	sbci	r29, 0xFE	; 254
    18e4:	a8 81       	ld	r26, Y
    18e6:	b9 81       	ldd	r27, Y+1	; 0x01
    18e8:	ce 5f       	subi	r28, 0xFE	; 254
    18ea:	d1 40       	sbci	r29, 0x01	; 1
    18ec:	0c 92       	st	X, r0
    18ee:	c2 50       	subi	r28, 0x02	; 2
    18f0:	de 4f       	sbci	r29, 0xFE	; 254
    18f2:	e8 81       	ld	r30, Y
    18f4:	f9 81       	ldd	r31, Y+1	; 0x01
    18f6:	ce 5f       	subi	r28, 0xFE	; 254
    18f8:	d1 40       	sbci	r29, 0x01	; 1
    18fa:	31 96       	adiw	r30, 0x01	; 1
    18fc:	c2 50       	subi	r28, 0x02	; 2
    18fe:	de 4f       	sbci	r29, 0xFE	; 254
    1900:	f9 83       	std	Y+1, r31	; 0x01
    1902:	e8 83       	st	Y, r30
    1904:	ce 5f       	subi	r28, 0xFE	; 254
    1906:	d1 40       	sbci	r29, 0x01	; 1
    1908:	ce 5f       	subi	r28, 0xFE	; 254
    190a:	dd 4f       	sbci	r29, 0xFD	; 253
    190c:	f8 81       	ld	r31, Y
    190e:	c2 50       	subi	r28, 0x02	; 2
    1910:	d2 40       	sbci	r29, 0x02	; 2
    1912:	f1 50       	subi	r31, 0x01	; 1
    1914:	ce 5f       	subi	r28, 0xFE	; 254
    1916:	dd 4f       	sbci	r29, 0xFD	; 253
    1918:	f8 83       	st	Y, r31
    191a:	c2 50       	subi	r28, 0x02	; 2
    191c:	d2 40       	sbci	r29, 0x02	; 2
    191e:	ce 5f       	subi	r28, 0xFE	; 254
    1920:	dd 4f       	sbci	r29, 0xFD	; 253
    1922:	28 81       	ld	r18, Y
    1924:	c2 50       	subi	r28, 0x02	; 2
    1926:	d2 40       	sbci	r29, 0x02	; 2
    1928:	22 23       	and	r18, r18
    192a:	31 f6       	brne	.-116    	; 0x18b8 <main+0x482>
    192c:	c4 50       	subi	r28, 0x04	; 4
    192e:	de 4f       	sbci	r29, 0xFE	; 254
    1930:	a8 81       	ld	r26, Y
    1932:	b9 81       	ldd	r27, Y+1	; 0x01
    1934:	cc 5f       	subi	r28, 0xFC	; 252
    1936:	d1 40       	sbci	r29, 0x01	; 1
    1938:	93 96       	adiw	r26, 0x23	; 35
    193a:	1c 92       	st	X, r1
    193c:	fe 01       	movw	r30, r28
    193e:	eb 58       	subi	r30, 0x8B	; 139
    1940:	fe 4f       	sbci	r31, 0xFE	; 254
    1942:	cd 5f       	subi	r28, 0xFD	; 253
    1944:	dd 4f       	sbci	r29, 0xFD	; 253
    1946:	f9 83       	std	Y+1, r31	; 0x01
    1948:	e8 83       	st	Y, r30
    194a:	c3 50       	subi	r28, 0x03	; 3
    194c:	d2 40       	sbci	r29, 0x02	; 2
    194e:	cd 5f       	subi	r28, 0xFD	; 253
    1950:	dd 4f       	sbci	r29, 0xFD	; 253
    1952:	28 81       	ld	r18, Y
    1954:	39 81       	ldd	r19, Y+1	; 0x01
    1956:	c3 50       	subi	r28, 0x03	; 3
    1958:	d2 40       	sbci	r29, 0x02	; 2
    195a:	2c 5d       	subi	r18, 0xDC	; 220
    195c:	3f 4f       	sbci	r19, 0xFF	; 255
    195e:	cb 5f       	subi	r28, 0xFB	; 251
    1960:	dd 4f       	sbci	r29, 0xFD	; 253
    1962:	39 83       	std	Y+1, r19	; 0x01
    1964:	28 83       	st	Y, r18
    1966:	c5 50       	subi	r28, 0x05	; 5
    1968:	d2 40       	sbci	r29, 0x02	; 2
    196a:	8c e8       	ldi	r24, 0x8C	; 140
    196c:	91 e0       	ldi	r25, 0x01	; 1
    196e:	c9 5f       	subi	r28, 0xF9	; 249
    1970:	dd 4f       	sbci	r29, 0xFD	; 253
    1972:	99 83       	std	Y+1, r25	; 0x01
    1974:	88 83       	st	Y, r24
    1976:	c7 50       	subi	r28, 0x07	; 7
    1978:	d2 40       	sbci	r29, 0x02	; 2
    197a:	95 e0       	ldi	r25, 0x05	; 5
    197c:	c7 5f       	subi	r28, 0xF7	; 247
    197e:	dd 4f       	sbci	r29, 0xFD	; 253
    1980:	98 83       	st	Y, r25
    1982:	c9 50       	subi	r28, 0x09	; 9
    1984:	d2 40       	sbci	r29, 0x02	; 2
    1986:	c9 5f       	subi	r28, 0xF9	; 249
    1988:	dd 4f       	sbci	r29, 0xFD	; 253
    198a:	a8 81       	ld	r26, Y
    198c:	b9 81       	ldd	r27, Y+1	; 0x01
    198e:	c7 50       	subi	r28, 0x07	; 7
    1990:	d2 40       	sbci	r29, 0x02	; 2
    1992:	0c 90       	ld	r0, X
    1994:	c9 5f       	subi	r28, 0xF9	; 249
    1996:	dd 4f       	sbci	r29, 0xFD	; 253
    1998:	e8 81       	ld	r30, Y
    199a:	f9 81       	ldd	r31, Y+1	; 0x01
    199c:	c7 50       	subi	r28, 0x07	; 7
    199e:	d2 40       	sbci	r29, 0x02	; 2
    19a0:	31 96       	adiw	r30, 0x01	; 1
    19a2:	c9 5f       	subi	r28, 0xF9	; 249
    19a4:	dd 4f       	sbci	r29, 0xFD	; 253
    19a6:	f9 83       	std	Y+1, r31	; 0x01
    19a8:	e8 83       	st	Y, r30
    19aa:	c7 50       	subi	r28, 0x07	; 7
    19ac:	d2 40       	sbci	r29, 0x02	; 2
    19ae:	cb 5f       	subi	r28, 0xFB	; 251
    19b0:	dd 4f       	sbci	r29, 0xFD	; 253
    19b2:	a8 81       	ld	r26, Y
    19b4:	b9 81       	ldd	r27, Y+1	; 0x01
    19b6:	c5 50       	subi	r28, 0x05	; 5
    19b8:	d2 40       	sbci	r29, 0x02	; 2
    19ba:	0c 92       	st	X, r0
    19bc:	cb 5f       	subi	r28, 0xFB	; 251
    19be:	dd 4f       	sbci	r29, 0xFD	; 253
    19c0:	e8 81       	ld	r30, Y
    19c2:	f9 81       	ldd	r31, Y+1	; 0x01
    19c4:	c5 50       	subi	r28, 0x05	; 5
    19c6:	d2 40       	sbci	r29, 0x02	; 2
    19c8:	31 96       	adiw	r30, 0x01	; 1
    19ca:	cb 5f       	subi	r28, 0xFB	; 251
    19cc:	dd 4f       	sbci	r29, 0xFD	; 253
    19ce:	f9 83       	std	Y+1, r31	; 0x01
    19d0:	e8 83       	st	Y, r30
    19d2:	c5 50       	subi	r28, 0x05	; 5
    19d4:	d2 40       	sbci	r29, 0x02	; 2
    19d6:	c7 5f       	subi	r28, 0xF7	; 247
    19d8:	dd 4f       	sbci	r29, 0xFD	; 253
    19da:	f8 81       	ld	r31, Y
    19dc:	c9 50       	subi	r28, 0x09	; 9
    19de:	d2 40       	sbci	r29, 0x02	; 2
    19e0:	f1 50       	subi	r31, 0x01	; 1
    19e2:	c7 5f       	subi	r28, 0xF7	; 247
    19e4:	dd 4f       	sbci	r29, 0xFD	; 253
    19e6:	f8 83       	st	Y, r31
    19e8:	c9 50       	subi	r28, 0x09	; 9
    19ea:	d2 40       	sbci	r29, 0x02	; 2
    19ec:	c7 5f       	subi	r28, 0xF7	; 247
    19ee:	dd 4f       	sbci	r29, 0xFD	; 253
    19f0:	28 81       	ld	r18, Y
    19f2:	c9 50       	subi	r28, 0x09	; 9
    19f4:	d2 40       	sbci	r29, 0x02	; 2
    19f6:	22 23       	and	r18, r18
    19f8:	31 f6       	brne	.-116    	; 0x1986 <main+0x550>
    19fa:	cd 5f       	subi	r28, 0xFD	; 253
    19fc:	dd 4f       	sbci	r29, 0xFD	; 253
    19fe:	a8 81       	ld	r26, Y
    1a00:	b9 81       	ldd	r27, Y+1	; 0x01
    1a02:	c3 50       	subi	r28, 0x03	; 3
    1a04:	d2 40       	sbci	r29, 0x02	; 2
    1a06:	99 96       	adiw	r26, 0x29	; 41
    1a08:	1c 92       	st	X, r1
    1a0a:	fe 01       	movw	r30, r28
    1a0c:	eb 58       	subi	r30, 0x8B	; 139
    1a0e:	fe 4f       	sbci	r31, 0xFE	; 254
    1a10:	c6 5f       	subi	r28, 0xF6	; 246
    1a12:	dd 4f       	sbci	r29, 0xFD	; 253
    1a14:	f9 83       	std	Y+1, r31	; 0x01
    1a16:	e8 83       	st	Y, r30
    1a18:	ca 50       	subi	r28, 0x0A	; 10
    1a1a:	d2 40       	sbci	r29, 0x02	; 2
    1a1c:	c6 5f       	subi	r28, 0xF6	; 246
    1a1e:	dd 4f       	sbci	r29, 0xFD	; 253
    1a20:	28 81       	ld	r18, Y
    1a22:	39 81       	ldd	r19, Y+1	; 0x01
    1a24:	ca 50       	subi	r28, 0x0A	; 10
    1a26:	d2 40       	sbci	r29, 0x02	; 2
    1a28:	26 5d       	subi	r18, 0xD6	; 214
    1a2a:	3f 4f       	sbci	r19, 0xFF	; 255
    1a2c:	c4 5f       	subi	r28, 0xF4	; 244
    1a2e:	dd 4f       	sbci	r29, 0xFD	; 253
    1a30:	39 83       	std	Y+1, r19	; 0x01
    1a32:	28 83       	st	Y, r18
    1a34:	cc 50       	subi	r28, 0x0C	; 12
    1a36:	d2 40       	sbci	r29, 0x02	; 2
    1a38:	82 e9       	ldi	r24, 0x92	; 146
    1a3a:	91 e0       	ldi	r25, 0x01	; 1
    1a3c:	c2 5f       	subi	r28, 0xF2	; 242
    1a3e:	dd 4f       	sbci	r29, 0xFD	; 253
    1a40:	99 83       	std	Y+1, r25	; 0x01
    1a42:	88 83       	st	Y, r24
    1a44:	ce 50       	subi	r28, 0x0E	; 14
    1a46:	d2 40       	sbci	r29, 0x02	; 2
    1a48:	95 e0       	ldi	r25, 0x05	; 5
    1a4a:	c0 5f       	subi	r28, 0xF0	; 240
    1a4c:	dd 4f       	sbci	r29, 0xFD	; 253
    1a4e:	98 83       	st	Y, r25
    1a50:	c0 51       	subi	r28, 0x10	; 16
    1a52:	d2 40       	sbci	r29, 0x02	; 2
    1a54:	c2 5f       	subi	r28, 0xF2	; 242
    1a56:	dd 4f       	sbci	r29, 0xFD	; 253
    1a58:	a8 81       	ld	r26, Y
    1a5a:	b9 81       	ldd	r27, Y+1	; 0x01
    1a5c:	ce 50       	subi	r28, 0x0E	; 14
    1a5e:	d2 40       	sbci	r29, 0x02	; 2
    1a60:	0c 90       	ld	r0, X
    1a62:	c2 5f       	subi	r28, 0xF2	; 242
    1a64:	dd 4f       	sbci	r29, 0xFD	; 253
    1a66:	e8 81       	ld	r30, Y
    1a68:	f9 81       	ldd	r31, Y+1	; 0x01
    1a6a:	ce 50       	subi	r28, 0x0E	; 14
    1a6c:	d2 40       	sbci	r29, 0x02	; 2
    1a6e:	31 96       	adiw	r30, 0x01	; 1
    1a70:	c2 5f       	subi	r28, 0xF2	; 242
    1a72:	dd 4f       	sbci	r29, 0xFD	; 253
    1a74:	f9 83       	std	Y+1, r31	; 0x01
    1a76:	e8 83       	st	Y, r30
    1a78:	ce 50       	subi	r28, 0x0E	; 14
    1a7a:	d2 40       	sbci	r29, 0x02	; 2
    1a7c:	c4 5f       	subi	r28, 0xF4	; 244
    1a7e:	dd 4f       	sbci	r29, 0xFD	; 253
    1a80:	a8 81       	ld	r26, Y
    1a82:	b9 81       	ldd	r27, Y+1	; 0x01
    1a84:	cc 50       	subi	r28, 0x0C	; 12
    1a86:	d2 40       	sbci	r29, 0x02	; 2
    1a88:	0c 92       	st	X, r0
    1a8a:	c4 5f       	subi	r28, 0xF4	; 244
    1a8c:	dd 4f       	sbci	r29, 0xFD	; 253
    1a8e:	e8 81       	ld	r30, Y
    1a90:	f9 81       	ldd	r31, Y+1	; 0x01
    1a92:	cc 50       	subi	r28, 0x0C	; 12
    1a94:	d2 40       	sbci	r29, 0x02	; 2
    1a96:	31 96       	adiw	r30, 0x01	; 1
    1a98:	c4 5f       	subi	r28, 0xF4	; 244
    1a9a:	dd 4f       	sbci	r29, 0xFD	; 253
    1a9c:	f9 83       	std	Y+1, r31	; 0x01
    1a9e:	e8 83       	st	Y, r30
    1aa0:	cc 50       	subi	r28, 0x0C	; 12
    1aa2:	d2 40       	sbci	r29, 0x02	; 2
    1aa4:	c0 5f       	subi	r28, 0xF0	; 240
    1aa6:	dd 4f       	sbci	r29, 0xFD	; 253
    1aa8:	f8 81       	ld	r31, Y
    1aaa:	c0 51       	subi	r28, 0x10	; 16
    1aac:	d2 40       	sbci	r29, 0x02	; 2
    1aae:	f1 50       	subi	r31, 0x01	; 1
    1ab0:	c0 5f       	subi	r28, 0xF0	; 240
    1ab2:	dd 4f       	sbci	r29, 0xFD	; 253
    1ab4:	f8 83       	st	Y, r31
    1ab6:	c0 51       	subi	r28, 0x10	; 16
    1ab8:	d2 40       	sbci	r29, 0x02	; 2
    1aba:	c0 5f       	subi	r28, 0xF0	; 240
    1abc:	dd 4f       	sbci	r29, 0xFD	; 253
    1abe:	28 81       	ld	r18, Y
    1ac0:	c0 51       	subi	r28, 0x10	; 16
    1ac2:	d2 40       	sbci	r29, 0x02	; 2
    1ac4:	22 23       	and	r18, r18
    1ac6:	31 f6       	brne	.-116    	; 0x1a54 <main+0x61e>
    1ac8:	c6 5f       	subi	r28, 0xF6	; 246
    1aca:	dd 4f       	sbci	r29, 0xFD	; 253
    1acc:	a8 81       	ld	r26, Y
    1ace:	b9 81       	ldd	r27, Y+1	; 0x01
    1ad0:	ca 50       	subi	r28, 0x0A	; 10
    1ad2:	d2 40       	sbci	r29, 0x02	; 2
    1ad4:	9f 96       	adiw	r26, 0x2f	; 47
    1ad6:	1c 92       	st	X, r1
    1ad8:	fe 01       	movw	r30, r28
    1ada:	eb 58       	subi	r30, 0x8B	; 139
    1adc:	fe 4f       	sbci	r31, 0xFE	; 254
    1ade:	cf 5e       	subi	r28, 0xEF	; 239
    1ae0:	dd 4f       	sbci	r29, 0xFD	; 253
    1ae2:	f9 83       	std	Y+1, r31	; 0x01
    1ae4:	e8 83       	st	Y, r30
    1ae6:	c1 51       	subi	r28, 0x11	; 17
    1ae8:	d2 40       	sbci	r29, 0x02	; 2
    1aea:	cf 5e       	subi	r28, 0xEF	; 239
    1aec:	dd 4f       	sbci	r29, 0xFD	; 253
    1aee:	28 81       	ld	r18, Y
    1af0:	39 81       	ldd	r19, Y+1	; 0x01
    1af2:	c1 51       	subi	r28, 0x11	; 17
    1af4:	d2 40       	sbci	r29, 0x02	; 2
    1af6:	20 5d       	subi	r18, 0xD0	; 208
    1af8:	3f 4f       	sbci	r19, 0xFF	; 255
    1afa:	cd 5e       	subi	r28, 0xED	; 237
    1afc:	dd 4f       	sbci	r29, 0xFD	; 253
    1afe:	39 83       	std	Y+1, r19	; 0x01
    1b00:	28 83       	st	Y, r18
    1b02:	c3 51       	subi	r28, 0x13	; 19
    1b04:	d2 40       	sbci	r29, 0x02	; 2
    1b06:	88 e9       	ldi	r24, 0x98	; 152
    1b08:	91 e0       	ldi	r25, 0x01	; 1
    1b0a:	cb 5e       	subi	r28, 0xEB	; 235
    1b0c:	dd 4f       	sbci	r29, 0xFD	; 253
    1b0e:	99 83       	std	Y+1, r25	; 0x01
    1b10:	88 83       	st	Y, r24
    1b12:	c5 51       	subi	r28, 0x15	; 21
    1b14:	d2 40       	sbci	r29, 0x02	; 2
    1b16:	95 e0       	ldi	r25, 0x05	; 5
    1b18:	c9 5e       	subi	r28, 0xE9	; 233
    1b1a:	dd 4f       	sbci	r29, 0xFD	; 253
    1b1c:	98 83       	st	Y, r25
    1b1e:	c7 51       	subi	r28, 0x17	; 23
    1b20:	d2 40       	sbci	r29, 0x02	; 2
    1b22:	cb 5e       	subi	r28, 0xEB	; 235
    1b24:	dd 4f       	sbci	r29, 0xFD	; 253
    1b26:	a8 81       	ld	r26, Y
    1b28:	b9 81       	ldd	r27, Y+1	; 0x01
    1b2a:	c5 51       	subi	r28, 0x15	; 21
    1b2c:	d2 40       	sbci	r29, 0x02	; 2
    1b2e:	0c 90       	ld	r0, X
    1b30:	cb 5e       	subi	r28, 0xEB	; 235
    1b32:	dd 4f       	sbci	r29, 0xFD	; 253
    1b34:	e8 81       	ld	r30, Y
    1b36:	f9 81       	ldd	r31, Y+1	; 0x01
    1b38:	c5 51       	subi	r28, 0x15	; 21
    1b3a:	d2 40       	sbci	r29, 0x02	; 2
    1b3c:	31 96       	adiw	r30, 0x01	; 1
    1b3e:	cb 5e       	subi	r28, 0xEB	; 235
    1b40:	dd 4f       	sbci	r29, 0xFD	; 253
    1b42:	f9 83       	std	Y+1, r31	; 0x01
    1b44:	e8 83       	st	Y, r30
    1b46:	c5 51       	subi	r28, 0x15	; 21
    1b48:	d2 40       	sbci	r29, 0x02	; 2
    1b4a:	cd 5e       	subi	r28, 0xED	; 237
    1b4c:	dd 4f       	sbci	r29, 0xFD	; 253
    1b4e:	a8 81       	ld	r26, Y
    1b50:	b9 81       	ldd	r27, Y+1	; 0x01
    1b52:	c3 51       	subi	r28, 0x13	; 19
    1b54:	d2 40       	sbci	r29, 0x02	; 2
    1b56:	0c 92       	st	X, r0
    1b58:	cd 5e       	subi	r28, 0xED	; 237
    1b5a:	dd 4f       	sbci	r29, 0xFD	; 253
    1b5c:	e8 81       	ld	r30, Y
    1b5e:	f9 81       	ldd	r31, Y+1	; 0x01
    1b60:	c3 51       	subi	r28, 0x13	; 19
    1b62:	d2 40       	sbci	r29, 0x02	; 2
    1b64:	31 96       	adiw	r30, 0x01	; 1
    1b66:	cd 5e       	subi	r28, 0xED	; 237
    1b68:	dd 4f       	sbci	r29, 0xFD	; 253
    1b6a:	f9 83       	std	Y+1, r31	; 0x01
    1b6c:	e8 83       	st	Y, r30
    1b6e:	c3 51       	subi	r28, 0x13	; 19
    1b70:	d2 40       	sbci	r29, 0x02	; 2
    1b72:	c9 5e       	subi	r28, 0xE9	; 233
    1b74:	dd 4f       	sbci	r29, 0xFD	; 253
    1b76:	f8 81       	ld	r31, Y
    1b78:	c7 51       	subi	r28, 0x17	; 23
    1b7a:	d2 40       	sbci	r29, 0x02	; 2
    1b7c:	f1 50       	subi	r31, 0x01	; 1
    1b7e:	c9 5e       	subi	r28, 0xE9	; 233
    1b80:	dd 4f       	sbci	r29, 0xFD	; 253
    1b82:	f8 83       	st	Y, r31
    1b84:	c7 51       	subi	r28, 0x17	; 23
    1b86:	d2 40       	sbci	r29, 0x02	; 2
    1b88:	c9 5e       	subi	r28, 0xE9	; 233
    1b8a:	dd 4f       	sbci	r29, 0xFD	; 253
    1b8c:	28 81       	ld	r18, Y
    1b8e:	c7 51       	subi	r28, 0x17	; 23
    1b90:	d2 40       	sbci	r29, 0x02	; 2
    1b92:	22 23       	and	r18, r18
    1b94:	31 f6       	brne	.-116    	; 0x1b22 <main+0x6ec>
    1b96:	cf 5e       	subi	r28, 0xEF	; 239
    1b98:	dd 4f       	sbci	r29, 0xFD	; 253
    1b9a:	a8 81       	ld	r26, Y
    1b9c:	b9 81       	ldd	r27, Y+1	; 0x01
    1b9e:	c1 51       	subi	r28, 0x11	; 17
    1ba0:	d2 40       	sbci	r29, 0x02	; 2
    1ba2:	d5 96       	adiw	r26, 0x35	; 53
    1ba4:	1c 92       	st	X, r1
    1ba6:	ce 01       	movw	r24, r28
    1ba8:	8b 58       	subi	r24, 0x8B	; 139
    1baa:	9e 4f       	sbci	r25, 0xFE	; 254
    1bac:	fc 01       	movw	r30, r24
    1bae:	f6 96       	adiw	r30, 0x36	; 54
    1bb0:	c8 5e       	subi	r28, 0xE8	; 232
    1bb2:	dd 4f       	sbci	r29, 0xFD	; 253
    1bb4:	f9 83       	std	Y+1, r31	; 0x01
    1bb6:	e8 83       	st	Y, r30
    1bb8:	c8 51       	subi	r28, 0x18	; 24
    1bba:	d2 40       	sbci	r29, 0x02	; 2
    1bbc:	2e e9       	ldi	r18, 0x9E	; 158
    1bbe:	31 e0       	ldi	r19, 0x01	; 1
    1bc0:	c6 5e       	subi	r28, 0xE6	; 230
    1bc2:	dd 4f       	sbci	r29, 0xFD	; 253
    1bc4:	39 83       	std	Y+1, r19	; 0x01
    1bc6:	28 83       	st	Y, r18
    1bc8:	ca 51       	subi	r28, 0x1A	; 26
    1bca:	d2 40       	sbci	r29, 0x02	; 2
    1bcc:	36 e0       	ldi	r19, 0x06	; 6
    1bce:	c4 5e       	subi	r28, 0xE4	; 228
    1bd0:	dd 4f       	sbci	r29, 0xFD	; 253
    1bd2:	38 83       	st	Y, r19
    1bd4:	cc 51       	subi	r28, 0x1C	; 28
    1bd6:	d2 40       	sbci	r29, 0x02	; 2
    1bd8:	c6 5e       	subi	r28, 0xE6	; 230
    1bda:	dd 4f       	sbci	r29, 0xFD	; 253
    1bdc:	a8 81       	ld	r26, Y
    1bde:	b9 81       	ldd	r27, Y+1	; 0x01
    1be0:	ca 51       	subi	r28, 0x1A	; 26
    1be2:	d2 40       	sbci	r29, 0x02	; 2
    1be4:	0c 90       	ld	r0, X
    1be6:	c6 5e       	subi	r28, 0xE6	; 230
    1be8:	dd 4f       	sbci	r29, 0xFD	; 253
    1bea:	e8 81       	ld	r30, Y
    1bec:	f9 81       	ldd	r31, Y+1	; 0x01
    1bee:	ca 51       	subi	r28, 0x1A	; 26
    1bf0:	d2 40       	sbci	r29, 0x02	; 2
    1bf2:	31 96       	adiw	r30, 0x01	; 1
    1bf4:	c6 5e       	subi	r28, 0xE6	; 230
    1bf6:	dd 4f       	sbci	r29, 0xFD	; 253
    1bf8:	f9 83       	std	Y+1, r31	; 0x01
    1bfa:	e8 83       	st	Y, r30
    1bfc:	ca 51       	subi	r28, 0x1A	; 26
    1bfe:	d2 40       	sbci	r29, 0x02	; 2
    1c00:	c8 5e       	subi	r28, 0xE8	; 232
    1c02:	dd 4f       	sbci	r29, 0xFD	; 253
    1c04:	a8 81       	ld	r26, Y
    1c06:	b9 81       	ldd	r27, Y+1	; 0x01
    1c08:	c8 51       	subi	r28, 0x18	; 24
    1c0a:	d2 40       	sbci	r29, 0x02	; 2
    1c0c:	0c 92       	st	X, r0
    1c0e:	c8 5e       	subi	r28, 0xE8	; 232
    1c10:	dd 4f       	sbci	r29, 0xFD	; 253
    1c12:	e8 81       	ld	r30, Y
    1c14:	f9 81       	ldd	r31, Y+1	; 0x01
    1c16:	c8 51       	subi	r28, 0x18	; 24
    1c18:	d2 40       	sbci	r29, 0x02	; 2
    1c1a:	31 96       	adiw	r30, 0x01	; 1
    1c1c:	c8 5e       	subi	r28, 0xE8	; 232
    1c1e:	dd 4f       	sbci	r29, 0xFD	; 253
    1c20:	f9 83       	std	Y+1, r31	; 0x01
    1c22:	e8 83       	st	Y, r30
    1c24:	c8 51       	subi	r28, 0x18	; 24
    1c26:	d2 40       	sbci	r29, 0x02	; 2
    1c28:	c4 5e       	subi	r28, 0xE4	; 228
    1c2a:	dd 4f       	sbci	r29, 0xFD	; 253
    1c2c:	f8 81       	ld	r31, Y
    1c2e:	cc 51       	subi	r28, 0x1C	; 28
    1c30:	d2 40       	sbci	r29, 0x02	; 2
    1c32:	f1 50       	subi	r31, 0x01	; 1
    1c34:	c4 5e       	subi	r28, 0xE4	; 228
    1c36:	dd 4f       	sbci	r29, 0xFD	; 253
    1c38:	f8 83       	st	Y, r31
    1c3a:	cc 51       	subi	r28, 0x1C	; 28
    1c3c:	d2 40       	sbci	r29, 0x02	; 2
    1c3e:	c4 5e       	subi	r28, 0xE4	; 228
    1c40:	dd 4f       	sbci	r29, 0xFD	; 253
    1c42:	28 81       	ld	r18, Y
    1c44:	cc 51       	subi	r28, 0x1C	; 28
    1c46:	d2 40       	sbci	r29, 0x02	; 2
    1c48:	22 23       	and	r18, r18
    1c4a:	31 f6       	brne	.-116    	; 0x1bd8 <main+0x7a2>
	char Password[10][4]={"01","02","03","04","05","06","07","08","09","010"};
    1c4c:	ce 01       	movw	r24, r28
    1c4e:	8f 54       	subi	r24, 0x4F	; 79
    1c50:	9e 4f       	sbci	r25, 0xFE	; 254
    1c52:	28 e2       	ldi	r18, 0x28	; 40
    1c54:	fc 01       	movw	r30, r24
    1c56:	df 01       	movw	r26, r30
    1c58:	32 2f       	mov	r19, r18
    1c5a:	1d 92       	st	X+, r1
    1c5c:	3a 95       	dec	r19
    1c5e:	e9 f7       	brne	.-6      	; 0x1c5a <main+0x824>
    1c60:	fe 01       	movw	r30, r28
    1c62:	ef 54       	subi	r30, 0x4F	; 79
    1c64:	fe 4f       	sbci	r31, 0xFE	; 254
    1c66:	80 91 a4 01 	lds	r24, 0x01A4
    1c6a:	90 91 a5 01 	lds	r25, 0x01A5
    1c6e:	a0 91 a6 01 	lds	r26, 0x01A6
    1c72:	b0 91 a7 01 	lds	r27, 0x01A7
    1c76:	80 83       	st	Z, r24
    1c78:	91 83       	std	Z+1, r25	; 0x01
    1c7a:	a2 83       	std	Z+2, r26	; 0x02
    1c7c:	b3 83       	std	Z+3, r27	; 0x03
    1c7e:	fe 01       	movw	r30, r28
    1c80:	ef 54       	subi	r30, 0x4F	; 79
    1c82:	fe 4f       	sbci	r31, 0xFE	; 254
    1c84:	80 91 a8 01 	lds	r24, 0x01A8
    1c88:	90 91 a9 01 	lds	r25, 0x01A9
    1c8c:	a0 91 aa 01 	lds	r26, 0x01AA
    1c90:	b0 91 ab 01 	lds	r27, 0x01AB
    1c94:	84 83       	std	Z+4, r24	; 0x04
    1c96:	95 83       	std	Z+5, r25	; 0x05
    1c98:	a6 83       	std	Z+6, r26	; 0x06
    1c9a:	b7 83       	std	Z+7, r27	; 0x07
    1c9c:	fe 01       	movw	r30, r28
    1c9e:	ef 54       	subi	r30, 0x4F	; 79
    1ca0:	fe 4f       	sbci	r31, 0xFE	; 254
    1ca2:	80 91 ac 01 	lds	r24, 0x01AC
    1ca6:	90 91 ad 01 	lds	r25, 0x01AD
    1caa:	a0 91 ae 01 	lds	r26, 0x01AE
    1cae:	b0 91 af 01 	lds	r27, 0x01AF
    1cb2:	80 87       	std	Z+8, r24	; 0x08
    1cb4:	91 87       	std	Z+9, r25	; 0x09
    1cb6:	a2 87       	std	Z+10, r26	; 0x0a
    1cb8:	b3 87       	std	Z+11, r27	; 0x0b
    1cba:	fe 01       	movw	r30, r28
    1cbc:	ef 54       	subi	r30, 0x4F	; 79
    1cbe:	fe 4f       	sbci	r31, 0xFE	; 254
    1cc0:	80 91 b0 01 	lds	r24, 0x01B0
    1cc4:	90 91 b1 01 	lds	r25, 0x01B1
    1cc8:	a0 91 b2 01 	lds	r26, 0x01B2
    1ccc:	b0 91 b3 01 	lds	r27, 0x01B3
    1cd0:	84 87       	std	Z+12, r24	; 0x0c
    1cd2:	95 87       	std	Z+13, r25	; 0x0d
    1cd4:	a6 87       	std	Z+14, r26	; 0x0e
    1cd6:	b7 87       	std	Z+15, r27	; 0x0f
    1cd8:	fe 01       	movw	r30, r28
    1cda:	ef 54       	subi	r30, 0x4F	; 79
    1cdc:	fe 4f       	sbci	r31, 0xFE	; 254
    1cde:	80 91 b4 01 	lds	r24, 0x01B4
    1ce2:	90 91 b5 01 	lds	r25, 0x01B5
    1ce6:	a0 91 b6 01 	lds	r26, 0x01B6
    1cea:	b0 91 b7 01 	lds	r27, 0x01B7
    1cee:	80 8b       	std	Z+16, r24	; 0x10
    1cf0:	91 8b       	std	Z+17, r25	; 0x11
    1cf2:	a2 8b       	std	Z+18, r26	; 0x12
    1cf4:	b3 8b       	std	Z+19, r27	; 0x13
    1cf6:	fe 01       	movw	r30, r28
    1cf8:	ef 54       	subi	r30, 0x4F	; 79
    1cfa:	fe 4f       	sbci	r31, 0xFE	; 254
    1cfc:	80 91 b8 01 	lds	r24, 0x01B8
    1d00:	90 91 b9 01 	lds	r25, 0x01B9
    1d04:	a0 91 ba 01 	lds	r26, 0x01BA
    1d08:	b0 91 bb 01 	lds	r27, 0x01BB
    1d0c:	84 8b       	std	Z+20, r24	; 0x14
    1d0e:	95 8b       	std	Z+21, r25	; 0x15
    1d10:	a6 8b       	std	Z+22, r26	; 0x16
    1d12:	b7 8b       	std	Z+23, r27	; 0x17
    1d14:	fe 01       	movw	r30, r28
    1d16:	ef 54       	subi	r30, 0x4F	; 79
    1d18:	fe 4f       	sbci	r31, 0xFE	; 254
    1d1a:	80 91 bc 01 	lds	r24, 0x01BC
    1d1e:	90 91 bd 01 	lds	r25, 0x01BD
    1d22:	a0 91 be 01 	lds	r26, 0x01BE
    1d26:	b0 91 bf 01 	lds	r27, 0x01BF
    1d2a:	80 8f       	std	Z+24, r24	; 0x18
    1d2c:	91 8f       	std	Z+25, r25	; 0x19
    1d2e:	a2 8f       	std	Z+26, r26	; 0x1a
    1d30:	b3 8f       	std	Z+27, r27	; 0x1b
    1d32:	fe 01       	movw	r30, r28
    1d34:	ef 54       	subi	r30, 0x4F	; 79
    1d36:	fe 4f       	sbci	r31, 0xFE	; 254
    1d38:	80 91 c0 01 	lds	r24, 0x01C0
    1d3c:	90 91 c1 01 	lds	r25, 0x01C1
    1d40:	a0 91 c2 01 	lds	r26, 0x01C2
    1d44:	b0 91 c3 01 	lds	r27, 0x01C3
    1d48:	84 8f       	std	Z+28, r24	; 0x1c
    1d4a:	95 8f       	std	Z+29, r25	; 0x1d
    1d4c:	a6 8f       	std	Z+30, r26	; 0x1e
    1d4e:	b7 8f       	std	Z+31, r27	; 0x1f
    1d50:	fe 01       	movw	r30, r28
    1d52:	ef 54       	subi	r30, 0x4F	; 79
    1d54:	fe 4f       	sbci	r31, 0xFE	; 254
    1d56:	80 91 c4 01 	lds	r24, 0x01C4
    1d5a:	90 91 c5 01 	lds	r25, 0x01C5
    1d5e:	a0 91 c6 01 	lds	r26, 0x01C6
    1d62:	b0 91 c7 01 	lds	r27, 0x01C7
    1d66:	80 a3       	std	Z+32, r24	; 0x20
    1d68:	91 a3       	std	Z+33, r25	; 0x21
    1d6a:	a2 a3       	std	Z+34, r26	; 0x22
    1d6c:	b3 a3       	std	Z+35, r27	; 0x23
    1d6e:	fe 01       	movw	r30, r28
    1d70:	ef 54       	subi	r30, 0x4F	; 79
    1d72:	fe 4f       	sbci	r31, 0xFE	; 254
    1d74:	80 91 c8 01 	lds	r24, 0x01C8
    1d78:	90 91 c9 01 	lds	r25, 0x01C9
    1d7c:	a0 91 ca 01 	lds	r26, 0x01CA
    1d80:	b0 91 cb 01 	lds	r27, 0x01CB
    1d84:	84 a3       	std	Z+36, r24	; 0x24
    1d86:	95 a3       	std	Z+37, r25	; 0x25
    1d88:	a6 a3       	std	Z+38, r26	; 0x26
    1d8a:	b7 a3       	std	Z+39, r27	; 0x27

	while(1)
	{
	u8 Found_flag=0;
    1d8c:	fe 01       	movw	r30, r28
    1d8e:	e9 5b       	subi	r30, 0xB9	; 185
    1d90:	ff 4f       	sbci	r31, 0xFF	; 255
    1d92:	10 82       	st	Z, r1

	USART_voidSendString("\n\n Welcome \n");
    1d94:	80 e6       	ldi	r24, 0x60	; 96
    1d96:	90 e0       	ldi	r25, 0x00	; 0
    1d98:	0e 94 10 09 	call	0x1220	; 0x1220 <USART_voidSendString>
	USART_voidSendString("\n Please Enter  ");
    1d9c:	8d e6       	ldi	r24, 0x6D	; 109
    1d9e:	90 e0       	ldi	r25, 0x00	; 0
    1da0:	0e 94 10 09 	call	0x1220	; 0x1220 <USART_voidSendString>


	for(u8 y=0;y<=2;y++)
    1da4:	fe 01       	movw	r30, r28
    1da6:	ea 5b       	subi	r30, 0xBA	; 186
    1da8:	ff 4f       	sbci	r31, 0xFF	; 255
    1daa:	10 82       	st	Z, r1
    1dac:	a9 c0       	rjmp	.+338    	; 0x1f00 <main+0xaca>
	{

		USART_voidSendString("\n Username : ");
    1dae:	8e e7       	ldi	r24, 0x7E	; 126
    1db0:	90 e0       	ldi	r25, 0x00	; 0
    1db2:	0e 94 10 09 	call	0x1220	; 0x1220 <USART_voidSendString>
		///---------- Receiving Username ---------///

    	u8 *p;
		p=USART_voidRecieveString();
    1db6:	0e 94 53 09 	call	0x12a6	; 0x12a6 <USART_voidRecieveString>
    1dba:	fe 01       	movw	r30, r28
    1dbc:	ec 5b       	subi	r30, 0xBC	; 188
    1dbe:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc0:	91 83       	std	Z+1, r25	; 0x01
    1dc2:	80 83       	st	Z, r24
		u8 k;
		for( k=0; (*p!='\r') ;k++)
    1dc4:	fe 01       	movw	r30, r28
    1dc6:	ed 5b       	subi	r30, 0xBD	; 189
    1dc8:	ff 4f       	sbci	r31, 0xFF	; 255
    1dca:	10 82       	st	Z, r1
    1dcc:	28 c0       	rjmp	.+80     	; 0x1e1e <main+0x9e8>
		{
			Receiving_Username[k]=*p;
    1dce:	fe 01       	movw	r30, r28
    1dd0:	ed 5b       	subi	r30, 0xBD	; 189
    1dd2:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd4:	80 81       	ld	r24, Z
    1dd6:	28 2f       	mov	r18, r24
    1dd8:	30 e0       	ldi	r19, 0x00	; 0
    1dda:	fe 01       	movw	r30, r28
    1ddc:	ec 5b       	subi	r30, 0xBC	; 188
    1dde:	ff 4f       	sbci	r31, 0xFF	; 255
    1de0:	01 90       	ld	r0, Z+
    1de2:	f0 81       	ld	r31, Z
    1de4:	e0 2d       	mov	r30, r0
    1de6:	40 81       	ld	r20, Z
    1de8:	ce 01       	movw	r24, r28
    1dea:	87 5b       	subi	r24, 0xB7	; 183
    1dec:	9f 4f       	sbci	r25, 0xFF	; 255
    1dee:	fc 01       	movw	r30, r24
    1df0:	e2 0f       	add	r30, r18
    1df2:	f3 1f       	adc	r31, r19
    1df4:	40 83       	st	Z, r20
			p++;
    1df6:	de 01       	movw	r26, r28
    1df8:	ac 5b       	subi	r26, 0xBC	; 188
    1dfa:	bf 4f       	sbci	r27, 0xFF	; 255
    1dfc:	fe 01       	movw	r30, r28
    1dfe:	ec 5b       	subi	r30, 0xBC	; 188
    1e00:	ff 4f       	sbci	r31, 0xFF	; 255
    1e02:	80 81       	ld	r24, Z
    1e04:	91 81       	ldd	r25, Z+1	; 0x01
    1e06:	01 96       	adiw	r24, 0x01	; 1
    1e08:	8d 93       	st	X+, r24
    1e0a:	9c 93       	st	X, r25
		///---------- Receiving Username ---------///

    	u8 *p;
		p=USART_voidRecieveString();
		u8 k;
		for( k=0; (*p!='\r') ;k++)
    1e0c:	de 01       	movw	r26, r28
    1e0e:	ad 5b       	subi	r26, 0xBD	; 189
    1e10:	bf 4f       	sbci	r27, 0xFF	; 255
    1e12:	fe 01       	movw	r30, r28
    1e14:	ed 5b       	subi	r30, 0xBD	; 189
    1e16:	ff 4f       	sbci	r31, 0xFF	; 255
    1e18:	80 81       	ld	r24, Z
    1e1a:	8f 5f       	subi	r24, 0xFF	; 255
    1e1c:	8c 93       	st	X, r24
    1e1e:	fe 01       	movw	r30, r28
    1e20:	ec 5b       	subi	r30, 0xBC	; 188
    1e22:	ff 4f       	sbci	r31, 0xFF	; 255
    1e24:	01 90       	ld	r0, Z+
    1e26:	f0 81       	ld	r31, Z
    1e28:	e0 2d       	mov	r30, r0
    1e2a:	80 81       	ld	r24, Z
    1e2c:	8d 30       	cpi	r24, 0x0D	; 13
    1e2e:	79 f6       	brne	.-98     	; 0x1dce <main+0x998>
		{
			Receiving_Username[k]=*p;
			p++;
		}
		Receiving_Username[k]='\0';
    1e30:	fe 01       	movw	r30, r28
    1e32:	ed 5b       	subi	r30, 0xBD	; 189
    1e34:	ff 4f       	sbci	r31, 0xFF	; 255
    1e36:	80 81       	ld	r24, Z
    1e38:	28 2f       	mov	r18, r24
    1e3a:	30 e0       	ldi	r19, 0x00	; 0
    1e3c:	ce 01       	movw	r24, r28
    1e3e:	87 5b       	subi	r24, 0xB7	; 183
    1e40:	9f 4f       	sbci	r25, 0xFF	; 255
    1e42:	fc 01       	movw	r30, r24
    1e44:	e2 0f       	add	r30, r18
    1e46:	f3 1f       	adc	r31, r19
    1e48:	10 82       	st	Z, r1

		Display(Receiving_Username);
    1e4a:	ce 01       	movw	r24, r28
    1e4c:	87 5b       	subi	r24, 0xB7	; 183
    1e4e:	9f 4f       	sbci	r25, 0xFF	; 255
    1e50:	0e 94 2c 09 	call	0x1258	; 0x1258 <Display>

		///---------- Check the Username ---------///

		for (u8 i=0;i<=9;i++)
    1e54:	fe 01       	movw	r30, r28
    1e56:	ee 5b       	subi	r30, 0xBE	; 190
    1e58:	ff 4f       	sbci	r31, 0xFF	; 255
    1e5a:	10 82       	st	Z, r1
    1e5c:	32 c0       	rjmp	.+100    	; 0x1ec2 <main+0xa8c>
		{
			if( USART_u8CompareArray(Receiving_Username,UserName[i]))
    1e5e:	ae 01       	movw	r20, r28
    1e60:	4b 58       	subi	r20, 0x8B	; 139
    1e62:	5e 4f       	sbci	r21, 0xFE	; 254
    1e64:	fe 01       	movw	r30, r28
    1e66:	ee 5b       	subi	r30, 0xBE	; 190
    1e68:	ff 4f       	sbci	r31, 0xFF	; 255
    1e6a:	80 81       	ld	r24, Z
    1e6c:	28 2f       	mov	r18, r24
    1e6e:	30 e0       	ldi	r19, 0x00	; 0
    1e70:	c9 01       	movw	r24, r18
    1e72:	88 0f       	add	r24, r24
    1e74:	99 1f       	adc	r25, r25
    1e76:	82 0f       	add	r24, r18
    1e78:	93 1f       	adc	r25, r19
    1e7a:	88 0f       	add	r24, r24
    1e7c:	99 1f       	adc	r25, r25
    1e7e:	9a 01       	movw	r18, r20
    1e80:	28 0f       	add	r18, r24
    1e82:	39 1f       	adc	r19, r25
    1e84:	ce 01       	movw	r24, r28
    1e86:	87 5b       	subi	r24, 0xB7	; 183
    1e88:	9f 4f       	sbci	r25, 0xFF	; 255
    1e8a:	b9 01       	movw	r22, r18
    1e8c:	0e 94 bc 09 	call	0x1378	; 0x1378 <USART_u8CompareArray>
    1e90:	88 23       	and	r24, r24
    1e92:	71 f0       	breq	.+28     	; 0x1eb0 <main+0xa7a>
			{
				Found_flag=1;
    1e94:	fe 01       	movw	r30, r28
    1e96:	e9 5b       	subi	r30, 0xB9	; 185
    1e98:	ff 4f       	sbci	r31, 0xFF	; 255
    1e9a:	81 e0       	ldi	r24, 0x01	; 1
    1e9c:	80 83       	st	Z, r24
				UserName_location=i;
    1e9e:	de 01       	movw	r26, r28
    1ea0:	a8 5b       	subi	r26, 0xB8	; 184
    1ea2:	bf 4f       	sbci	r27, 0xFF	; 255
    1ea4:	fe 01       	movw	r30, r28
    1ea6:	ee 5b       	subi	r30, 0xBE	; 190
    1ea8:	ff 4f       	sbci	r31, 0xFF	; 255
    1eaa:	80 81       	ld	r24, Z
    1eac:	8c 93       	st	X, r24
    1eae:	0f c0       	rjmp	.+30     	; 0x1ece <main+0xa98>

		Display(Receiving_Username);

		///---------- Check the Username ---------///

		for (u8 i=0;i<=9;i++)
    1eb0:	de 01       	movw	r26, r28
    1eb2:	ae 5b       	subi	r26, 0xBE	; 190
    1eb4:	bf 4f       	sbci	r27, 0xFF	; 255
    1eb6:	fe 01       	movw	r30, r28
    1eb8:	ee 5b       	subi	r30, 0xBE	; 190
    1eba:	ff 4f       	sbci	r31, 0xFF	; 255
    1ebc:	80 81       	ld	r24, Z
    1ebe:	8f 5f       	subi	r24, 0xFF	; 255
    1ec0:	8c 93       	st	X, r24
    1ec2:	fe 01       	movw	r30, r28
    1ec4:	ee 5b       	subi	r30, 0xBE	; 190
    1ec6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec8:	80 81       	ld	r24, Z
    1eca:	8a 30       	cpi	r24, 0x0A	; 10
    1ecc:	40 f2       	brcs	.-112    	; 0x1e5e <main+0xa28>
				UserName_location=i;
				break;
			}
		}

		if ( Found_flag == 0 )
    1ece:	fe 01       	movw	r30, r28
    1ed0:	e9 5b       	subi	r30, 0xB9	; 185
    1ed2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed4:	80 81       	ld	r24, Z
    1ed6:	88 23       	and	r24, r24
    1ed8:	d1 f4       	brne	.+52     	; 0x1f0e <main+0xad8>
		{

			if(y<2) USART_voidSendString("\n Invalid Username Please Try again ");
    1eda:	fe 01       	movw	r30, r28
    1edc:	ea 5b       	subi	r30, 0xBA	; 186
    1ede:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee0:	80 81       	ld	r24, Z
    1ee2:	82 30       	cpi	r24, 0x02	; 2
    1ee4:	20 f4       	brcc	.+8      	; 0x1eee <main+0xab8>
    1ee6:	8c e8       	ldi	r24, 0x8C	; 140
    1ee8:	90 e0       	ldi	r25, 0x00	; 0
    1eea:	0e 94 10 09 	call	0x1220	; 0x1220 <USART_voidSendString>

	USART_voidSendString("\n\n Welcome \n");
	USART_voidSendString("\n Please Enter  ");


	for(u8 y=0;y<=2;y++)
    1eee:	de 01       	movw	r26, r28
    1ef0:	aa 5b       	subi	r26, 0xBA	; 186
    1ef2:	bf 4f       	sbci	r27, 0xFF	; 255
    1ef4:	fe 01       	movw	r30, r28
    1ef6:	ea 5b       	subi	r30, 0xBA	; 186
    1ef8:	ff 4f       	sbci	r31, 0xFF	; 255
    1efa:	80 81       	ld	r24, Z
    1efc:	8f 5f       	subi	r24, 0xFF	; 255
    1efe:	8c 93       	st	X, r24
    1f00:	fe 01       	movw	r30, r28
    1f02:	ea 5b       	subi	r30, 0xBA	; 186
    1f04:	ff 4f       	sbci	r31, 0xFF	; 255
    1f06:	80 81       	ld	r24, Z
    1f08:	83 30       	cpi	r24, 0x03	; 3
    1f0a:	08 f4       	brcc	.+2      	; 0x1f0e <main+0xad8>
    1f0c:	50 cf       	rjmp	.-352    	; 0x1dae <main+0x978>

	}



	if( Found_flag == 1)
    1f0e:	fe 01       	movw	r30, r28
    1f10:	e9 5b       	subi	r30, 0xB9	; 185
    1f12:	ff 4f       	sbci	r31, 0xFF	; 255
    1f14:	80 81       	ld	r24, Z
    1f16:	81 30       	cpi	r24, 0x01	; 1
    1f18:	09 f0       	breq	.+2      	; 0x1f1c <main+0xae6>
    1f1a:	de c1       	rjmp	.+956    	; 0x22d8 <main+0xea2>
	{

		USART_voidSendString("\n\n Please Enter ");
    1f1c:	81 eb       	ldi	r24, 0xB1	; 177
    1f1e:	90 e0       	ldi	r25, 0x00	; 0
    1f20:	0e 94 10 09 	call	0x1220	; 0x1220 <USART_voidSendString>

		///---------- Receiving Password ---------///
		for(u8 y=0;y<=2;y++)
    1f24:	fe 01       	movw	r30, r28
    1f26:	ef 5b       	subi	r30, 0xBF	; 191
    1f28:	ff 4f       	sbci	r31, 0xFF	; 255
    1f2a:	10 82       	st	Z, r1
    1f2c:	cd c1       	rjmp	.+922    	; 0x22c8 <main+0xe92>
		{
			USART_voidSendString("\n Password : ");
    1f2e:	82 ec       	ldi	r24, 0xC2	; 194
    1f30:	90 e0       	ldi	r25, 0x00	; 0
    1f32:	0e 94 10 09 	call	0x1220	; 0x1220 <USART_voidSendString>

			u8 *p;
			p=USART_voidRecieveString();
    1f36:	0e 94 53 09 	call	0x12a6	; 0x12a6 <USART_voidRecieveString>
    1f3a:	fe 01       	movw	r30, r28
    1f3c:	ff 96       	adiw	r30, 0x3f	; 63
    1f3e:	91 83       	std	Z+1, r25	; 0x01
    1f40:	80 83       	st	Z, r24
			u8 k;
			for(k=0; (*p!='\r') ;k++)
    1f42:	1e ae       	std	Y+62, r1	; 0x3e
    1f44:	1c c0       	rjmp	.+56     	; 0x1f7e <main+0xb48>
			{
				Receiving_Password[k]=*p;
    1f46:	8e ad       	ldd	r24, Y+62	; 0x3e
    1f48:	28 2f       	mov	r18, r24
    1f4a:	30 e0       	ldi	r19, 0x00	; 0
    1f4c:	fe 01       	movw	r30, r28
    1f4e:	ff 96       	adiw	r30, 0x3f	; 63
    1f50:	01 90       	ld	r0, Z+
    1f52:	f0 81       	ld	r31, Z
    1f54:	e0 2d       	mov	r30, r0
    1f56:	40 81       	ld	r20, Z
    1f58:	ce 01       	movw	r24, r28
    1f5a:	83 55       	subi	r24, 0x53	; 83
    1f5c:	9f 4f       	sbci	r25, 0xFF	; 255
    1f5e:	fc 01       	movw	r30, r24
    1f60:	e2 0f       	add	r30, r18
    1f62:	f3 1f       	adc	r31, r19
    1f64:	40 83       	st	Z, r20
				p++;
    1f66:	fe 01       	movw	r30, r28
    1f68:	ff 96       	adiw	r30, 0x3f	; 63
    1f6a:	80 81       	ld	r24, Z
    1f6c:	91 81       	ldd	r25, Z+1	; 0x01
    1f6e:	01 96       	adiw	r24, 0x01	; 1
    1f70:	fe 01       	movw	r30, r28
    1f72:	ff 96       	adiw	r30, 0x3f	; 63
    1f74:	91 83       	std	Z+1, r25	; 0x01
    1f76:	80 83       	st	Z, r24
			USART_voidSendString("\n Password : ");

			u8 *p;
			p=USART_voidRecieveString();
			u8 k;
			for(k=0; (*p!='\r') ;k++)
    1f78:	8e ad       	ldd	r24, Y+62	; 0x3e
    1f7a:	8f 5f       	subi	r24, 0xFF	; 255
    1f7c:	8e af       	std	Y+62, r24	; 0x3e
    1f7e:	fe 01       	movw	r30, r28
    1f80:	ff 96       	adiw	r30, 0x3f	; 63
    1f82:	01 90       	ld	r0, Z+
    1f84:	f0 81       	ld	r31, Z
    1f86:	e0 2d       	mov	r30, r0
    1f88:	80 81       	ld	r24, Z
    1f8a:	8d 30       	cpi	r24, 0x0D	; 13
    1f8c:	e1 f6       	brne	.-72     	; 0x1f46 <main+0xb10>
			{
				Receiving_Password[k]=*p;
				p++;
			}
			Receiving_Password[k]='\0';
    1f8e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1f90:	28 2f       	mov	r18, r24
    1f92:	30 e0       	ldi	r19, 0x00	; 0
    1f94:	ce 01       	movw	r24, r28
    1f96:	83 55       	subi	r24, 0x53	; 83
    1f98:	9f 4f       	sbci	r25, 0xFF	; 255
    1f9a:	fc 01       	movw	r30, r24
    1f9c:	e2 0f       	add	r30, r18
    1f9e:	f3 1f       	adc	r31, r19
    1fa0:	10 82       	st	Z, r1

			Display(Receiving_Password);
    1fa2:	ce 01       	movw	r24, r28
    1fa4:	83 55       	subi	r24, 0x53	; 83
    1fa6:	9f 4f       	sbci	r25, 0xFF	; 255
    1fa8:	0e 94 2c 09 	call	0x1258	; 0x1258 <Display>

			///---------- Check the Password ---------///

			if( USART_u8CompareArray(Receiving_Password,Password[UserName_location]))
    1fac:	9e 01       	movw	r18, r28
    1fae:	2f 54       	subi	r18, 0x4F	; 79
    1fb0:	3e 4f       	sbci	r19, 0xFE	; 254
    1fb2:	fe 01       	movw	r30, r28
    1fb4:	e8 5b       	subi	r30, 0xB8	; 184
    1fb6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb8:	80 81       	ld	r24, Z
    1fba:	88 2f       	mov	r24, r24
    1fbc:	90 e0       	ldi	r25, 0x00	; 0
    1fbe:	88 0f       	add	r24, r24
    1fc0:	99 1f       	adc	r25, r25
    1fc2:	88 0f       	add	r24, r24
    1fc4:	99 1f       	adc	r25, r25
    1fc6:	28 0f       	add	r18, r24
    1fc8:	39 1f       	adc	r19, r25
    1fca:	ce 01       	movw	r24, r28
    1fcc:	83 55       	subi	r24, 0x53	; 83
    1fce:	9f 4f       	sbci	r25, 0xFF	; 255
    1fd0:	b9 01       	movw	r22, r18
    1fd2:	0e 94 bc 09 	call	0x1378	; 0x1378 <USART_u8CompareArray>
    1fd6:	88 23       	and	r24, r24
    1fd8:	09 f4       	brne	.+2      	; 0x1fdc <main+0xba6>
    1fda:	53 c0       	rjmp	.+166    	; 0x2082 <main+0xc4c>
			{
				//----------- Open the Door------//
				DIO_vidWritePinValue(DIO_PORT_D,DIO_PIN_7,DIO_PIN_HIGH);
    1fdc:	83 e0       	ldi	r24, 0x03	; 3
    1fde:	67 e0       	ldi	r22, 0x07	; 7
    1fe0:	41 e0       	ldi	r20, 0x01	; 1
    1fe2:	0e 94 8d 06 	call	0xd1a	; 0xd1a <DIO_vidWritePinValue>
				USART_voidSendString("\n\n Welcome at IMT Home :) ");
    1fe6:	80 ed       	ldi	r24, 0xD0	; 208
    1fe8:	90 e0       	ldi	r25, 0x00	; 0
    1fea:	0e 94 10 09 	call	0x1220	; 0x1220 <USART_voidSendString>

				while(1)
				{
					USART_voidSendString("\n\n To Lock the Door enter ( 0 ) : ");
    1fee:	8b ee       	ldi	r24, 0xEB	; 235
    1ff0:	90 e0       	ldi	r25, 0x00	; 0
    1ff2:	0e 94 10 09 	call	0x1220	; 0x1220 <USART_voidSendString>
					u8 *r;
					r=USART_voidRecieveString();
    1ff6:	0e 94 53 09 	call	0x12a6	; 0x12a6 <USART_voidRecieveString>
    1ffa:	9d af       	std	Y+61, r25	; 0x3d
    1ffc:	8c af       	std	Y+60, r24	; 0x3c
					u8 k;
					for( k=0; (*r!='\r') ;k++)
    1ffe:	1b ae       	std	Y+59, r1	; 0x3b
    2000:	15 c0       	rjmp	.+42     	; 0x202c <main+0xbf6>
					{
						Receiving_Exit[k]=*r;
    2002:	8b ad       	ldd	r24, Y+59	; 0x3b
    2004:	28 2f       	mov	r18, r24
    2006:	30 e0       	ldi	r19, 0x00	; 0
    2008:	ec ad       	ldd	r30, Y+60	; 0x3c
    200a:	fd ad       	ldd	r31, Y+61	; 0x3d
    200c:	40 81       	ld	r20, Z
    200e:	ce 01       	movw	r24, r28
    2010:	8f 5e       	subi	r24, 0xEF	; 239
    2012:	9e 4f       	sbci	r25, 0xFE	; 254
    2014:	fc 01       	movw	r30, r24
    2016:	e2 0f       	add	r30, r18
    2018:	f3 1f       	adc	r31, r19
    201a:	40 83       	st	Z, r20
						r++;
    201c:	8c ad       	ldd	r24, Y+60	; 0x3c
    201e:	9d ad       	ldd	r25, Y+61	; 0x3d
    2020:	01 96       	adiw	r24, 0x01	; 1
    2022:	9d af       	std	Y+61, r25	; 0x3d
    2024:	8c af       	std	Y+60, r24	; 0x3c
				{
					USART_voidSendString("\n\n To Lock the Door enter ( 0 ) : ");
					u8 *r;
					r=USART_voidRecieveString();
					u8 k;
					for( k=0; (*r!='\r') ;k++)
    2026:	8b ad       	ldd	r24, Y+59	; 0x3b
    2028:	8f 5f       	subi	r24, 0xFF	; 255
    202a:	8b af       	std	Y+59, r24	; 0x3b
    202c:	ec ad       	ldd	r30, Y+60	; 0x3c
    202e:	fd ad       	ldd	r31, Y+61	; 0x3d
    2030:	80 81       	ld	r24, Z
    2032:	8d 30       	cpi	r24, 0x0D	; 13
    2034:	31 f7       	brne	.-52     	; 0x2002 <main+0xbcc>
					{
						Receiving_Exit[k]=*r;
						r++;
					}
					Receiving_Exit[k]='\0';
    2036:	8b ad       	ldd	r24, Y+59	; 0x3b
    2038:	28 2f       	mov	r18, r24
    203a:	30 e0       	ldi	r19, 0x00	; 0
    203c:	ce 01       	movw	r24, r28
    203e:	8f 5e       	subi	r24, 0xEF	; 239
    2040:	9e 4f       	sbci	r25, 0xFE	; 254
    2042:	fc 01       	movw	r30, r24
    2044:	e2 0f       	add	r30, r18
    2046:	f3 1f       	adc	r31, r19
    2048:	10 82       	st	Z, r1
					Display(Receiving_Exit);
    204a:	ce 01       	movw	r24, r28
    204c:	8f 5e       	subi	r24, 0xEF	; 239
    204e:	9e 4f       	sbci	r25, 0xFE	; 254
    2050:	0e 94 2c 09 	call	0x1258	; 0x1258 <Display>
					if(Receiving_Exit[1]=='0' && Receiving_Exit[2]=='\0') break;
    2054:	fe 01       	movw	r30, r28
    2056:	ef 5e       	subi	r30, 0xEF	; 239
    2058:	fe 4f       	sbci	r31, 0xFE	; 254
    205a:	81 81       	ldd	r24, Z+1	; 0x01
    205c:	80 33       	cpi	r24, 0x30	; 48
    205e:	31 f4       	brne	.+12     	; 0x206c <main+0xc36>
    2060:	fe 01       	movw	r30, r28
    2062:	ef 5e       	subi	r30, 0xEF	; 239
    2064:	fe 4f       	sbci	r31, 0xFE	; 254
    2066:	82 81       	ldd	r24, Z+2	; 0x02
    2068:	88 23       	and	r24, r24
    206a:	29 f0       	breq	.+10     	; 0x2076 <main+0xc40>
					else USART_voidSendString("\n Incorrect try again ");
    206c:	8e e0       	ldi	r24, 0x0E	; 14
    206e:	91 e0       	ldi	r25, 0x01	; 1
    2070:	0e 94 10 09 	call	0x1220	; 0x1220 <USART_voidSendString>
    2074:	bc cf       	rjmp	.-136    	; 0x1fee <main+0xbb8>
				}
				DIO_vidWritePinValue(DIO_PORT_D,DIO_PIN_7,DIO_PIN_LOW);
    2076:	83 e0       	ldi	r24, 0x03	; 3
    2078:	67 e0       	ldi	r22, 0x07	; 7
    207a:	40 e0       	ldi	r20, 0x00	; 0
    207c:	0e 94 8d 06 	call	0xd1a	; 0xd1a <DIO_vidWritePinValue>
    2080:	85 ce       	rjmp	.-758    	; 0x1d8c <main+0x956>
				break;
			}
			else
			{
				if(y<2)
    2082:	fe 01       	movw	r30, r28
    2084:	ef 5b       	subi	r30, 0xBF	; 191
    2086:	ff 4f       	sbci	r31, 0xFF	; 255
    2088:	80 81       	ld	r24, Z
    208a:	82 30       	cpi	r24, 0x02	; 2
    208c:	28 f4       	brcc	.+10     	; 0x2098 <main+0xc62>
				{
					USART_voidSendString("\n Invalid Password Please try again : ");
    208e:	85 e2       	ldi	r24, 0x25	; 37
    2090:	91 e0       	ldi	r25, 0x01	; 1
    2092:	0e 94 10 09 	call	0x1220	; 0x1220 <USART_voidSendString>
    2096:	0f c1       	rjmp	.+542    	; 0x22b6 <main+0xe80>

				//--------------Wrong Password 3 time -----------//

				else
				{
					USART_voidSendString("\n\n !!!! Wrong Entry !!!! \n ");
    2098:	8c e4       	ldi	r24, 0x4C	; 76
    209a:	91 e0       	ldi	r25, 0x01	; 1
    209c:	0e 94 10 09 	call	0x1220	; 0x1220 <USART_voidSendString>
					for(u8 a=0;a<=7;a++)
    20a0:	1a ae       	std	Y+58, r1	; 0x3a
    20a2:	05 c1       	rjmp	.+522    	; 0x22ae <main+0xe78>
					{
						DIO_vidWritePinValue(DIO_PORT_D,DIO_PIN_6,DIO_PIN_HIGH);
    20a4:	83 e0       	ldi	r24, 0x03	; 3
    20a6:	66 e0       	ldi	r22, 0x06	; 6
    20a8:	41 e0       	ldi	r20, 0x01	; 1
    20aa:	0e 94 8d 06 	call	0xd1a	; 0xd1a <DIO_vidWritePinValue>
						DIO_vidWritePinValue(DIO_PORT_D,DIO_PIN_5,DIO_PIN_HIGH);
    20ae:	83 e0       	ldi	r24, 0x03	; 3
    20b0:	65 e0       	ldi	r22, 0x05	; 5
    20b2:	41 e0       	ldi	r20, 0x01	; 1
    20b4:	0e 94 8d 06 	call	0xd1a	; 0xd1a <DIO_vidWritePinValue>
						DIO_vidWritePinValue(DIO_PORT_D,DIO_PIN_4,DIO_PIN_HIGH);
    20b8:	83 e0       	ldi	r24, 0x03	; 3
    20ba:	64 e0       	ldi	r22, 0x04	; 4
    20bc:	41 e0       	ldi	r20, 0x01	; 1
    20be:	0e 94 8d 06 	call	0xd1a	; 0xd1a <DIO_vidWritePinValue>
    20c2:	80 e0       	ldi	r24, 0x00	; 0
    20c4:	90 e0       	ldi	r25, 0x00	; 0
    20c6:	a6 e9       	ldi	r26, 0x96	; 150
    20c8:	b3 e4       	ldi	r27, 0x43	; 67
    20ca:	8d ab       	std	Y+53, r24	; 0x35
    20cc:	9e ab       	std	Y+54, r25	; 0x36
    20ce:	af ab       	std	Y+55, r26	; 0x37
    20d0:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20d2:	6d a9       	ldd	r22, Y+53	; 0x35
    20d4:	7e a9       	ldd	r23, Y+54	; 0x36
    20d6:	8f a9       	ldd	r24, Y+55	; 0x37
    20d8:	98 ad       	ldd	r25, Y+56	; 0x38
    20da:	20 e0       	ldi	r18, 0x00	; 0
    20dc:	30 e0       	ldi	r19, 0x00	; 0
    20de:	4a ef       	ldi	r20, 0xFA	; 250
    20e0:	54 e4       	ldi	r21, 0x44	; 68
    20e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20e6:	dc 01       	movw	r26, r24
    20e8:	cb 01       	movw	r24, r22
    20ea:	89 ab       	std	Y+49, r24	; 0x31
    20ec:	9a ab       	std	Y+50, r25	; 0x32
    20ee:	ab ab       	std	Y+51, r26	; 0x33
    20f0:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    20f2:	69 a9       	ldd	r22, Y+49	; 0x31
    20f4:	7a a9       	ldd	r23, Y+50	; 0x32
    20f6:	8b a9       	ldd	r24, Y+51	; 0x33
    20f8:	9c a9       	ldd	r25, Y+52	; 0x34
    20fa:	20 e0       	ldi	r18, 0x00	; 0
    20fc:	30 e0       	ldi	r19, 0x00	; 0
    20fe:	40 e8       	ldi	r20, 0x80	; 128
    2100:	5f e3       	ldi	r21, 0x3F	; 63
    2102:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2106:	88 23       	and	r24, r24
    2108:	2c f4       	brge	.+10     	; 0x2114 <main+0xcde>
		__ticks = 1;
    210a:	81 e0       	ldi	r24, 0x01	; 1
    210c:	90 e0       	ldi	r25, 0x00	; 0
    210e:	98 ab       	std	Y+48, r25	; 0x30
    2110:	8f a7       	std	Y+47, r24	; 0x2f
    2112:	3f c0       	rjmp	.+126    	; 0x2192 <main+0xd5c>
	else if (__tmp > 65535)
    2114:	69 a9       	ldd	r22, Y+49	; 0x31
    2116:	7a a9       	ldd	r23, Y+50	; 0x32
    2118:	8b a9       	ldd	r24, Y+51	; 0x33
    211a:	9c a9       	ldd	r25, Y+52	; 0x34
    211c:	20 e0       	ldi	r18, 0x00	; 0
    211e:	3f ef       	ldi	r19, 0xFF	; 255
    2120:	4f e7       	ldi	r20, 0x7F	; 127
    2122:	57 e4       	ldi	r21, 0x47	; 71
    2124:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2128:	18 16       	cp	r1, r24
    212a:	4c f5       	brge	.+82     	; 0x217e <main+0xd48>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    212c:	6d a9       	ldd	r22, Y+53	; 0x35
    212e:	7e a9       	ldd	r23, Y+54	; 0x36
    2130:	8f a9       	ldd	r24, Y+55	; 0x37
    2132:	98 ad       	ldd	r25, Y+56	; 0x38
    2134:	20 e0       	ldi	r18, 0x00	; 0
    2136:	30 e0       	ldi	r19, 0x00	; 0
    2138:	40 e2       	ldi	r20, 0x20	; 32
    213a:	51 e4       	ldi	r21, 0x41	; 65
    213c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2140:	dc 01       	movw	r26, r24
    2142:	cb 01       	movw	r24, r22
    2144:	bc 01       	movw	r22, r24
    2146:	cd 01       	movw	r24, r26
    2148:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    214c:	dc 01       	movw	r26, r24
    214e:	cb 01       	movw	r24, r22
    2150:	98 ab       	std	Y+48, r25	; 0x30
    2152:	8f a7       	std	Y+47, r24	; 0x2f
    2154:	0f c0       	rjmp	.+30     	; 0x2174 <main+0xd3e>
    2156:	88 ec       	ldi	r24, 0xC8	; 200
    2158:	90 e0       	ldi	r25, 0x00	; 0
    215a:	9e a7       	std	Y+46, r25	; 0x2e
    215c:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    215e:	8d a5       	ldd	r24, Y+45	; 0x2d
    2160:	9e a5       	ldd	r25, Y+46	; 0x2e
    2162:	01 97       	sbiw	r24, 0x01	; 1
    2164:	f1 f7       	brne	.-4      	; 0x2162 <main+0xd2c>
    2166:	9e a7       	std	Y+46, r25	; 0x2e
    2168:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    216a:	8f a5       	ldd	r24, Y+47	; 0x2f
    216c:	98 a9       	ldd	r25, Y+48	; 0x30
    216e:	01 97       	sbiw	r24, 0x01	; 1
    2170:	98 ab       	std	Y+48, r25	; 0x30
    2172:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2174:	8f a5       	ldd	r24, Y+47	; 0x2f
    2176:	98 a9       	ldd	r25, Y+48	; 0x30
    2178:	00 97       	sbiw	r24, 0x00	; 0
    217a:	69 f7       	brne	.-38     	; 0x2156 <main+0xd20>
    217c:	14 c0       	rjmp	.+40     	; 0x21a6 <main+0xd70>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    217e:	69 a9       	ldd	r22, Y+49	; 0x31
    2180:	7a a9       	ldd	r23, Y+50	; 0x32
    2182:	8b a9       	ldd	r24, Y+51	; 0x33
    2184:	9c a9       	ldd	r25, Y+52	; 0x34
    2186:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    218a:	dc 01       	movw	r26, r24
    218c:	cb 01       	movw	r24, r22
    218e:	98 ab       	std	Y+48, r25	; 0x30
    2190:	8f a7       	std	Y+47, r24	; 0x2f
    2192:	8f a5       	ldd	r24, Y+47	; 0x2f
    2194:	98 a9       	ldd	r25, Y+48	; 0x30
    2196:	9c a7       	std	Y+44, r25	; 0x2c
    2198:	8b a7       	std	Y+43, r24	; 0x2b
    219a:	8b a5       	ldd	r24, Y+43	; 0x2b
    219c:	9c a5       	ldd	r25, Y+44	; 0x2c
    219e:	01 97       	sbiw	r24, 0x01	; 1
    21a0:	f1 f7       	brne	.-4      	; 0x219e <main+0xd68>
    21a2:	9c a7       	std	Y+44, r25	; 0x2c
    21a4:	8b a7       	std	Y+43, r24	; 0x2b
						_delay_ms(300);
						DIO_vidWritePinValue(DIO_PORT_D,DIO_PIN_6,DIO_PIN_LOW);
    21a6:	83 e0       	ldi	r24, 0x03	; 3
    21a8:	66 e0       	ldi	r22, 0x06	; 6
    21aa:	40 e0       	ldi	r20, 0x00	; 0
    21ac:	0e 94 8d 06 	call	0xd1a	; 0xd1a <DIO_vidWritePinValue>
						DIO_vidWritePinValue(DIO_PORT_D,DIO_PIN_5,DIO_PIN_LOW);
    21b0:	83 e0       	ldi	r24, 0x03	; 3
    21b2:	65 e0       	ldi	r22, 0x05	; 5
    21b4:	40 e0       	ldi	r20, 0x00	; 0
    21b6:	0e 94 8d 06 	call	0xd1a	; 0xd1a <DIO_vidWritePinValue>
						DIO_vidWritePinValue(DIO_PORT_D,DIO_PIN_4,DIO_PIN_LOW);
    21ba:	83 e0       	ldi	r24, 0x03	; 3
    21bc:	64 e0       	ldi	r22, 0x04	; 4
    21be:	40 e0       	ldi	r20, 0x00	; 0
    21c0:	0e 94 8d 06 	call	0xd1a	; 0xd1a <DIO_vidWritePinValue>
    21c4:	80 e0       	ldi	r24, 0x00	; 0
    21c6:	90 e0       	ldi	r25, 0x00	; 0
    21c8:	a6 e9       	ldi	r26, 0x96	; 150
    21ca:	b3 e4       	ldi	r27, 0x43	; 67
    21cc:	8f a3       	std	Y+39, r24	; 0x27
    21ce:	98 a7       	std	Y+40, r25	; 0x28
    21d0:	a9 a7       	std	Y+41, r26	; 0x29
    21d2:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21d4:	6f a1       	ldd	r22, Y+39	; 0x27
    21d6:	78 a5       	ldd	r23, Y+40	; 0x28
    21d8:	89 a5       	ldd	r24, Y+41	; 0x29
    21da:	9a a5       	ldd	r25, Y+42	; 0x2a
    21dc:	20 e0       	ldi	r18, 0x00	; 0
    21de:	30 e0       	ldi	r19, 0x00	; 0
    21e0:	4a ef       	ldi	r20, 0xFA	; 250
    21e2:	54 e4       	ldi	r21, 0x44	; 68
    21e4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21e8:	dc 01       	movw	r26, r24
    21ea:	cb 01       	movw	r24, r22
    21ec:	8b a3       	std	Y+35, r24	; 0x23
    21ee:	9c a3       	std	Y+36, r25	; 0x24
    21f0:	ad a3       	std	Y+37, r26	; 0x25
    21f2:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    21f4:	6b a1       	ldd	r22, Y+35	; 0x23
    21f6:	7c a1       	ldd	r23, Y+36	; 0x24
    21f8:	8d a1       	ldd	r24, Y+37	; 0x25
    21fa:	9e a1       	ldd	r25, Y+38	; 0x26
    21fc:	20 e0       	ldi	r18, 0x00	; 0
    21fe:	30 e0       	ldi	r19, 0x00	; 0
    2200:	40 e8       	ldi	r20, 0x80	; 128
    2202:	5f e3       	ldi	r21, 0x3F	; 63
    2204:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2208:	88 23       	and	r24, r24
    220a:	2c f4       	brge	.+10     	; 0x2216 <main+0xde0>
		__ticks = 1;
    220c:	81 e0       	ldi	r24, 0x01	; 1
    220e:	90 e0       	ldi	r25, 0x00	; 0
    2210:	9a a3       	std	Y+34, r25	; 0x22
    2212:	89 a3       	std	Y+33, r24	; 0x21
    2214:	3f c0       	rjmp	.+126    	; 0x2294 <main+0xe5e>
	else if (__tmp > 65535)
    2216:	6b a1       	ldd	r22, Y+35	; 0x23
    2218:	7c a1       	ldd	r23, Y+36	; 0x24
    221a:	8d a1       	ldd	r24, Y+37	; 0x25
    221c:	9e a1       	ldd	r25, Y+38	; 0x26
    221e:	20 e0       	ldi	r18, 0x00	; 0
    2220:	3f ef       	ldi	r19, 0xFF	; 255
    2222:	4f e7       	ldi	r20, 0x7F	; 127
    2224:	57 e4       	ldi	r21, 0x47	; 71
    2226:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    222a:	18 16       	cp	r1, r24
    222c:	4c f5       	brge	.+82     	; 0x2280 <main+0xe4a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    222e:	6f a1       	ldd	r22, Y+39	; 0x27
    2230:	78 a5       	ldd	r23, Y+40	; 0x28
    2232:	89 a5       	ldd	r24, Y+41	; 0x29
    2234:	9a a5       	ldd	r25, Y+42	; 0x2a
    2236:	20 e0       	ldi	r18, 0x00	; 0
    2238:	30 e0       	ldi	r19, 0x00	; 0
    223a:	40 e2       	ldi	r20, 0x20	; 32
    223c:	51 e4       	ldi	r21, 0x41	; 65
    223e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2242:	dc 01       	movw	r26, r24
    2244:	cb 01       	movw	r24, r22
    2246:	bc 01       	movw	r22, r24
    2248:	cd 01       	movw	r24, r26
    224a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    224e:	dc 01       	movw	r26, r24
    2250:	cb 01       	movw	r24, r22
    2252:	9a a3       	std	Y+34, r25	; 0x22
    2254:	89 a3       	std	Y+33, r24	; 0x21
    2256:	0f c0       	rjmp	.+30     	; 0x2276 <main+0xe40>
    2258:	88 ec       	ldi	r24, 0xC8	; 200
    225a:	90 e0       	ldi	r25, 0x00	; 0
    225c:	98 a3       	std	Y+32, r25	; 0x20
    225e:	8f 8f       	std	Y+31, r24	; 0x1f
    2260:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2262:	98 a1       	ldd	r25, Y+32	; 0x20
    2264:	01 97       	sbiw	r24, 0x01	; 1
    2266:	f1 f7       	brne	.-4      	; 0x2264 <main+0xe2e>
    2268:	98 a3       	std	Y+32, r25	; 0x20
    226a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    226c:	89 a1       	ldd	r24, Y+33	; 0x21
    226e:	9a a1       	ldd	r25, Y+34	; 0x22
    2270:	01 97       	sbiw	r24, 0x01	; 1
    2272:	9a a3       	std	Y+34, r25	; 0x22
    2274:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2276:	89 a1       	ldd	r24, Y+33	; 0x21
    2278:	9a a1       	ldd	r25, Y+34	; 0x22
    227a:	00 97       	sbiw	r24, 0x00	; 0
    227c:	69 f7       	brne	.-38     	; 0x2258 <main+0xe22>
    227e:	14 c0       	rjmp	.+40     	; 0x22a8 <main+0xe72>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2280:	6b a1       	ldd	r22, Y+35	; 0x23
    2282:	7c a1       	ldd	r23, Y+36	; 0x24
    2284:	8d a1       	ldd	r24, Y+37	; 0x25
    2286:	9e a1       	ldd	r25, Y+38	; 0x26
    2288:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    228c:	dc 01       	movw	r26, r24
    228e:	cb 01       	movw	r24, r22
    2290:	9a a3       	std	Y+34, r25	; 0x22
    2292:	89 a3       	std	Y+33, r24	; 0x21
    2294:	89 a1       	ldd	r24, Y+33	; 0x21
    2296:	9a a1       	ldd	r25, Y+34	; 0x22
    2298:	9e 8f       	std	Y+30, r25	; 0x1e
    229a:	8d 8f       	std	Y+29, r24	; 0x1d
    229c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    229e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    22a0:	01 97       	sbiw	r24, 0x01	; 1
    22a2:	f1 f7       	brne	.-4      	; 0x22a0 <main+0xe6a>
    22a4:	9e 8f       	std	Y+30, r25	; 0x1e
    22a6:	8d 8f       	std	Y+29, r24	; 0x1d
				//--------------Wrong Password 3 time -----------//

				else
				{
					USART_voidSendString("\n\n !!!! Wrong Entry !!!! \n ");
					for(u8 a=0;a<=7;a++)
    22a8:	8a ad       	ldd	r24, Y+58	; 0x3a
    22aa:	8f 5f       	subi	r24, 0xFF	; 255
    22ac:	8a af       	std	Y+58, r24	; 0x3a
    22ae:	8a ad       	ldd	r24, Y+58	; 0x3a
    22b0:	88 30       	cpi	r24, 0x08	; 8
    22b2:	08 f4       	brcc	.+2      	; 0x22b6 <main+0xe80>
    22b4:	f7 ce       	rjmp	.-530    	; 0x20a4 <main+0xc6e>
	{

		USART_voidSendString("\n\n Please Enter ");

		///---------- Receiving Password ---------///
		for(u8 y=0;y<=2;y++)
    22b6:	de 01       	movw	r26, r28
    22b8:	af 5b       	subi	r26, 0xBF	; 191
    22ba:	bf 4f       	sbci	r27, 0xFF	; 255
    22bc:	fe 01       	movw	r30, r28
    22be:	ef 5b       	subi	r30, 0xBF	; 191
    22c0:	ff 4f       	sbci	r31, 0xFF	; 255
    22c2:	80 81       	ld	r24, Z
    22c4:	8f 5f       	subi	r24, 0xFF	; 255
    22c6:	8c 93       	st	X, r24
    22c8:	fe 01       	movw	r30, r28
    22ca:	ef 5b       	subi	r30, 0xBF	; 191
    22cc:	ff 4f       	sbci	r31, 0xFF	; 255
    22ce:	80 81       	ld	r24, Z
    22d0:	83 30       	cpi	r24, 0x03	; 3
    22d2:	08 f4       	brcc	.+2      	; 0x22d6 <main+0xea0>
    22d4:	2c ce       	rjmp	.-936    	; 0x1f2e <main+0xaf8>
    22d6:	5a cd       	rjmp	.-1356   	; 0x1d8c <main+0x956>

	//---------------Wrong Username 3 times----------///

	else
	{
		USART_voidSendString("\n\n !!!! Wrong Entry !!!! \n ");
    22d8:	8c e4       	ldi	r24, 0x4C	; 76
    22da:	91 e0       	ldi	r25, 0x01	; 1
    22dc:	0e 94 10 09 	call	0x1220	; 0x1220 <USART_voidSendString>
		for(u8 a=0;a<=7;a++)
    22e0:	19 ae       	std	Y+57, r1	; 0x39
    22e2:	05 c1       	rjmp	.+522    	; 0x24ee <main+0x10b8>
		{
			DIO_vidWritePinValue(DIO_PORT_D,DIO_PIN_6,DIO_PIN_HIGH);
    22e4:	83 e0       	ldi	r24, 0x03	; 3
    22e6:	66 e0       	ldi	r22, 0x06	; 6
    22e8:	41 e0       	ldi	r20, 0x01	; 1
    22ea:	0e 94 8d 06 	call	0xd1a	; 0xd1a <DIO_vidWritePinValue>
			DIO_vidWritePinValue(DIO_PORT_D,DIO_PIN_5,DIO_PIN_HIGH);
    22ee:	83 e0       	ldi	r24, 0x03	; 3
    22f0:	65 e0       	ldi	r22, 0x05	; 5
    22f2:	41 e0       	ldi	r20, 0x01	; 1
    22f4:	0e 94 8d 06 	call	0xd1a	; 0xd1a <DIO_vidWritePinValue>
			DIO_vidWritePinValue(DIO_PORT_D,DIO_PIN_4,DIO_PIN_HIGH);
    22f8:	83 e0       	ldi	r24, 0x03	; 3
    22fa:	64 e0       	ldi	r22, 0x04	; 4
    22fc:	41 e0       	ldi	r20, 0x01	; 1
    22fe:	0e 94 8d 06 	call	0xd1a	; 0xd1a <DIO_vidWritePinValue>
    2302:	80 e0       	ldi	r24, 0x00	; 0
    2304:	90 e0       	ldi	r25, 0x00	; 0
    2306:	a6 e9       	ldi	r26, 0x96	; 150
    2308:	b3 e4       	ldi	r27, 0x43	; 67
    230a:	89 8f       	std	Y+25, r24	; 0x19
    230c:	9a 8f       	std	Y+26, r25	; 0x1a
    230e:	ab 8f       	std	Y+27, r26	; 0x1b
    2310:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2312:	69 8d       	ldd	r22, Y+25	; 0x19
    2314:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2316:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2318:	9c 8d       	ldd	r25, Y+28	; 0x1c
    231a:	20 e0       	ldi	r18, 0x00	; 0
    231c:	30 e0       	ldi	r19, 0x00	; 0
    231e:	4a ef       	ldi	r20, 0xFA	; 250
    2320:	54 e4       	ldi	r21, 0x44	; 68
    2322:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2326:	dc 01       	movw	r26, r24
    2328:	cb 01       	movw	r24, r22
    232a:	8d 8b       	std	Y+21, r24	; 0x15
    232c:	9e 8b       	std	Y+22, r25	; 0x16
    232e:	af 8b       	std	Y+23, r26	; 0x17
    2330:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2332:	6d 89       	ldd	r22, Y+21	; 0x15
    2334:	7e 89       	ldd	r23, Y+22	; 0x16
    2336:	8f 89       	ldd	r24, Y+23	; 0x17
    2338:	98 8d       	ldd	r25, Y+24	; 0x18
    233a:	20 e0       	ldi	r18, 0x00	; 0
    233c:	30 e0       	ldi	r19, 0x00	; 0
    233e:	40 e8       	ldi	r20, 0x80	; 128
    2340:	5f e3       	ldi	r21, 0x3F	; 63
    2342:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2346:	88 23       	and	r24, r24
    2348:	2c f4       	brge	.+10     	; 0x2354 <main+0xf1e>
		__ticks = 1;
    234a:	81 e0       	ldi	r24, 0x01	; 1
    234c:	90 e0       	ldi	r25, 0x00	; 0
    234e:	9c 8b       	std	Y+20, r25	; 0x14
    2350:	8b 8b       	std	Y+19, r24	; 0x13
    2352:	3f c0       	rjmp	.+126    	; 0x23d2 <main+0xf9c>
	else if (__tmp > 65535)
    2354:	6d 89       	ldd	r22, Y+21	; 0x15
    2356:	7e 89       	ldd	r23, Y+22	; 0x16
    2358:	8f 89       	ldd	r24, Y+23	; 0x17
    235a:	98 8d       	ldd	r25, Y+24	; 0x18
    235c:	20 e0       	ldi	r18, 0x00	; 0
    235e:	3f ef       	ldi	r19, 0xFF	; 255
    2360:	4f e7       	ldi	r20, 0x7F	; 127
    2362:	57 e4       	ldi	r21, 0x47	; 71
    2364:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2368:	18 16       	cp	r1, r24
    236a:	4c f5       	brge	.+82     	; 0x23be <main+0xf88>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    236c:	69 8d       	ldd	r22, Y+25	; 0x19
    236e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2370:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2372:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2374:	20 e0       	ldi	r18, 0x00	; 0
    2376:	30 e0       	ldi	r19, 0x00	; 0
    2378:	40 e2       	ldi	r20, 0x20	; 32
    237a:	51 e4       	ldi	r21, 0x41	; 65
    237c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2380:	dc 01       	movw	r26, r24
    2382:	cb 01       	movw	r24, r22
    2384:	bc 01       	movw	r22, r24
    2386:	cd 01       	movw	r24, r26
    2388:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    238c:	dc 01       	movw	r26, r24
    238e:	cb 01       	movw	r24, r22
    2390:	9c 8b       	std	Y+20, r25	; 0x14
    2392:	8b 8b       	std	Y+19, r24	; 0x13
    2394:	0f c0       	rjmp	.+30     	; 0x23b4 <main+0xf7e>
    2396:	88 ec       	ldi	r24, 0xC8	; 200
    2398:	90 e0       	ldi	r25, 0x00	; 0
    239a:	9a 8b       	std	Y+18, r25	; 0x12
    239c:	89 8b       	std	Y+17, r24	; 0x11
    239e:	89 89       	ldd	r24, Y+17	; 0x11
    23a0:	9a 89       	ldd	r25, Y+18	; 0x12
    23a2:	01 97       	sbiw	r24, 0x01	; 1
    23a4:	f1 f7       	brne	.-4      	; 0x23a2 <main+0xf6c>
    23a6:	9a 8b       	std	Y+18, r25	; 0x12
    23a8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23aa:	8b 89       	ldd	r24, Y+19	; 0x13
    23ac:	9c 89       	ldd	r25, Y+20	; 0x14
    23ae:	01 97       	sbiw	r24, 0x01	; 1
    23b0:	9c 8b       	std	Y+20, r25	; 0x14
    23b2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23b4:	8b 89       	ldd	r24, Y+19	; 0x13
    23b6:	9c 89       	ldd	r25, Y+20	; 0x14
    23b8:	00 97       	sbiw	r24, 0x00	; 0
    23ba:	69 f7       	brne	.-38     	; 0x2396 <main+0xf60>
    23bc:	14 c0       	rjmp	.+40     	; 0x23e6 <main+0xfb0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23be:	6d 89       	ldd	r22, Y+21	; 0x15
    23c0:	7e 89       	ldd	r23, Y+22	; 0x16
    23c2:	8f 89       	ldd	r24, Y+23	; 0x17
    23c4:	98 8d       	ldd	r25, Y+24	; 0x18
    23c6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23ca:	dc 01       	movw	r26, r24
    23cc:	cb 01       	movw	r24, r22
    23ce:	9c 8b       	std	Y+20, r25	; 0x14
    23d0:	8b 8b       	std	Y+19, r24	; 0x13
    23d2:	8b 89       	ldd	r24, Y+19	; 0x13
    23d4:	9c 89       	ldd	r25, Y+20	; 0x14
    23d6:	98 8b       	std	Y+16, r25	; 0x10
    23d8:	8f 87       	std	Y+15, r24	; 0x0f
    23da:	8f 85       	ldd	r24, Y+15	; 0x0f
    23dc:	98 89       	ldd	r25, Y+16	; 0x10
    23de:	01 97       	sbiw	r24, 0x01	; 1
    23e0:	f1 f7       	brne	.-4      	; 0x23de <main+0xfa8>
    23e2:	98 8b       	std	Y+16, r25	; 0x10
    23e4:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(300);
			DIO_vidWritePinValue(DIO_PORT_D,DIO_PIN_6,DIO_PIN_LOW);
    23e6:	83 e0       	ldi	r24, 0x03	; 3
    23e8:	66 e0       	ldi	r22, 0x06	; 6
    23ea:	40 e0       	ldi	r20, 0x00	; 0
    23ec:	0e 94 8d 06 	call	0xd1a	; 0xd1a <DIO_vidWritePinValue>
			DIO_vidWritePinValue(DIO_PORT_D,DIO_PIN_5,DIO_PIN_LOW);
    23f0:	83 e0       	ldi	r24, 0x03	; 3
    23f2:	65 e0       	ldi	r22, 0x05	; 5
    23f4:	40 e0       	ldi	r20, 0x00	; 0
    23f6:	0e 94 8d 06 	call	0xd1a	; 0xd1a <DIO_vidWritePinValue>
			DIO_vidWritePinValue(DIO_PORT_D,DIO_PIN_4,DIO_PIN_LOW);
    23fa:	83 e0       	ldi	r24, 0x03	; 3
    23fc:	64 e0       	ldi	r22, 0x04	; 4
    23fe:	40 e0       	ldi	r20, 0x00	; 0
    2400:	0e 94 8d 06 	call	0xd1a	; 0xd1a <DIO_vidWritePinValue>
    2404:	80 e0       	ldi	r24, 0x00	; 0
    2406:	90 e0       	ldi	r25, 0x00	; 0
    2408:	a6 e9       	ldi	r26, 0x96	; 150
    240a:	b3 e4       	ldi	r27, 0x43	; 67
    240c:	8b 87       	std	Y+11, r24	; 0x0b
    240e:	9c 87       	std	Y+12, r25	; 0x0c
    2410:	ad 87       	std	Y+13, r26	; 0x0d
    2412:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2414:	6b 85       	ldd	r22, Y+11	; 0x0b
    2416:	7c 85       	ldd	r23, Y+12	; 0x0c
    2418:	8d 85       	ldd	r24, Y+13	; 0x0d
    241a:	9e 85       	ldd	r25, Y+14	; 0x0e
    241c:	20 e0       	ldi	r18, 0x00	; 0
    241e:	30 e0       	ldi	r19, 0x00	; 0
    2420:	4a ef       	ldi	r20, 0xFA	; 250
    2422:	54 e4       	ldi	r21, 0x44	; 68
    2424:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2428:	dc 01       	movw	r26, r24
    242a:	cb 01       	movw	r24, r22
    242c:	8f 83       	std	Y+7, r24	; 0x07
    242e:	98 87       	std	Y+8, r25	; 0x08
    2430:	a9 87       	std	Y+9, r26	; 0x09
    2432:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2434:	6f 81       	ldd	r22, Y+7	; 0x07
    2436:	78 85       	ldd	r23, Y+8	; 0x08
    2438:	89 85       	ldd	r24, Y+9	; 0x09
    243a:	9a 85       	ldd	r25, Y+10	; 0x0a
    243c:	20 e0       	ldi	r18, 0x00	; 0
    243e:	30 e0       	ldi	r19, 0x00	; 0
    2440:	40 e8       	ldi	r20, 0x80	; 128
    2442:	5f e3       	ldi	r21, 0x3F	; 63
    2444:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2448:	88 23       	and	r24, r24
    244a:	2c f4       	brge	.+10     	; 0x2456 <main+0x1020>
		__ticks = 1;
    244c:	81 e0       	ldi	r24, 0x01	; 1
    244e:	90 e0       	ldi	r25, 0x00	; 0
    2450:	9e 83       	std	Y+6, r25	; 0x06
    2452:	8d 83       	std	Y+5, r24	; 0x05
    2454:	3f c0       	rjmp	.+126    	; 0x24d4 <main+0x109e>
	else if (__tmp > 65535)
    2456:	6f 81       	ldd	r22, Y+7	; 0x07
    2458:	78 85       	ldd	r23, Y+8	; 0x08
    245a:	89 85       	ldd	r24, Y+9	; 0x09
    245c:	9a 85       	ldd	r25, Y+10	; 0x0a
    245e:	20 e0       	ldi	r18, 0x00	; 0
    2460:	3f ef       	ldi	r19, 0xFF	; 255
    2462:	4f e7       	ldi	r20, 0x7F	; 127
    2464:	57 e4       	ldi	r21, 0x47	; 71
    2466:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    246a:	18 16       	cp	r1, r24
    246c:	4c f5       	brge	.+82     	; 0x24c0 <main+0x108a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    246e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2470:	7c 85       	ldd	r23, Y+12	; 0x0c
    2472:	8d 85       	ldd	r24, Y+13	; 0x0d
    2474:	9e 85       	ldd	r25, Y+14	; 0x0e
    2476:	20 e0       	ldi	r18, 0x00	; 0
    2478:	30 e0       	ldi	r19, 0x00	; 0
    247a:	40 e2       	ldi	r20, 0x20	; 32
    247c:	51 e4       	ldi	r21, 0x41	; 65
    247e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2482:	dc 01       	movw	r26, r24
    2484:	cb 01       	movw	r24, r22
    2486:	bc 01       	movw	r22, r24
    2488:	cd 01       	movw	r24, r26
    248a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    248e:	dc 01       	movw	r26, r24
    2490:	cb 01       	movw	r24, r22
    2492:	9e 83       	std	Y+6, r25	; 0x06
    2494:	8d 83       	std	Y+5, r24	; 0x05
    2496:	0f c0       	rjmp	.+30     	; 0x24b6 <main+0x1080>
    2498:	88 ec       	ldi	r24, 0xC8	; 200
    249a:	90 e0       	ldi	r25, 0x00	; 0
    249c:	9c 83       	std	Y+4, r25	; 0x04
    249e:	8b 83       	std	Y+3, r24	; 0x03
    24a0:	8b 81       	ldd	r24, Y+3	; 0x03
    24a2:	9c 81       	ldd	r25, Y+4	; 0x04
    24a4:	01 97       	sbiw	r24, 0x01	; 1
    24a6:	f1 f7       	brne	.-4      	; 0x24a4 <main+0x106e>
    24a8:	9c 83       	std	Y+4, r25	; 0x04
    24aa:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24ac:	8d 81       	ldd	r24, Y+5	; 0x05
    24ae:	9e 81       	ldd	r25, Y+6	; 0x06
    24b0:	01 97       	sbiw	r24, 0x01	; 1
    24b2:	9e 83       	std	Y+6, r25	; 0x06
    24b4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24b6:	8d 81       	ldd	r24, Y+5	; 0x05
    24b8:	9e 81       	ldd	r25, Y+6	; 0x06
    24ba:	00 97       	sbiw	r24, 0x00	; 0
    24bc:	69 f7       	brne	.-38     	; 0x2498 <main+0x1062>
    24be:	14 c0       	rjmp	.+40     	; 0x24e8 <main+0x10b2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24c0:	6f 81       	ldd	r22, Y+7	; 0x07
    24c2:	78 85       	ldd	r23, Y+8	; 0x08
    24c4:	89 85       	ldd	r24, Y+9	; 0x09
    24c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    24c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24cc:	dc 01       	movw	r26, r24
    24ce:	cb 01       	movw	r24, r22
    24d0:	9e 83       	std	Y+6, r25	; 0x06
    24d2:	8d 83       	std	Y+5, r24	; 0x05
    24d4:	8d 81       	ldd	r24, Y+5	; 0x05
    24d6:	9e 81       	ldd	r25, Y+6	; 0x06
    24d8:	9a 83       	std	Y+2, r25	; 0x02
    24da:	89 83       	std	Y+1, r24	; 0x01
    24dc:	89 81       	ldd	r24, Y+1	; 0x01
    24de:	9a 81       	ldd	r25, Y+2	; 0x02
    24e0:	01 97       	sbiw	r24, 0x01	; 1
    24e2:	f1 f7       	brne	.-4      	; 0x24e0 <main+0x10aa>
    24e4:	9a 83       	std	Y+2, r25	; 0x02
    24e6:	89 83       	std	Y+1, r24	; 0x01
	//---------------Wrong Username 3 times----------///

	else
	{
		USART_voidSendString("\n\n !!!! Wrong Entry !!!! \n ");
		for(u8 a=0;a<=7;a++)
    24e8:	89 ad       	ldd	r24, Y+57	; 0x39
    24ea:	8f 5f       	subi	r24, 0xFF	; 255
    24ec:	89 af       	std	Y+57, r24	; 0x39
    24ee:	89 ad       	ldd	r24, Y+57	; 0x39
    24f0:	88 30       	cpi	r24, 0x08	; 8
    24f2:	08 f4       	brcc	.+2      	; 0x24f6 <main+0x10c0>
    24f4:	f7 ce       	rjmp	.-530    	; 0x22e4 <main+0xeae>
    24f6:	4a cc       	rjmp	.-1900   	; 0x1d8c <main+0x956>

000024f8 <__udivmodqi4>:
    24f8:	99 1b       	sub	r25, r25
    24fa:	79 e0       	ldi	r23, 0x09	; 9
    24fc:	04 c0       	rjmp	.+8      	; 0x2506 <__udivmodqi4_ep>

000024fe <__udivmodqi4_loop>:
    24fe:	99 1f       	adc	r25, r25
    2500:	96 17       	cp	r25, r22
    2502:	08 f0       	brcs	.+2      	; 0x2506 <__udivmodqi4_ep>
    2504:	96 1b       	sub	r25, r22

00002506 <__udivmodqi4_ep>:
    2506:	88 1f       	adc	r24, r24
    2508:	7a 95       	dec	r23
    250a:	c9 f7       	brne	.-14     	; 0x24fe <__udivmodqi4_loop>
    250c:	80 95       	com	r24
    250e:	08 95       	ret

00002510 <__prologue_saves__>:
    2510:	2f 92       	push	r2
    2512:	3f 92       	push	r3
    2514:	4f 92       	push	r4
    2516:	5f 92       	push	r5
    2518:	6f 92       	push	r6
    251a:	7f 92       	push	r7
    251c:	8f 92       	push	r8
    251e:	9f 92       	push	r9
    2520:	af 92       	push	r10
    2522:	bf 92       	push	r11
    2524:	cf 92       	push	r12
    2526:	df 92       	push	r13
    2528:	ef 92       	push	r14
    252a:	ff 92       	push	r15
    252c:	0f 93       	push	r16
    252e:	1f 93       	push	r17
    2530:	cf 93       	push	r28
    2532:	df 93       	push	r29
    2534:	cd b7       	in	r28, 0x3d	; 61
    2536:	de b7       	in	r29, 0x3e	; 62
    2538:	ca 1b       	sub	r28, r26
    253a:	db 0b       	sbc	r29, r27
    253c:	0f b6       	in	r0, 0x3f	; 63
    253e:	f8 94       	cli
    2540:	de bf       	out	0x3e, r29	; 62
    2542:	0f be       	out	0x3f, r0	; 63
    2544:	cd bf       	out	0x3d, r28	; 61
    2546:	09 94       	ijmp

00002548 <__epilogue_restores__>:
    2548:	2a 88       	ldd	r2, Y+18	; 0x12
    254a:	39 88       	ldd	r3, Y+17	; 0x11
    254c:	48 88       	ldd	r4, Y+16	; 0x10
    254e:	5f 84       	ldd	r5, Y+15	; 0x0f
    2550:	6e 84       	ldd	r6, Y+14	; 0x0e
    2552:	7d 84       	ldd	r7, Y+13	; 0x0d
    2554:	8c 84       	ldd	r8, Y+12	; 0x0c
    2556:	9b 84       	ldd	r9, Y+11	; 0x0b
    2558:	aa 84       	ldd	r10, Y+10	; 0x0a
    255a:	b9 84       	ldd	r11, Y+9	; 0x09
    255c:	c8 84       	ldd	r12, Y+8	; 0x08
    255e:	df 80       	ldd	r13, Y+7	; 0x07
    2560:	ee 80       	ldd	r14, Y+6	; 0x06
    2562:	fd 80       	ldd	r15, Y+5	; 0x05
    2564:	0c 81       	ldd	r16, Y+4	; 0x04
    2566:	1b 81       	ldd	r17, Y+3	; 0x03
    2568:	aa 81       	ldd	r26, Y+2	; 0x02
    256a:	b9 81       	ldd	r27, Y+1	; 0x01
    256c:	ce 0f       	add	r28, r30
    256e:	d1 1d       	adc	r29, r1
    2570:	0f b6       	in	r0, 0x3f	; 63
    2572:	f8 94       	cli
    2574:	de bf       	out	0x3e, r29	; 62
    2576:	0f be       	out	0x3f, r0	; 63
    2578:	cd bf       	out	0x3d, r28	; 61
    257a:	ed 01       	movw	r28, r26
    257c:	08 95       	ret

0000257e <_exit>:
    257e:	f8 94       	cli

00002580 <__stop_program>:
    2580:	ff cf       	rjmp	.-2      	; 0x2580 <__stop_program>
